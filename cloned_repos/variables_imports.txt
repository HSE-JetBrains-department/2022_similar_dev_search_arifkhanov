[{"author": "domino-jade-liu", "path": "domino/domino.py", "imports": ["_HttpRequestManager", "pprint", "logging", "ValueError", "len", "polling2", "re", "Exception", "Optional", "validate_is_on_demand_spark_supported", "bs4", "list", "requests", "time", "os", "CLUSTER_TYPE_MIN_SUPPORT", "get_job_status", "__version__", "int", "domino._version", "typing", "validate_distributed_compute_cluster_properties", "MINIMUM_EXTERNAL_VOLUME_MOUNTS_SUPPORT_DOMINO_VERSION", "BeautifulSoup", "get_auth_by_type", "get_default_spark_settings", "functools", "validate_spark_executor_count", "throw_if_information_invalid", "List", "DOMINO_LOG_LEVEL_KEY_NAME", "DOMINO_HOST_KEY_NAME", "validate_on_demand_spark_cluster_properties", "_Routes", "validate_is_external_volume_mounts_supported", "helpers", "exceptions", "str", "MINIMUM_ON_DEMAND_SPARK_CLUSTER_SUPPORT_DOMINO_VERSION", "Tuple"], "variables": ["request_payload", "app_publish", "commitId", "run_stop", "accepted_units", "validated_compute_cluster_properties", "compute_environment_id", "executor_hardware_tier_id", "path", "default_master_hardware_tier", "resolved_hardware_tier_id", "project", "function", "stdout", "query", "job_status", "self", "output_commit_id", "tier", "endpoint_publish", "owner_username", "saveChanges", "useable_environment_list_url", "process_log", "model_version_export_logs", "relationship", "_", "username_or_email", "span_regex", "error_message", "name", "message", "get_default_spark_settings", "r", "max_execution_slot", "logs", "model_version_export_status", "raw_stdout", "validate_on_demand_spark_cluster_properties", "validate_is_external_volume_mounts_supported", "model_version_export", "required_keys", "poll_start", "unpublishRunningApps", "default_spark_setting_url", "response", "supported_types", "description", "project_create", "isDirect", "stdout_msg", "runs_status", "validate_is_on_demand_spark_supported", "api_key", "runs_stdout", "endpoint_state", "collaborators_add", "_configure_logging", "master_hardware_tier_id", "files_upload", "run_id", "model_version_publish", "executor_storage", "job_stop", "returns", "_app_id", "html_start_tags", "projects_list", "_validate_hardware_tier_name", "_validate_environment_id", "job_start_blocking", "app_id", "log", "validate_distributed_compute_cluster_properties", "job", "users", "job_start", "files_list", "user_id", "hardwareTierId", "publishApiEndpoint", "count", "runId", "data", "file", "title", "_host", "html_end_tags", "__app_get_status", "key", "model_versions_get", "endpoint_unpublish", "_put_file", "spark_cluster_properties", "logging_level", "model_publish", "host", "deployment_version", "runs_start", "poll_freq", "default_executor_hardware_tier", "max_poll_time", "get_hardware_tier_id_from_name", "current_retry_count", "show_completed", "project_archive", "app", "environments_list", "command", "request", "__init__", "requires_at_least", "collaborators_remove", "get_job_status", "authenticate", "key_required", "job_id", "get_run_log", "_validate_commit_id", "elapsed_time", "_get", "includeSetupLog", "files_to_exclude", "auth_token", "__app_create", "validate_spark_executor_count", "status", "_useable_environments_list", "retry_count", "default_spark_setting", "model_version_sagemaker_export", "text", "_validate_hardware_tier_id", "valid_relationships", "blobs_get", "_validate_blob_key", "commits_list", "regex", "run_response", "fork_project", "validations", "model_id", "app_unpublish", "project_name", "payload", "_project_id", "required_key_overrides", "run_info", "executor_count", "environment_id", "get_user_id", "domino_token_file", "all_owned_projects", "_validate_information_data_type", "unit", "runs_start_blocking", "throw_if_information_invalid", "collaborators_get", "get_run_info", "job_runtime_execution_details", "_csrf_no_check_header", "url", "Domino", "supported_types_str", "models_list", "hardware_tiers_list", "runs_list"]}, {"author": "Alex Panin", "path": "domino/authentication.py", "imports": ["AuthBase", "RuntimeError", "open", "DOMINO_USER_API_KEY_KEY_NAME", "DOMINO_TOKEN_FILE_KEY_NAME", "HTTPBasicAuth", "get_auth_by_type", "requests.auth", "os", "BearerAuth"], "variables": ["domino_token_file_from_env", "__call__", "self", "domino_token_file", "__init__", "auth_token", "get_auth_by_type", "_from_token_file", "api_key_from_env", "BearerAuth"]}, {"author": "Alex Panin", "path": "domino/domino.py", "imports": ["_HttpRequestManager", "pprint", "logging", "ValueError", "len", "polling2", "re", "Exception", "Optional", "validate_is_on_demand_spark_supported", "bs4", "list", "requests", "time", "os", "CLUSTER_TYPE_MIN_SUPPORT", "get_job_status", "__version__", "int", "domino._version", "typing", "validate_distributed_compute_cluster_properties", "MINIMUM_EXTERNAL_VOLUME_MOUNTS_SUPPORT_DOMINO_VERSION", "BeautifulSoup", "get_auth_by_type", "get_default_spark_settings", "functools", "validate_spark_executor_count", "throw_if_information_invalid", "List", "DOMINO_LOG_LEVEL_KEY_NAME", "DOMINO_HOST_KEY_NAME", "validate_on_demand_spark_cluster_properties", "_Routes", "validate_is_external_volume_mounts_supported", "helpers", "exceptions", "str", "MINIMUM_ON_DEMAND_SPARK_CLUSTER_SUPPORT_DOMINO_VERSION", "Tuple"], "variables": ["request_payload", "app_publish", "commitId", "run_stop", "accepted_units", "validated_compute_cluster_properties", "compute_environment_id", "executor_hardware_tier_id", "path", "default_master_hardware_tier", "resolved_hardware_tier_id", "project", "function", "stdout", "query", "job_status", "self", "output_commit_id", "tier", "endpoint_publish", "owner_username", "saveChanges", "useable_environment_list_url", "process_log", "model_version_export_logs", "relationship", "_", "username_or_email", "span_regex", "error_message", "name", "message", "get_default_spark_settings", "r", "max_execution_slot", "logs", "model_version_export_status", "raw_stdout", "validate_on_demand_spark_cluster_properties", "validate_is_external_volume_mounts_supported", "model_version_export", "required_keys", "poll_start", "unpublishRunningApps", "default_spark_setting_url", "response", "supported_types", "description", "project_create", "isDirect", "stdout_msg", "runs_status", "validate_is_on_demand_spark_supported", "api_key", "runs_stdout", "endpoint_state", "collaborators_add", "_configure_logging", "master_hardware_tier_id", "files_upload", "run_id", "model_version_publish", "executor_storage", "job_stop", "returns", "_app_id", "html_start_tags", "projects_list", "_validate_hardware_tier_name", "_validate_environment_id", "job_start_blocking", "app_id", "log", "validate_distributed_compute_cluster_properties", "job", "users", "job_start", "files_list", "user_id", "hardwareTierId", "publishApiEndpoint", "count", "runId", "data", "file", "title", "_host", "html_end_tags", "__app_get_status", "key", "model_versions_get", "endpoint_unpublish", "_put_file", "spark_cluster_properties", "logging_level", "model_publish", "host", "deployment_version", "runs_start", "poll_freq", "default_executor_hardware_tier", "max_poll_time", "get_hardware_tier_id_from_name", "current_retry_count", "show_completed", "project_archive", "app", "environments_list", "command", "request", "__init__", "requires_at_least", "collaborators_remove", "get_job_status", "authenticate", "key_required", "job_id", "get_run_log", "_validate_commit_id", "elapsed_time", "_get", "includeSetupLog", "files_to_exclude", "auth_token", "__app_create", "validate_spark_executor_count", "status", "_useable_environments_list", "retry_count", "default_spark_setting", "model_version_sagemaker_export", "text", "_validate_hardware_tier_id", "valid_relationships", "blobs_get", "_validate_blob_key", "commits_list", "regex", "run_response", "fork_project", "validations", "model_id", "app_unpublish", "project_name", "payload", "_project_id", "required_key_overrides", "run_info", "executor_count", "environment_id", "get_user_id", "domino_token_file", "all_owned_projects", "_validate_information_data_type", "unit", "runs_start_blocking", "throw_if_information_invalid", "collaborators_get", "get_run_info", "job_runtime_execution_details", "_csrf_no_check_header", "url", "Domino", "supported_types_str", "models_list", "hardware_tiers_list", "runs_list"]}, {"author": "Alex Panin", "path": "tests/test_basic_auth.py", "imports": ["domino", "any", "requests", "DOMINO_HOST_KEY_NAME", "DOMINO_USER_API_KEY_KEY_NAME", "domino_is_reachable", "pytest", "domino.helpers", "isinstance", "Domino", "DOMINO_TOKEN_FILE_KEY_NAME", "domino.constants", "os", "authentication"], "variables": ["dummy_api_key", "test_object_creation_with_auth_token", "test_token_file_precedence", "test_no_auth_type_error", "err_msg", "host", "api_key", "token_file", "test_auth_token_precedence", "test_invalid_token_file_error", "invalid_project", "test_auth_against_real_deployment_with_api_key", "dummy_auth_token", "invalid_token_file", "d", "test_auth_against_real_deployment_with_token_file", "test_object_creation_with_api_key", "test_re_authentication_with_a_new_type", "test_object_creation_with_token_file", "invalid_file", "dummy_host", "test_auth_with_api_key_and_env_token_file", "test_malformed_project_input_error"]}, {"author": "ddl-awroblicky", "path": "domino/domino.py", "imports": ["_HttpRequestManager", "pprint", "logging", "ValueError", "len", "polling2", "re", "Exception", "Optional", "validate_is_on_demand_spark_supported", "bs4", "list", "requests", "time", "os", "CLUSTER_TYPE_MIN_SUPPORT", "get_job_status", "__version__", "int", "domino._version", "typing", "validate_distributed_compute_cluster_properties", "MINIMUM_EXTERNAL_VOLUME_MOUNTS_SUPPORT_DOMINO_VERSION", "BeautifulSoup", "get_auth_by_type", "get_default_spark_settings", "functools", "validate_spark_executor_count", "throw_if_information_invalid", "List", "DOMINO_LOG_LEVEL_KEY_NAME", "DOMINO_HOST_KEY_NAME", "validate_on_demand_spark_cluster_properties", "_Routes", "validate_is_external_volume_mounts_supported", "helpers", "exceptions", "str", "MINIMUM_ON_DEMAND_SPARK_CLUSTER_SUPPORT_DOMINO_VERSION", "Tuple"], "variables": ["request_payload", "app_publish", "commitId", "run_stop", "accepted_units", "validated_compute_cluster_properties", "compute_environment_id", "executor_hardware_tier_id", "path", "default_master_hardware_tier", "resolved_hardware_tier_id", "project", "function", "stdout", "query", "job_status", "self", "output_commit_id", "tier", "endpoint_publish", "owner_username", "saveChanges", "useable_environment_list_url", "process_log", "model_version_export_logs", "relationship", "_", "username_or_email", "span_regex", "error_message", "name", "message", "get_default_spark_settings", "r", "max_execution_slot", "logs", "model_version_export_status", "raw_stdout", "validate_on_demand_spark_cluster_properties", "validate_is_external_volume_mounts_supported", "model_version_export", "required_keys", "poll_start", "unpublishRunningApps", "default_spark_setting_url", "response", "supported_types", "description", "project_create", "isDirect", "stdout_msg", "runs_status", "validate_is_on_demand_spark_supported", "api_key", "runs_stdout", "endpoint_state", "collaborators_add", "_configure_logging", "master_hardware_tier_id", "files_upload", "run_id", "model_version_publish", "executor_storage", "job_stop", "returns", "_app_id", "html_start_tags", "projects_list", "_validate_hardware_tier_name", "_validate_environment_id", "job_start_blocking", "app_id", "log", "validate_distributed_compute_cluster_properties", "job", "users", "job_start", "files_list", "user_id", "hardwareTierId", "publishApiEndpoint", "count", "runId", "data", "file", "title", "_host", "html_end_tags", "__app_get_status", "key", "model_versions_get", "endpoint_unpublish", "_put_file", "spark_cluster_properties", "logging_level", "model_publish", "host", "deployment_version", "runs_start", "poll_freq", "default_executor_hardware_tier", "max_poll_time", "get_hardware_tier_id_from_name", "current_retry_count", "show_completed", "project_archive", "app", "environments_list", "command", "request", "__init__", "requires_at_least", "collaborators_remove", "get_job_status", "authenticate", "key_required", "job_id", "get_run_log", "_validate_commit_id", "elapsed_time", "_get", "includeSetupLog", "files_to_exclude", "auth_token", "__app_create", "validate_spark_executor_count", "status", "_useable_environments_list", "retry_count", "default_spark_setting", "model_version_sagemaker_export", "text", "_validate_hardware_tier_id", "valid_relationships", "blobs_get", "_validate_blob_key", "commits_list", "regex", "run_response", "fork_project", "validations", "model_id", "app_unpublish", "project_name", "payload", "_project_id", "required_key_overrides", "run_info", "executor_count", "environment_id", "get_user_id", "domino_token_file", "all_owned_projects", "_validate_information_data_type", "unit", "runs_start_blocking", "throw_if_information_invalid", "collaborators_get", "get_run_info", "job_runtime_execution_details", "_csrf_no_check_header", "url", "Domino", "supported_types_str", "models_list", "hardware_tiers_list", "runs_list"]}, {"author": "ddl-awroblicky", "path": "tests/test_jobs.py", "imports": ["domino", "pprint", "print", "domino_is_reachable", "len", "pytest", "polling2", "requests.exceptions", "isinstance", "Domino", "pformat", "domino.helpers", "RequestException", "time"], "variables": ["test_runs_list", "test_job_start_override_hardware_tier_id", "test_job_result_stdout", "jobs_start_endpoint", "stdout_endpoint", "hardware_tiers", "project_endpoint", "job_status", "override_hardware_tier_id", "job_red", "html_start_tags", "d", "stdout_data", "test_queue_job", "test_job_start_override_hardware_tier_name", "jobs_status_endpoint", "remaining_polling_seconds", "job", "non_default_hardware_tiers", "test_job_status_ignores_RequestException_and_times_out", "project_query", "test_job_status_completes_with_default_params", "runs", "test_job_start_blocking", "test_job_status_without_ignoring_exceptions", "exec_status", "hwt_endpoint", "override_hardware_tier_name", "mock_job_start_blocking_setup"]}, {"author": "Josh Broomberg", "path": "domino/domino.py", "imports": ["_HttpRequestManager", "pprint", "logging", "ValueError", "len", "polling2", "re", "Exception", "Optional", "validate_is_on_demand_spark_supported", "bs4", "list", "requests", "time", "os", "CLUSTER_TYPE_MIN_SUPPORT", "get_job_status", "__version__", "int", "domino._version", "typing", "validate_distributed_compute_cluster_properties", "MINIMUM_EXTERNAL_VOLUME_MOUNTS_SUPPORT_DOMINO_VERSION", "BeautifulSoup", "get_auth_by_type", "get_default_spark_settings", "functools", "validate_spark_executor_count", "throw_if_information_invalid", "List", "DOMINO_LOG_LEVEL_KEY_NAME", "DOMINO_HOST_KEY_NAME", "validate_on_demand_spark_cluster_properties", "_Routes", "validate_is_external_volume_mounts_supported", "helpers", "exceptions", "str", "MINIMUM_ON_DEMAND_SPARK_CLUSTER_SUPPORT_DOMINO_VERSION", "Tuple"], "variables": ["request_payload", "app_publish", "commitId", "run_stop", "accepted_units", "validated_compute_cluster_properties", "compute_environment_id", "executor_hardware_tier_id", "path", "default_master_hardware_tier", "resolved_hardware_tier_id", "project", "function", "stdout", "query", "job_status", "self", "output_commit_id", "tier", "endpoint_publish", "owner_username", "saveChanges", "useable_environment_list_url", "process_log", "model_version_export_logs", "relationship", "_", "username_or_email", "span_regex", "error_message", "name", "message", "get_default_spark_settings", "r", "max_execution_slot", "logs", "model_version_export_status", "raw_stdout", "validate_on_demand_spark_cluster_properties", "validate_is_external_volume_mounts_supported", "model_version_export", "required_keys", "poll_start", "unpublishRunningApps", "default_spark_setting_url", "response", "supported_types", "description", "project_create", "isDirect", "stdout_msg", "runs_status", "validate_is_on_demand_spark_supported", "api_key", "runs_stdout", "endpoint_state", "collaborators_add", "_configure_logging", "master_hardware_tier_id", "files_upload", "run_id", "model_version_publish", "executor_storage", "job_stop", "returns", "_app_id", "html_start_tags", "projects_list", "_validate_hardware_tier_name", "_validate_environment_id", "job_start_blocking", "app_id", "log", "validate_distributed_compute_cluster_properties", "job", "users", "job_start", "files_list", "user_id", "hardwareTierId", "publishApiEndpoint", "count", "runId", "data", "file", "title", "_host", "html_end_tags", "__app_get_status", "key", "model_versions_get", "endpoint_unpublish", "_put_file", "spark_cluster_properties", "logging_level", "model_publish", "host", "deployment_version", "runs_start", "poll_freq", "default_executor_hardware_tier", "max_poll_time", "get_hardware_tier_id_from_name", "current_retry_count", "show_completed", "project_archive", "app", "environments_list", "command", "request", "__init__", "requires_at_least", "collaborators_remove", "get_job_status", "authenticate", "key_required", "job_id", "get_run_log", "_validate_commit_id", "elapsed_time", "_get", "includeSetupLog", "files_to_exclude", "auth_token", "__app_create", "validate_spark_executor_count", "status", "_useable_environments_list", "retry_count", "default_spark_setting", "model_version_sagemaker_export", "text", "_validate_hardware_tier_id", "valid_relationships", "blobs_get", "_validate_blob_key", "commits_list", "regex", "run_response", "fork_project", "validations", "model_id", "app_unpublish", "project_name", "payload", "_project_id", "required_key_overrides", "run_info", "executor_count", "environment_id", "get_user_id", "domino_token_file", "all_owned_projects", "_validate_information_data_type", "unit", "runs_start_blocking", "throw_if_information_invalid", "collaborators_get", "get_run_info", "job_runtime_execution_details", "_csrf_no_check_header", "url", "Domino", "supported_types_str", "models_list", "hardware_tiers_list", "runs_list"]}, {"author": "Alex Panin", "path": "setup.py", "imports": ["find_packages", "pathlib", "get_version", "setup", "re", "open", "setuptools"], "variables": ["README", "f", "HERE", "get_version", "PACKAGE_NAME", "mo", "ver"]}, {"author": "ddl-gabrielhaim", "path": "domino/data_sources.py", "imports": ["domino_data.data_sources", "ImportError", "getattr"], "variables": ["__getattr__", "_import_error_message"]}, {"author": "ddl-gabrielhaim", "path": "domino/training_sets.py", "imports": ["model", "domino_data.training_sets", "getattr", "client", "ImportError"], "variables": ["__getattr__", "_import_error_message"]}, {"author": "ddl-gabrielhaim", "path": "setup.py", "imports": ["find_packages", "pathlib", "get_version", "setup", "re", "open", "setuptools"], "variables": ["README", "f", "HERE", "get_version", "PACKAGE_NAME", "mo", "ver"]}, {"author": "ddl-catherinetu", "path": "domino/domino.py", "imports": ["_HttpRequestManager", "pprint", "logging", "ValueError", "len", "polling2", "re", "Exception", "Optional", "validate_is_on_demand_spark_supported", "bs4", "list", "requests", "time", "os", "CLUSTER_TYPE_MIN_SUPPORT", "get_job_status", "__version__", "int", "domino._version", "typing", "validate_distributed_compute_cluster_properties", "MINIMUM_EXTERNAL_VOLUME_MOUNTS_SUPPORT_DOMINO_VERSION", "BeautifulSoup", "get_auth_by_type", "get_default_spark_settings", "functools", "validate_spark_executor_count", "throw_if_information_invalid", "List", "DOMINO_LOG_LEVEL_KEY_NAME", "DOMINO_HOST_KEY_NAME", "validate_on_demand_spark_cluster_properties", "_Routes", "validate_is_external_volume_mounts_supported", "helpers", "exceptions", "str", "MINIMUM_ON_DEMAND_SPARK_CLUSTER_SUPPORT_DOMINO_VERSION", "Tuple"], "variables": ["request_payload", "app_publish", "commitId", "run_stop", "accepted_units", "validated_compute_cluster_properties", "compute_environment_id", "executor_hardware_tier_id", "path", "default_master_hardware_tier", "resolved_hardware_tier_id", "project", "function", "stdout", "query", "job_status", "self", "output_commit_id", "tier", "endpoint_publish", "owner_username", "saveChanges", "useable_environment_list_url", "process_log", "model_version_export_logs", "relationship", "_", "username_or_email", "span_regex", "error_message", "name", "message", "get_default_spark_settings", "r", "max_execution_slot", "logs", "model_version_export_status", "raw_stdout", "validate_on_demand_spark_cluster_properties", "validate_is_external_volume_mounts_supported", "model_version_export", "required_keys", "poll_start", "unpublishRunningApps", "default_spark_setting_url", "response", "supported_types", "description", "project_create", "isDirect", "stdout_msg", "runs_status", "validate_is_on_demand_spark_supported", "api_key", "runs_stdout", "endpoint_state", "collaborators_add", "_configure_logging", "master_hardware_tier_id", "files_upload", "run_id", "model_version_publish", "executor_storage", "job_stop", "returns", "_app_id", "html_start_tags", "projects_list", "_validate_hardware_tier_name", "_validate_environment_id", "job_start_blocking", "app_id", "log", "validate_distributed_compute_cluster_properties", "job", "users", "job_start", "files_list", "user_id", "hardwareTierId", "publishApiEndpoint", "count", "runId", "data", "file", "title", "_host", "html_end_tags", "__app_get_status", "key", "model_versions_get", "endpoint_unpublish", "_put_file", "spark_cluster_properties", "logging_level", "model_publish", "host", "deployment_version", "runs_start", "poll_freq", "default_executor_hardware_tier", "max_poll_time", "get_hardware_tier_id_from_name", "current_retry_count", "show_completed", "project_archive", "app", "environments_list", "command", "request", "__init__", "requires_at_least", "collaborators_remove", "get_job_status", "authenticate", "key_required", "job_id", "get_run_log", "_validate_commit_id", "elapsed_time", "_get", "includeSetupLog", "files_to_exclude", "auth_token", "__app_create", "validate_spark_executor_count", "status", "_useable_environments_list", "retry_count", "default_spark_setting", "model_version_sagemaker_export", "text", "_validate_hardware_tier_id", "valid_relationships", "blobs_get", "_validate_blob_key", "commits_list", "regex", "run_response", "fork_project", "validations", "model_id", "app_unpublish", "project_name", "payload", "_project_id", "required_key_overrides", "run_info", "executor_count", "environment_id", "get_user_id", "domino_token_file", "all_owned_projects", "_validate_information_data_type", "unit", "runs_start_blocking", "throw_if_information_invalid", "collaborators_get", "get_run_info", "job_runtime_execution_details", "_csrf_no_check_header", "url", "Domino", "supported_types_str", "models_list", "hardware_tiers_list", "runs_list"]}, {"author": "ddl-catherinetu", "path": "domino/domino.py", "imports": ["_HttpRequestManager", "pprint", "logging", "ValueError", "len", "polling2", "re", "Exception", "Optional", "validate_is_on_demand_spark_supported", "bs4", "list", "requests", "time", "os", "CLUSTER_TYPE_MIN_SUPPORT", "get_job_status", "__version__", "int", "domino._version", "typing", "validate_distributed_compute_cluster_properties", "MINIMUM_EXTERNAL_VOLUME_MOUNTS_SUPPORT_DOMINO_VERSION", "BeautifulSoup", "get_auth_by_type", "get_default_spark_settings", "functools", "validate_spark_executor_count", "throw_if_information_invalid", "List", "DOMINO_LOG_LEVEL_KEY_NAME", "DOMINO_HOST_KEY_NAME", "validate_on_demand_spark_cluster_properties", "_Routes", "validate_is_external_volume_mounts_supported", "helpers", "exceptions", "str", "MINIMUM_ON_DEMAND_SPARK_CLUSTER_SUPPORT_DOMINO_VERSION", "Tuple"], "variables": ["request_payload", "app_publish", "commitId", "run_stop", "accepted_units", "validated_compute_cluster_properties", "compute_environment_id", "executor_hardware_tier_id", "path", "default_master_hardware_tier", "resolved_hardware_tier_id", "project", "function", "stdout", "query", "job_status", "self", "output_commit_id", "tier", "endpoint_publish", "owner_username", "saveChanges", "useable_environment_list_url", "process_log", "model_version_export_logs", "relationship", "_", "username_or_email", "span_regex", "error_message", "name", "message", "get_default_spark_settings", "r", "max_execution_slot", "logs", "model_version_export_status", "raw_stdout", "validate_on_demand_spark_cluster_properties", "validate_is_external_volume_mounts_supported", "model_version_export", "required_keys", "poll_start", "unpublishRunningApps", "default_spark_setting_url", "response", "supported_types", "description", "project_create", "isDirect", "stdout_msg", "runs_status", "validate_is_on_demand_spark_supported", "api_key", "runs_stdout", "endpoint_state", "collaborators_add", "_configure_logging", "master_hardware_tier_id", "files_upload", "run_id", "model_version_publish", "executor_storage", "job_stop", "returns", "_app_id", "html_start_tags", "projects_list", "_validate_hardware_tier_name", "_validate_environment_id", "job_start_blocking", "app_id", "log", "validate_distributed_compute_cluster_properties", "job", "users", "job_start", "files_list", "user_id", "hardwareTierId", "publishApiEndpoint", "count", "runId", "data", "file", "title", "_host", "html_end_tags", "__app_get_status", "key", "model_versions_get", "endpoint_unpublish", "_put_file", "spark_cluster_properties", "logging_level", "model_publish", "host", "deployment_version", "runs_start", "poll_freq", "default_executor_hardware_tier", "max_poll_time", "get_hardware_tier_id_from_name", "current_retry_count", "show_completed", "project_archive", "app", "environments_list", "command", "request", "__init__", "requires_at_least", "collaborators_remove", "get_job_status", "authenticate", "key_required", "job_id", "get_run_log", "_validate_commit_id", "elapsed_time", "_get", "includeSetupLog", "files_to_exclude", "auth_token", "__app_create", "validate_spark_executor_count", "status", "_useable_environments_list", "retry_count", "default_spark_setting", "model_version_sagemaker_export", "text", "_validate_hardware_tier_id", "valid_relationships", "blobs_get", "_validate_blob_key", "commits_list", "regex", "run_response", "fork_project", "validations", "model_id", "app_unpublish", "project_name", "payload", "_project_id", "required_key_overrides", "run_info", "executor_count", "environment_id", "get_user_id", "domino_token_file", "all_owned_projects", "_validate_information_data_type", "unit", "runs_start_blocking", "throw_if_information_invalid", "collaborators_get", "get_run_info", "job_runtime_execution_details", "_csrf_no_check_header", "url", "Domino", "supported_types_str", "models_list", "hardware_tiers_list", "runs_list"]}, {"author": "ronit-basu", "path": "domino/domino.py", "imports": ["_HttpRequestManager", "pprint", "logging", "ValueError", "len", "polling2", "re", "Exception", "Optional", "validate_is_on_demand_spark_supported", "bs4", "list", "requests", "time", "os", "CLUSTER_TYPE_MIN_SUPPORT", "get_job_status", "__version__", "int", "domino._version", "typing", "validate_distributed_compute_cluster_properties", "MINIMUM_EXTERNAL_VOLUME_MOUNTS_SUPPORT_DOMINO_VERSION", "BeautifulSoup", "get_auth_by_type", "get_default_spark_settings", "functools", "validate_spark_executor_count", "throw_if_information_invalid", "List", "DOMINO_LOG_LEVEL_KEY_NAME", "DOMINO_HOST_KEY_NAME", "validate_on_demand_spark_cluster_properties", "_Routes", "validate_is_external_volume_mounts_supported", "helpers", "exceptions", "str", "MINIMUM_ON_DEMAND_SPARK_CLUSTER_SUPPORT_DOMINO_VERSION", "Tuple"], "variables": ["request_payload", "app_publish", "commitId", "run_stop", "accepted_units", "validated_compute_cluster_properties", "compute_environment_id", "executor_hardware_tier_id", "path", "default_master_hardware_tier", "resolved_hardware_tier_id", "project", "function", "stdout", "query", "job_status", "self", "output_commit_id", "tier", "endpoint_publish", "owner_username", "saveChanges", "useable_environment_list_url", "process_log", "model_version_export_logs", "relationship", "_", "username_or_email", "span_regex", "error_message", "name", "message", "get_default_spark_settings", "r", "max_execution_slot", "logs", "model_version_export_status", "raw_stdout", "validate_on_demand_spark_cluster_properties", "validate_is_external_volume_mounts_supported", "model_version_export", "required_keys", "poll_start", "unpublishRunningApps", "default_spark_setting_url", "response", "supported_types", "description", "project_create", "isDirect", "stdout_msg", "runs_status", "validate_is_on_demand_spark_supported", "api_key", "runs_stdout", "endpoint_state", "collaborators_add", "_configure_logging", "master_hardware_tier_id", "files_upload", "run_id", "model_version_publish", "executor_storage", "job_stop", "returns", "_app_id", "html_start_tags", "projects_list", "_validate_hardware_tier_name", "_validate_environment_id", "job_start_blocking", "app_id", "log", "validate_distributed_compute_cluster_properties", "job", "users", "job_start", "files_list", "user_id", "hardwareTierId", "publishApiEndpoint", "count", "runId", "data", "file", "title", "_host", "html_end_tags", "__app_get_status", "key", "model_versions_get", "endpoint_unpublish", "_put_file", "spark_cluster_properties", "logging_level", "model_publish", "host", "deployment_version", "runs_start", "poll_freq", "default_executor_hardware_tier", "max_poll_time", "get_hardware_tier_id_from_name", "current_retry_count", "show_completed", "project_archive", "app", "environments_list", "command", "request", "__init__", "requires_at_least", "collaborators_remove", "get_job_status", "authenticate", "key_required", "job_id", "get_run_log", "_validate_commit_id", "elapsed_time", "_get", "includeSetupLog", "files_to_exclude", "auth_token", "__app_create", "validate_spark_executor_count", "status", "_useable_environments_list", "retry_count", "default_spark_setting", "model_version_sagemaker_export", "text", "_validate_hardware_tier_id", "valid_relationships", "blobs_get", "_validate_blob_key", "commits_list", "regex", "run_response", "fork_project", "validations", "model_id", "app_unpublish", "project_name", "payload", "_project_id", "required_key_overrides", "run_info", "executor_count", "environment_id", "get_user_id", "domino_token_file", "all_owned_projects", "_validate_information_data_type", "unit", "runs_start_blocking", "throw_if_information_invalid", "collaborators_get", "get_run_info", "job_runtime_execution_details", "_csrf_no_check_header", "url", "Domino", "supported_types_str", "models_list", "hardware_tiers_list", "runs_list"]}, {"author": "ronit-basu", "path": "domino/helpers.py", "imports": ["next", "LooseVersion", "print", "urllib", "int", "socket", "parse_version", "distutils.version", "os", "constants"], "variables": ["url_split", "clean_host_url", "s", "is_version_compatible", "is_compute_cluster_properties_supported", "domino_is_reachable", "fqdn", "curr_version", "is_external_volume_mounts_supported", "is_reachable", "is_on_demand_spark_cluster_supported", "is_comute_cluster_autoscaling_supported", "is_cluster_type_supported"]}, {"author": "David Knupp", "path": "domino/domino.py", "imports": ["_HttpRequestManager", "pprint", "logging", "ValueError", "len", "polling2", "re", "Exception", "Optional", "validate_is_on_demand_spark_supported", "bs4", "list", "requests", "time", "os", "CLUSTER_TYPE_MIN_SUPPORT", "get_job_status", "__version__", "int", "domino._version", "typing", "validate_distributed_compute_cluster_properties", "MINIMUM_EXTERNAL_VOLUME_MOUNTS_SUPPORT_DOMINO_VERSION", "BeautifulSoup", "get_auth_by_type", "get_default_spark_settings", "functools", "validate_spark_executor_count", "throw_if_information_invalid", "List", "DOMINO_LOG_LEVEL_KEY_NAME", "DOMINO_HOST_KEY_NAME", "validate_on_demand_spark_cluster_properties", "_Routes", "validate_is_external_volume_mounts_supported", "helpers", "exceptions", "str", "MINIMUM_ON_DEMAND_SPARK_CLUSTER_SUPPORT_DOMINO_VERSION", "Tuple"], "variables": ["request_payload", "app_publish", "commitId", "run_stop", "accepted_units", "validated_compute_cluster_properties", "compute_environment_id", "executor_hardware_tier_id", "path", "default_master_hardware_tier", "resolved_hardware_tier_id", "project", "function", "stdout", "query", "job_status", "self", "output_commit_id", "tier", "endpoint_publish", "owner_username", "saveChanges", "useable_environment_list_url", "process_log", "model_version_export_logs", "relationship", "_", "username_or_email", "span_regex", "error_message", "name", "message", "get_default_spark_settings", "r", "max_execution_slot", "logs", "model_version_export_status", "raw_stdout", "validate_on_demand_spark_cluster_properties", "validate_is_external_volume_mounts_supported", "model_version_export", "required_keys", "poll_start", "unpublishRunningApps", "default_spark_setting_url", "response", "supported_types", "description", "project_create", "isDirect", "stdout_msg", "runs_status", "validate_is_on_demand_spark_supported", "api_key", "runs_stdout", "endpoint_state", "collaborators_add", "_configure_logging", "master_hardware_tier_id", "files_upload", "run_id", "model_version_publish", "executor_storage", "job_stop", "returns", "_app_id", "html_start_tags", "projects_list", "_validate_hardware_tier_name", "_validate_environment_id", "job_start_blocking", "app_id", "log", "validate_distributed_compute_cluster_properties", "job", "users", "job_start", "files_list", "user_id", "hardwareTierId", "publishApiEndpoint", "count", "runId", "data", "file", "title", "_host", "html_end_tags", "__app_get_status", "key", "model_versions_get", "endpoint_unpublish", "_put_file", "spark_cluster_properties", "logging_level", "model_publish", "host", "deployment_version", "runs_start", "poll_freq", "default_executor_hardware_tier", "max_poll_time", "get_hardware_tier_id_from_name", "current_retry_count", "show_completed", "project_archive", "app", "environments_list", "command", "request", "__init__", "requires_at_least", "collaborators_remove", "get_job_status", "authenticate", "key_required", "job_id", "get_run_log", "_validate_commit_id", "elapsed_time", "_get", "includeSetupLog", "files_to_exclude", "auth_token", "__app_create", "validate_spark_executor_count", "status", "_useable_environments_list", "retry_count", "default_spark_setting", "model_version_sagemaker_export", "text", "_validate_hardware_tier_id", "valid_relationships", "blobs_get", "_validate_blob_key", "commits_list", "regex", "run_response", "fork_project", "validations", "model_id", "app_unpublish", "project_name", "payload", "_project_id", "required_key_overrides", "run_info", "executor_count", "environment_id", "get_user_id", "domino_token_file", "all_owned_projects", "_validate_information_data_type", "unit", "runs_start_blocking", "throw_if_information_invalid", "collaborators_get", "get_run_info", "job_runtime_execution_details", "_csrf_no_check_header", "url", "Domino", "supported_types_str", "models_list", "hardware_tiers_list", "runs_list"]}, {"author": "David Knupp", "path": "tests/conftest.py", "imports": ["domino", "domino.constants", "DOMINO_USER_API_KEY_KEY_NAME", "DOMINO_HOST_KEY_NAME", "DOMINO_USER_NAME_KEY_NAME", "pytest", "Domino", "dict", "DOMINO_TOKEN_FILE_KEY_NAME", "requests_mock", "os"], "variables": ["version_info", "default_domino_client", "d", "user", "clear_api_key_from_env", "response", "dummy_hostname", "mock_domino_version_response", "clear_token_file_from_env", "host", "saved_environment", "dummy_url", "token_file", "dummy_token_file"]}, {"author": "David Knupp", "path": "tests/test_environments.py", "imports": ["pprint", "any", "domino_is_reachable", "pytest", "pformat", "domino.helpers", "isinstance"], "variables": ["test_list_envirtonments", "env_list", "test_list_useable_envirtonments"]}, {"author": "David Knupp", "path": "tests/test_jobs.py", "imports": ["domino", "pprint", "print", "domino_is_reachable", "len", "pytest", "polling2", "requests.exceptions", "isinstance", "Domino", "pformat", "domino.helpers", "RequestException", "time"], "variables": ["test_runs_list", "test_job_start_override_hardware_tier_id", "test_job_result_stdout", "jobs_start_endpoint", "stdout_endpoint", "hardware_tiers", "project_endpoint", "job_status", "override_hardware_tier_id", "job_red", "html_start_tags", "d", "stdout_data", "test_queue_job", "test_job_start_override_hardware_tier_name", "jobs_status_endpoint", "remaining_polling_seconds", "job", "non_default_hardware_tiers", "test_job_status_ignores_RequestException_and_times_out", "project_query", "test_job_status_completes_with_default_params", "runs", "test_job_start_blocking", "test_job_status_without_ignoring_exceptions", "exec_status", "hwt_endpoint", "override_hardware_tier_name", "mock_job_start_blocking_setup"]}, {"author": "David Knupp", "path": "tests/test_models.py", "imports": ["pprint", "domino_is_reachable", "pytest", "pformat", "domino.helpers", "isinstance"], "variables": ["model_name", "model_description", "model", "function", "model_id", "test_publish_a_model", "models_list", "test_list_models", "test_publish_model_version", "env_id", "new_version", "filename"]}, {"author": "David Knupp", "path": "tests/test_projects.py", "imports": ["domino", "uuid", "pprint", "ProjectNotFoundException", "any", "domino_is_reachable", "pytest", "Domino", "str", "_get_users", "pformat", "domino.helpers", "open", "isinstance", "domino.exceptions"], "variables": ["response", "forked_project_name", "new_project_name", "test_unpublish_app_from_a_project", "commits_list", "test_archiving_non_existent_project_raises_appropriate_error", "_get_users", "test_add_and_remove_project_collaborator", "new_collaborators", "projects_list_endpoint", "d", "test_list_commits", "project_list", "test_upload_file_to_project", "file_contents", "test_project_create", "test_project_fork", "files_list", "test_get_file_from_a_project", "collaborators", "url", "test_publish_app_from_a_project", "users_list", "test_list_files_in_commit", "username"]}, {"author": "Alex Panin", "path": "domino/domino.py", "imports": ["_HttpRequestManager", "pprint", "logging", "ValueError", "len", "polling2", "re", "Exception", "Optional", "validate_is_on_demand_spark_supported", "bs4", "list", "requests", "time", "os", "CLUSTER_TYPE_MIN_SUPPORT", "get_job_status", "__version__", "int", "domino._version", "typing", "validate_distributed_compute_cluster_properties", "MINIMUM_EXTERNAL_VOLUME_MOUNTS_SUPPORT_DOMINO_VERSION", "BeautifulSoup", "get_auth_by_type", "get_default_spark_settings", "functools", "validate_spark_executor_count", "throw_if_information_invalid", "List", "DOMINO_LOG_LEVEL_KEY_NAME", "DOMINO_HOST_KEY_NAME", "validate_on_demand_spark_cluster_properties", "_Routes", "validate_is_external_volume_mounts_supported", "helpers", "exceptions", "str", "MINIMUM_ON_DEMAND_SPARK_CLUSTER_SUPPORT_DOMINO_VERSION", "Tuple"], "variables": ["request_payload", "app_publish", "commitId", "run_stop", "accepted_units", "validated_compute_cluster_properties", "compute_environment_id", "executor_hardware_tier_id", "path", "default_master_hardware_tier", "resolved_hardware_tier_id", "project", "function", "stdout", "query", "job_status", "self", "output_commit_id", "tier", "endpoint_publish", "owner_username", "saveChanges", "useable_environment_list_url", "process_log", "model_version_export_logs", "relationship", "_", "username_or_email", "span_regex", "error_message", "name", "message", "get_default_spark_settings", "r", "max_execution_slot", "logs", "model_version_export_status", "raw_stdout", "validate_on_demand_spark_cluster_properties", "validate_is_external_volume_mounts_supported", "model_version_export", "required_keys", "poll_start", "unpublishRunningApps", "default_spark_setting_url", "response", "supported_types", "description", "project_create", "isDirect", "stdout_msg", "runs_status", "validate_is_on_demand_spark_supported", "api_key", "runs_stdout", "endpoint_state", "collaborators_add", "_configure_logging", "master_hardware_tier_id", "files_upload", "run_id", "model_version_publish", "executor_storage", "job_stop", "returns", "_app_id", "html_start_tags", "projects_list", "_validate_hardware_tier_name", "_validate_environment_id", "job_start_blocking", "app_id", "log", "validate_distributed_compute_cluster_properties", "job", "users", "job_start", "files_list", "user_id", "hardwareTierId", "publishApiEndpoint", "count", "runId", "data", "file", "title", "_host", "html_end_tags", "__app_get_status", "key", "model_versions_get", "endpoint_unpublish", "_put_file", "spark_cluster_properties", "logging_level", "model_publish", "host", "deployment_version", "runs_start", "poll_freq", "default_executor_hardware_tier", "max_poll_time", "get_hardware_tier_id_from_name", "current_retry_count", "show_completed", "project_archive", "app", "environments_list", "command", "request", "__init__", "requires_at_least", "collaborators_remove", "get_job_status", "authenticate", "key_required", "job_id", "get_run_log", "_validate_commit_id", "elapsed_time", "_get", "includeSetupLog", "files_to_exclude", "auth_token", "__app_create", "validate_spark_executor_count", "status", "_useable_environments_list", "retry_count", "default_spark_setting", "model_version_sagemaker_export", "text", "_validate_hardware_tier_id", "valid_relationships", "blobs_get", "_validate_blob_key", "commits_list", "regex", "run_response", "fork_project", "validations", "model_id", "app_unpublish", "project_name", "payload", "_project_id", "required_key_overrides", "run_info", "executor_count", "environment_id", "get_user_id", "domino_token_file", "all_owned_projects", "_validate_information_data_type", "unit", "runs_start_blocking", "throw_if_information_invalid", "collaborators_get", "get_run_info", "job_runtime_execution_details", "_csrf_no_check_header", "url", "Domino", "supported_types_str", "models_list", "hardware_tiers_list", "runs_list"]}, {"author": "Alex Panin", "path": "domino/http_request_manager.py", "imports": ["AuthBase", "logging", "requests", "bool", "HTTPStatus", "http", "ReloginRequiredException", "BeautifulSoup", "bs4", "requests.auth"], "variables": ["_HttpRequestManager", "get", "put", "post", "url", "self", "json", "__init__", "data", "_raise_for_status", "delete", "get_raw"]}, {"author": "Alex Panin", "path": "domino/authentication.py", "imports": ["AuthBase", "RuntimeError", "open", "DOMINO_USER_API_KEY_KEY_NAME", "DOMINO_TOKEN_FILE_KEY_NAME", "HTTPBasicAuth", "get_auth_by_type", "requests.auth", "os", "BearerAuth"], "variables": ["domino_token_file_from_env", "__call__", "self", "domino_token_file", "__init__", "auth_token", "get_auth_by_type", "_from_token_file", "api_key_from_env", "BearerAuth"]}, {"author": "Alex Panin", "path": "setup.py", "imports": ["find_packages", "pathlib", "get_version", "setup", "re", "open", "setuptools"], "variables": ["README", "f", "HERE", "get_version", "PACKAGE_NAME", "mo", "ver"]}, {"author": "niole", "path": "domino/domino.py", "imports": ["_HttpRequestManager", "pprint", "logging", "ValueError", "len", "polling2", "re", "Exception", "Optional", "validate_is_on_demand_spark_supported", "bs4", "list", "requests", "time", "os", "CLUSTER_TYPE_MIN_SUPPORT", "get_job_status", "__version__", "int", "domino._version", "typing", "validate_distributed_compute_cluster_properties", "MINIMUM_EXTERNAL_VOLUME_MOUNTS_SUPPORT_DOMINO_VERSION", "BeautifulSoup", "get_auth_by_type", "get_default_spark_settings", "functools", "validate_spark_executor_count", "throw_if_information_invalid", "List", "DOMINO_LOG_LEVEL_KEY_NAME", "DOMINO_HOST_KEY_NAME", "validate_on_demand_spark_cluster_properties", "_Routes", "validate_is_external_volume_mounts_supported", "helpers", "exceptions", "str", "MINIMUM_ON_DEMAND_SPARK_CLUSTER_SUPPORT_DOMINO_VERSION", "Tuple"], "variables": ["request_payload", "app_publish", "commitId", "run_stop", "accepted_units", "validated_compute_cluster_properties", "compute_environment_id", "executor_hardware_tier_id", "path", "default_master_hardware_tier", "resolved_hardware_tier_id", "project", "function", "stdout", "query", "job_status", "self", "output_commit_id", "tier", "endpoint_publish", "owner_username", "saveChanges", "useable_environment_list_url", "process_log", "model_version_export_logs", "relationship", "_", "username_or_email", "span_regex", "error_message", "name", "message", "get_default_spark_settings", "r", "max_execution_slot", "logs", "model_version_export_status", "raw_stdout", "validate_on_demand_spark_cluster_properties", "validate_is_external_volume_mounts_supported", "model_version_export", "required_keys", "poll_start", "unpublishRunningApps", "default_spark_setting_url", "response", "supported_types", "description", "project_create", "isDirect", "stdout_msg", "runs_status", "validate_is_on_demand_spark_supported", "api_key", "runs_stdout", "endpoint_state", "collaborators_add", "_configure_logging", "master_hardware_tier_id", "files_upload", "run_id", "model_version_publish", "executor_storage", "job_stop", "returns", "_app_id", "html_start_tags", "projects_list", "_validate_hardware_tier_name", "_validate_environment_id", "job_start_blocking", "app_id", "log", "validate_distributed_compute_cluster_properties", "job", "users", "job_start", "files_list", "user_id", "hardwareTierId", "publishApiEndpoint", "count", "runId", "data", "file", "title", "_host", "html_end_tags", "__app_get_status", "key", "model_versions_get", "endpoint_unpublish", "_put_file", "spark_cluster_properties", "logging_level", "model_publish", "host", "deployment_version", "runs_start", "poll_freq", "default_executor_hardware_tier", "max_poll_time", "get_hardware_tier_id_from_name", "current_retry_count", "show_completed", "project_archive", "app", "environments_list", "command", "request", "__init__", "requires_at_least", "collaborators_remove", "get_job_status", "authenticate", "key_required", "job_id", "get_run_log", "_validate_commit_id", "elapsed_time", "_get", "includeSetupLog", "files_to_exclude", "auth_token", "__app_create", "validate_spark_executor_count", "status", "_useable_environments_list", "retry_count", "default_spark_setting", "model_version_sagemaker_export", "text", "_validate_hardware_tier_id", "valid_relationships", "blobs_get", "_validate_blob_key", "commits_list", "regex", "run_response", "fork_project", "validations", "model_id", "app_unpublish", "project_name", "payload", "_project_id", "required_key_overrides", "run_info", "executor_count", "environment_id", "get_user_id", "domino_token_file", "all_owned_projects", "_validate_information_data_type", "unit", "runs_start_blocking", "throw_if_information_invalid", "collaborators_get", "get_run_info", "job_runtime_execution_details", "_csrf_no_check_header", "url", "Domino", "supported_types_str", "models_list", "hardware_tiers_list", "runs_list"]}, {"author": "niole", "path": "domino/helpers.py", "imports": ["next", "LooseVersion", "print", "urllib", "int", "socket", "parse_version", "distutils.version", "os", "constants"], "variables": ["url_split", "clean_host_url", "s", "is_version_compatible", "is_compute_cluster_properties_supported", "domino_is_reachable", "fqdn", "curr_version", "is_external_volume_mounts_supported", "is_reachable", "is_on_demand_spark_cluster_supported", "is_comute_cluster_autoscaling_supported", "is_cluster_type_supported"]}, {"author": "David Knupp", "path": "domino/authentication.py", "imports": ["AuthBase", "RuntimeError", "open", "DOMINO_USER_API_KEY_KEY_NAME", "DOMINO_TOKEN_FILE_KEY_NAME", "HTTPBasicAuth", "get_auth_by_type", "requests.auth", "os", "BearerAuth"], "variables": ["domino_token_file_from_env", "__call__", "self", "domino_token_file", "__init__", "auth_token", "get_auth_by_type", "_from_token_file", "api_key_from_env", "BearerAuth"]}, {"author": "David Knupp", "path": "domino/domino.py", "imports": ["_HttpRequestManager", "pprint", "logging", "ValueError", "len", "polling2", "re", "Exception", "Optional", "validate_is_on_demand_spark_supported", "bs4", "list", "requests", "time", "os", "CLUSTER_TYPE_MIN_SUPPORT", "get_job_status", "__version__", "int", "domino._version", "typing", "validate_distributed_compute_cluster_properties", "MINIMUM_EXTERNAL_VOLUME_MOUNTS_SUPPORT_DOMINO_VERSION", "BeautifulSoup", "get_auth_by_type", "get_default_spark_settings", "functools", "validate_spark_executor_count", "throw_if_information_invalid", "List", "DOMINO_LOG_LEVEL_KEY_NAME", "DOMINO_HOST_KEY_NAME", "validate_on_demand_spark_cluster_properties", "_Routes", "validate_is_external_volume_mounts_supported", "helpers", "exceptions", "str", "MINIMUM_ON_DEMAND_SPARK_CLUSTER_SUPPORT_DOMINO_VERSION", "Tuple"], "variables": ["request_payload", "app_publish", "commitId", "run_stop", "accepted_units", "validated_compute_cluster_properties", "compute_environment_id", "executor_hardware_tier_id", "path", "default_master_hardware_tier", "resolved_hardware_tier_id", "project", "function", "stdout", "query", "job_status", "self", "output_commit_id", "tier", "endpoint_publish", "owner_username", "saveChanges", "useable_environment_list_url", "process_log", "model_version_export_logs", "relationship", "_", "username_or_email", "span_regex", "error_message", "name", "message", "get_default_spark_settings", "r", "max_execution_slot", "logs", "model_version_export_status", "raw_stdout", "validate_on_demand_spark_cluster_properties", "validate_is_external_volume_mounts_supported", "model_version_export", "required_keys", "poll_start", "unpublishRunningApps", "default_spark_setting_url", "response", "supported_types", "description", "project_create", "isDirect", "stdout_msg", "runs_status", "validate_is_on_demand_spark_supported", "api_key", "runs_stdout", "endpoint_state", "collaborators_add", "_configure_logging", "master_hardware_tier_id", "files_upload", "run_id", "model_version_publish", "executor_storage", "job_stop", "returns", "_app_id", "html_start_tags", "projects_list", "_validate_hardware_tier_name", "_validate_environment_id", "job_start_blocking", "app_id", "log", "validate_distributed_compute_cluster_properties", "job", "users", "job_start", "files_list", "user_id", "hardwareTierId", "publishApiEndpoint", "count", "runId", "data", "file", "title", "_host", "html_end_tags", "__app_get_status", "key", "model_versions_get", "endpoint_unpublish", "_put_file", "spark_cluster_properties", "logging_level", "model_publish", "host", "deployment_version", "runs_start", "poll_freq", "default_executor_hardware_tier", "max_poll_time", "get_hardware_tier_id_from_name", "current_retry_count", "show_completed", "project_archive", "app", "environments_list", "command", "request", "__init__", "requires_at_least", "collaborators_remove", "get_job_status", "authenticate", "key_required", "job_id", "get_run_log", "_validate_commit_id", "elapsed_time", "_get", "includeSetupLog", "files_to_exclude", "auth_token", "__app_create", "validate_spark_executor_count", "status", "_useable_environments_list", "retry_count", "default_spark_setting", "model_version_sagemaker_export", "text", "_validate_hardware_tier_id", "valid_relationships", "blobs_get", "_validate_blob_key", "commits_list", "regex", "run_response", "fork_project", "validations", "model_id", "app_unpublish", "project_name", "payload", "_project_id", "required_key_overrides", "run_info", "executor_count", "environment_id", "get_user_id", "domino_token_file", "all_owned_projects", "_validate_information_data_type", "unit", "runs_start_blocking", "throw_if_information_invalid", "collaborators_get", "get_run_info", "job_runtime_execution_details", "_csrf_no_check_header", "url", "Domino", "supported_types_str", "models_list", "hardware_tiers_list", "runs_list"]}, {"author": "David Knupp", "path": "domino/helpers.py", "imports": ["next", "LooseVersion", "print", "urllib", "int", "socket", "parse_version", "distutils.version", "os", "constants"], "variables": ["url_split", "clean_host_url", "s", "is_version_compatible", "is_compute_cluster_properties_supported", "domino_is_reachable", "fqdn", "curr_version", "is_external_volume_mounts_supported", "is_reachable", "is_on_demand_spark_cluster_supported", "is_comute_cluster_autoscaling_supported", "is_cluster_type_supported"]}, {"author": "David Knupp", "path": "tests/conftest.py", "imports": ["domino", "domino.constants", "DOMINO_USER_API_KEY_KEY_NAME", "DOMINO_HOST_KEY_NAME", "DOMINO_USER_NAME_KEY_NAME", "pytest", "Domino", "dict", "DOMINO_TOKEN_FILE_KEY_NAME", "requests_mock", "os"], "variables": ["version_info", "default_domino_client", "d", "user", "clear_api_key_from_env", "response", "dummy_hostname", "mock_domino_version_response", "clear_token_file_from_env", "host", "saved_environment", "dummy_url", "token_file", "dummy_token_file"]}, {"author": "David Knupp", "path": "tests/test_basic_auth.py", "imports": ["domino", "any", "requests", "DOMINO_HOST_KEY_NAME", "DOMINO_USER_API_KEY_KEY_NAME", "domino_is_reachable", "pytest", "domino.helpers", "isinstance", "Domino", "DOMINO_TOKEN_FILE_KEY_NAME", "domino.constants", "os", "authentication"], "variables": ["dummy_api_key", "test_object_creation_with_auth_token", "test_token_file_precedence", "test_no_auth_type_error", "err_msg", "host", "api_key", "token_file", "test_auth_token_precedence", "test_invalid_token_file_error", "invalid_project", "test_auth_against_real_deployment_with_api_key", "dummy_auth_token", "invalid_token_file", "d", "test_auth_against_real_deployment_with_token_file", "test_object_creation_with_api_key", "test_re_authentication_with_a_new_type", "test_object_creation_with_token_file", "invalid_file", "dummy_host", "test_auth_with_api_key_and_env_token_file", "test_malformed_project_input_error"]}, {"author": "David Knupp", "path": "tests/test_jobs.py", "imports": ["domino", "pprint", "print", "domino_is_reachable", "len", "pytest", "polling2", "requests.exceptions", "isinstance", "Domino", "pformat", "domino.helpers", "RequestException", "time"], "variables": ["test_runs_list", "test_job_start_override_hardware_tier_id", "test_job_result_stdout", "jobs_start_endpoint", "stdout_endpoint", "hardware_tiers", "project_endpoint", "job_status", "override_hardware_tier_id", "job_red", "html_start_tags", "d", "stdout_data", "test_queue_job", "test_job_start_override_hardware_tier_name", "jobs_status_endpoint", "remaining_polling_seconds", "job", "non_default_hardware_tiers", "test_job_status_ignores_RequestException_and_times_out", "project_query", "test_job_status_completes_with_default_params", "runs", "test_job_start_blocking", "test_job_status_without_ignoring_exceptions", "exec_status", "hwt_endpoint", "override_hardware_tier_name", "mock_job_start_blocking_setup"]}, {"author": "David Knupp", "path": "domino/domino.py", "imports": ["_HttpRequestManager", "pprint", "logging", "ValueError", "len", "polling2", "re", "Exception", "Optional", "validate_is_on_demand_spark_supported", "bs4", "list", "requests", "time", "os", "CLUSTER_TYPE_MIN_SUPPORT", "get_job_status", "__version__", "int", "domino._version", "typing", "validate_distributed_compute_cluster_properties", "MINIMUM_EXTERNAL_VOLUME_MOUNTS_SUPPORT_DOMINO_VERSION", "BeautifulSoup", "get_auth_by_type", "get_default_spark_settings", "functools", "validate_spark_executor_count", "throw_if_information_invalid", "List", "DOMINO_LOG_LEVEL_KEY_NAME", "DOMINO_HOST_KEY_NAME", "validate_on_demand_spark_cluster_properties", "_Routes", "validate_is_external_volume_mounts_supported", "helpers", "exceptions", "str", "MINIMUM_ON_DEMAND_SPARK_CLUSTER_SUPPORT_DOMINO_VERSION", "Tuple"], "variables": ["request_payload", "app_publish", "commitId", "run_stop", "accepted_units", "validated_compute_cluster_properties", "compute_environment_id", "executor_hardware_tier_id", "path", "default_master_hardware_tier", "resolved_hardware_tier_id", "project", "function", "stdout", "query", "job_status", "self", "output_commit_id", "tier", "endpoint_publish", "owner_username", "saveChanges", "useable_environment_list_url", "process_log", "model_version_export_logs", "relationship", "_", "username_or_email", "span_regex", "error_message", "name", "message", "get_default_spark_settings", "r", "max_execution_slot", "logs", "model_version_export_status", "raw_stdout", "validate_on_demand_spark_cluster_properties", "validate_is_external_volume_mounts_supported", "model_version_export", "required_keys", "poll_start", "unpublishRunningApps", "default_spark_setting_url", "response", "supported_types", "description", "project_create", "isDirect", "stdout_msg", "runs_status", "validate_is_on_demand_spark_supported", "api_key", "runs_stdout", "endpoint_state", "collaborators_add", "_configure_logging", "master_hardware_tier_id", "files_upload", "run_id", "model_version_publish", "executor_storage", "job_stop", "returns", "_app_id", "html_start_tags", "projects_list", "_validate_hardware_tier_name", "_validate_environment_id", "job_start_blocking", "app_id", "log", "validate_distributed_compute_cluster_properties", "job", "users", "job_start", "files_list", "user_id", "hardwareTierId", "publishApiEndpoint", "count", "runId", "data", "file", "title", "_host", "html_end_tags", "__app_get_status", "key", "model_versions_get", "endpoint_unpublish", "_put_file", "spark_cluster_properties", "logging_level", "model_publish", "host", "deployment_version", "runs_start", "poll_freq", "default_executor_hardware_tier", "max_poll_time", "get_hardware_tier_id_from_name", "current_retry_count", "show_completed", "project_archive", "app", "environments_list", "command", "request", "__init__", "requires_at_least", "collaborators_remove", "get_job_status", "authenticate", "key_required", "job_id", "get_run_log", "_validate_commit_id", "elapsed_time", "_get", "includeSetupLog", "files_to_exclude", "auth_token", "__app_create", "validate_spark_executor_count", "status", "_useable_environments_list", "retry_count", "default_spark_setting", "model_version_sagemaker_export", "text", "_validate_hardware_tier_id", "valid_relationships", "blobs_get", "_validate_blob_key", "commits_list", "regex", "run_response", "fork_project", "validations", "model_id", "app_unpublish", "project_name", "payload", "_project_id", "required_key_overrides", "run_info", "executor_count", "environment_id", "get_user_id", "domino_token_file", "all_owned_projects", "_validate_information_data_type", "unit", "runs_start_blocking", "throw_if_information_invalid", "collaborators_get", "get_run_info", "job_runtime_execution_details", "_csrf_no_check_header", "url", "Domino", "supported_types_str", "models_list", "hardware_tiers_list", "runs_list"]}, {"author": "David Knupp", "path": "tests/conftest.py", "imports": ["domino", "domino.constants", "DOMINO_USER_API_KEY_KEY_NAME", "DOMINO_HOST_KEY_NAME", "DOMINO_USER_NAME_KEY_NAME", "pytest", "Domino", "dict", "DOMINO_TOKEN_FILE_KEY_NAME", "requests_mock", "os"], "variables": ["version_info", "default_domino_client", "d", "user", "clear_api_key_from_env", "response", "dummy_hostname", "mock_domino_version_response", "clear_token_file_from_env", "host", "saved_environment", "dummy_url", "token_file", "dummy_token_file"]}, {"author": "David Knupp", "path": "tests/test_basic_auth.py", "imports": ["domino", "any", "requests", "DOMINO_HOST_KEY_NAME", "DOMINO_USER_API_KEY_KEY_NAME", "domino_is_reachable", "pytest", "domino.helpers", "isinstance", "Domino", "DOMINO_TOKEN_FILE_KEY_NAME", "domino.constants", "os", "authentication"], "variables": ["dummy_api_key", "test_object_creation_with_auth_token", "test_token_file_precedence", "test_no_auth_type_error", "err_msg", "host", "api_key", "token_file", "test_auth_token_precedence", "test_invalid_token_file_error", "invalid_project", "test_auth_against_real_deployment_with_api_key", "dummy_auth_token", "invalid_token_file", "d", "test_auth_against_real_deployment_with_token_file", "test_object_creation_with_api_key", "test_re_authentication_with_a_new_type", "test_object_creation_with_token_file", "invalid_file", "dummy_host", "test_auth_with_api_key_and_env_token_file", "test_malformed_project_input_error"]}, {"author": "David Knupp", "path": "tests/test_jobs.py", "imports": ["domino", "pprint", "print", "domino_is_reachable", "len", "pytest", "polling2", "requests.exceptions", "isinstance", "Domino", "pformat", "domino.helpers", "RequestException", "time"], "variables": ["test_runs_list", "test_job_start_override_hardware_tier_id", "test_job_result_stdout", "jobs_start_endpoint", "stdout_endpoint", "hardware_tiers", "project_endpoint", "job_status", "override_hardware_tier_id", "job_red", "html_start_tags", "d", "stdout_data", "test_queue_job", "test_job_start_override_hardware_tier_name", "jobs_status_endpoint", "remaining_polling_seconds", "job", "non_default_hardware_tiers", "test_job_status_ignores_RequestException_and_times_out", "project_query", "test_job_status_completes_with_default_params", "runs", "test_job_start_blocking", "test_job_status_without_ignoring_exceptions", "exec_status", "hwt_endpoint", "override_hardware_tier_name", "mock_job_start_blocking_setup"]}, {"author": "David Knupp", "path": "domino/helpers.py", "imports": ["next", "LooseVersion", "print", "urllib", "int", "socket", "parse_version", "distutils.version", "os", "constants"], "variables": ["url_split", "clean_host_url", "s", "is_version_compatible", "is_compute_cluster_properties_supported", "domino_is_reachable", "fqdn", "curr_version", "is_external_volume_mounts_supported", "is_reachable", "is_on_demand_spark_cluster_supported", "is_comute_cluster_autoscaling_supported", "is_cluster_type_supported"]}, {"author": "David Knupp", "path": "tests/test_basic_auth.py", "imports": ["domino", "any", "requests", "DOMINO_HOST_KEY_NAME", "DOMINO_USER_API_KEY_KEY_NAME", "domino_is_reachable", "pytest", "domino.helpers", "isinstance", "Domino", "DOMINO_TOKEN_FILE_KEY_NAME", "domino.constants", "os", "authentication"], "variables": ["dummy_api_key", "test_object_creation_with_auth_token", "test_token_file_precedence", "test_no_auth_type_error", "err_msg", "host", "api_key", "token_file", "test_auth_token_precedence", "test_invalid_token_file_error", "invalid_project", "test_auth_against_real_deployment_with_api_key", "dummy_auth_token", "invalid_token_file", "d", "test_auth_against_real_deployment_with_token_file", "test_object_creation_with_api_key", "test_re_authentication_with_a_new_type", "test_object_creation_with_token_file", "invalid_file", "dummy_host", "test_auth_with_api_key_and_env_token_file", "test_malformed_project_input_error"]}, {"author": "David Knupp", "path": "setup.py", "imports": ["find_packages", "pathlib", "get_version", "setup", "re", "open", "setuptools"], "variables": ["README", "f", "HERE", "get_version", "PACKAGE_NAME", "mo", "ver"]}, {"author": "David Knupp", "path": "setup.py", "imports": ["find_packages", "pathlib", "get_version", "setup", "re", "open", "setuptools"], "variables": ["README", "f", "HERE", "get_version", "PACKAGE_NAME", "mo", "ver"]}, {"author": "David Knupp", "path": "tests/test_basic_auth.py", "imports": ["domino", "any", "requests", "DOMINO_HOST_KEY_NAME", "DOMINO_USER_API_KEY_KEY_NAME", "domino_is_reachable", "pytest", "domino.helpers", "isinstance", "Domino", "DOMINO_TOKEN_FILE_KEY_NAME", "domino.constants", "os", "authentication"], "variables": ["dummy_api_key", "test_object_creation_with_auth_token", "test_token_file_precedence", "test_no_auth_type_error", "err_msg", "host", "api_key", "token_file", "test_auth_token_precedence", "test_invalid_token_file_error", "invalid_project", "test_auth_against_real_deployment_with_api_key", "dummy_auth_token", "invalid_token_file", "d", "test_auth_against_real_deployment_with_token_file", "test_object_creation_with_api_key", "test_re_authentication_with_a_new_type", "test_object_creation_with_token_file", "invalid_file", "dummy_host", "test_auth_with_api_key_and_env_token_file", "test_malformed_project_input_error"]}, {"author": "ddl-abayly", "path": "domino/domino.py", "imports": ["_HttpRequestManager", "pprint", "logging", "ValueError", "len", "polling2", "re", "Exception", "Optional", "validate_is_on_demand_spark_supported", "bs4", "list", "requests", "time", "os", "CLUSTER_TYPE_MIN_SUPPORT", "get_job_status", "__version__", "int", "domino._version", "typing", "validate_distributed_compute_cluster_properties", "MINIMUM_EXTERNAL_VOLUME_MOUNTS_SUPPORT_DOMINO_VERSION", "BeautifulSoup", "get_auth_by_type", "get_default_spark_settings", "functools", "validate_spark_executor_count", "throw_if_information_invalid", "List", "DOMINO_LOG_LEVEL_KEY_NAME", "DOMINO_HOST_KEY_NAME", "validate_on_demand_spark_cluster_properties", "_Routes", "validate_is_external_volume_mounts_supported", "helpers", "exceptions", "str", "MINIMUM_ON_DEMAND_SPARK_CLUSTER_SUPPORT_DOMINO_VERSION", "Tuple"], "variables": ["request_payload", "app_publish", "commitId", "run_stop", "accepted_units", "validated_compute_cluster_properties", "compute_environment_id", "executor_hardware_tier_id", "path", "default_master_hardware_tier", "resolved_hardware_tier_id", "project", "function", "stdout", "query", "job_status", "self", "output_commit_id", "tier", "endpoint_publish", "owner_username", "saveChanges", "useable_environment_list_url", "process_log", "model_version_export_logs", "relationship", "_", "username_or_email", "span_regex", "error_message", "name", "message", "get_default_spark_settings", "r", "max_execution_slot", "logs", "model_version_export_status", "raw_stdout", "validate_on_demand_spark_cluster_properties", "validate_is_external_volume_mounts_supported", "model_version_export", "required_keys", "poll_start", "unpublishRunningApps", "default_spark_setting_url", "response", "supported_types", "description", "project_create", "isDirect", "stdout_msg", "runs_status", "validate_is_on_demand_spark_supported", "api_key", "runs_stdout", "endpoint_state", "collaborators_add", "_configure_logging", "master_hardware_tier_id", "files_upload", "run_id", "model_version_publish", "executor_storage", "job_stop", "returns", "_app_id", "html_start_tags", "projects_list", "_validate_hardware_tier_name", "_validate_environment_id", "job_start_blocking", "app_id", "log", "validate_distributed_compute_cluster_properties", "job", "users", "job_start", "files_list", "user_id", "hardwareTierId", "publishApiEndpoint", "count", "runId", "data", "file", "title", "_host", "html_end_tags", "__app_get_status", "key", "model_versions_get", "endpoint_unpublish", "_put_file", "spark_cluster_properties", "logging_level", "model_publish", "host", "deployment_version", "runs_start", "poll_freq", "default_executor_hardware_tier", "max_poll_time", "get_hardware_tier_id_from_name", "current_retry_count", "show_completed", "project_archive", "app", "environments_list", "command", "request", "__init__", "requires_at_least", "collaborators_remove", "get_job_status", "authenticate", "key_required", "job_id", "get_run_log", "_validate_commit_id", "elapsed_time", "_get", "includeSetupLog", "files_to_exclude", "auth_token", "__app_create", "validate_spark_executor_count", "status", "_useable_environments_list", "retry_count", "default_spark_setting", "model_version_sagemaker_export", "text", "_validate_hardware_tier_id", "valid_relationships", "blobs_get", "_validate_blob_key", "commits_list", "regex", "run_response", "fork_project", "validations", "model_id", "app_unpublish", "project_name", "payload", "_project_id", "required_key_overrides", "run_info", "executor_count", "environment_id", "get_user_id", "domino_token_file", "all_owned_projects", "_validate_information_data_type", "unit", "runs_start_blocking", "throw_if_information_invalid", "collaborators_get", "get_run_info", "job_runtime_execution_details", "_csrf_no_check_header", "url", "Domino", "supported_types_str", "models_list", "hardware_tiers_list", "runs_list"]}, {"author": "niole", "path": "domino/domino.py", "imports": ["_HttpRequestManager", "pprint", "logging", "ValueError", "len", "polling2", "re", "Exception", "Optional", "validate_is_on_demand_spark_supported", "bs4", "list", "requests", "time", "os", "CLUSTER_TYPE_MIN_SUPPORT", "get_job_status", "__version__", "int", "domino._version", "typing", "validate_distributed_compute_cluster_properties", "MINIMUM_EXTERNAL_VOLUME_MOUNTS_SUPPORT_DOMINO_VERSION", "BeautifulSoup", "get_auth_by_type", "get_default_spark_settings", "functools", "validate_spark_executor_count", "throw_if_information_invalid", "List", "DOMINO_LOG_LEVEL_KEY_NAME", "DOMINO_HOST_KEY_NAME", "validate_on_demand_spark_cluster_properties", "_Routes", "validate_is_external_volume_mounts_supported", "helpers", "exceptions", "str", "MINIMUM_ON_DEMAND_SPARK_CLUSTER_SUPPORT_DOMINO_VERSION", "Tuple"], "variables": ["request_payload", "app_publish", "commitId", "run_stop", "accepted_units", "validated_compute_cluster_properties", "compute_environment_id", "executor_hardware_tier_id", "path", "default_master_hardware_tier", "resolved_hardware_tier_id", "project", "function", "stdout", "query", "job_status", "self", "output_commit_id", "tier", "endpoint_publish", "owner_username", "saveChanges", "useable_environment_list_url", "process_log", "model_version_export_logs", "relationship", "_", "username_or_email", "span_regex", "error_message", "name", "message", "get_default_spark_settings", "r", "max_execution_slot", "logs", "model_version_export_status", "raw_stdout", "validate_on_demand_spark_cluster_properties", "validate_is_external_volume_mounts_supported", "model_version_export", "required_keys", "poll_start", "unpublishRunningApps", "default_spark_setting_url", "response", "supported_types", "description", "project_create", "isDirect", "stdout_msg", "runs_status", "validate_is_on_demand_spark_supported", "api_key", "runs_stdout", "endpoint_state", "collaborators_add", "_configure_logging", "master_hardware_tier_id", "files_upload", "run_id", "model_version_publish", "executor_storage", "job_stop", "returns", "_app_id", "html_start_tags", "projects_list", "_validate_hardware_tier_name", "_validate_environment_id", "job_start_blocking", "app_id", "log", "validate_distributed_compute_cluster_properties", "job", "users", "job_start", "files_list", "user_id", "hardwareTierId", "publishApiEndpoint", "count", "runId", "data", "file", "title", "_host", "html_end_tags", "__app_get_status", "key", "model_versions_get", "endpoint_unpublish", "_put_file", "spark_cluster_properties", "logging_level", "model_publish", "host", "deployment_version", "runs_start", "poll_freq", "default_executor_hardware_tier", "max_poll_time", "get_hardware_tier_id_from_name", "current_retry_count", "show_completed", "project_archive", "app", "environments_list", "command", "request", "__init__", "requires_at_least", "collaborators_remove", "get_job_status", "authenticate", "key_required", "job_id", "get_run_log", "_validate_commit_id", "elapsed_time", "_get", "includeSetupLog", "files_to_exclude", "auth_token", "__app_create", "validate_spark_executor_count", "status", "_useable_environments_list", "retry_count", "default_spark_setting", "model_version_sagemaker_export", "text", "_validate_hardware_tier_id", "valid_relationships", "blobs_get", "_validate_blob_key", "commits_list", "regex", "run_response", "fork_project", "validations", "model_id", "app_unpublish", "project_name", "payload", "_project_id", "required_key_overrides", "run_info", "executor_count", "environment_id", "get_user_id", "domino_token_file", "all_owned_projects", "_validate_information_data_type", "unit", "runs_start_blocking", "throw_if_information_invalid", "collaborators_get", "get_run_info", "job_runtime_execution_details", "_csrf_no_check_header", "url", "Domino", "supported_types_str", "models_list", "hardware_tiers_list", "runs_list"]}, {"author": "niole", "path": "domino/helpers.py", "imports": ["next", "LooseVersion", "print", "urllib", "int", "socket", "parse_version", "distutils.version", "os", "constants"], "variables": ["url_split", "clean_host_url", "s", "is_version_compatible", "is_compute_cluster_properties_supported", "domino_is_reachable", "fqdn", "curr_version", "is_external_volume_mounts_supported", "is_reachable", "is_on_demand_spark_cluster_supported", "is_comute_cluster_autoscaling_supported", "is_cluster_type_supported"]}, {"author": "imarchenko", "path": "domino/domino.py", "imports": ["_HttpRequestManager", "pprint", "logging", "ValueError", "len", "polling2", "re", "Exception", "Optional", "validate_is_on_demand_spark_supported", "bs4", "list", "requests", "time", "os", "CLUSTER_TYPE_MIN_SUPPORT", "get_job_status", "__version__", "int", "domino._version", "typing", "validate_distributed_compute_cluster_properties", "MINIMUM_EXTERNAL_VOLUME_MOUNTS_SUPPORT_DOMINO_VERSION", "BeautifulSoup", "get_auth_by_type", "get_default_spark_settings", "functools", "validate_spark_executor_count", "throw_if_information_invalid", "List", "DOMINO_LOG_LEVEL_KEY_NAME", "DOMINO_HOST_KEY_NAME", "validate_on_demand_spark_cluster_properties", "_Routes", "validate_is_external_volume_mounts_supported", "helpers", "exceptions", "str", "MINIMUM_ON_DEMAND_SPARK_CLUSTER_SUPPORT_DOMINO_VERSION", "Tuple"], "variables": ["request_payload", "app_publish", "commitId", "run_stop", "accepted_units", "validated_compute_cluster_properties", "compute_environment_id", "executor_hardware_tier_id", "path", "default_master_hardware_tier", "resolved_hardware_tier_id", "project", "function", "stdout", "query", "job_status", "self", "output_commit_id", "tier", "endpoint_publish", "owner_username", "saveChanges", "useable_environment_list_url", "process_log", "model_version_export_logs", "relationship", "_", "username_or_email", "span_regex", "error_message", "name", "message", "get_default_spark_settings", "r", "max_execution_slot", "logs", "model_version_export_status", "raw_stdout", "validate_on_demand_spark_cluster_properties", "validate_is_external_volume_mounts_supported", "model_version_export", "required_keys", "poll_start", "unpublishRunningApps", "default_spark_setting_url", "response", "supported_types", "description", "project_create", "isDirect", "stdout_msg", "runs_status", "validate_is_on_demand_spark_supported", "api_key", "runs_stdout", "endpoint_state", "collaborators_add", "_configure_logging", "master_hardware_tier_id", "files_upload", "run_id", "model_version_publish", "executor_storage", "job_stop", "returns", "_app_id", "html_start_tags", "projects_list", "_validate_hardware_tier_name", "_validate_environment_id", "job_start_blocking", "app_id", "log", "validate_distributed_compute_cluster_properties", "job", "users", "job_start", "files_list", "user_id", "hardwareTierId", "publishApiEndpoint", "count", "runId", "data", "file", "title", "_host", "html_end_tags", "__app_get_status", "key", "model_versions_get", "endpoint_unpublish", "_put_file", "spark_cluster_properties", "logging_level", "model_publish", "host", "deployment_version", "runs_start", "poll_freq", "default_executor_hardware_tier", "max_poll_time", "get_hardware_tier_id_from_name", "current_retry_count", "show_completed", "project_archive", "app", "environments_list", "command", "request", "__init__", "requires_at_least", "collaborators_remove", "get_job_status", "authenticate", "key_required", "job_id", "get_run_log", "_validate_commit_id", "elapsed_time", "_get", "includeSetupLog", "files_to_exclude", "auth_token", "__app_create", "validate_spark_executor_count", "status", "_useable_environments_list", "retry_count", "default_spark_setting", "model_version_sagemaker_export", "text", "_validate_hardware_tier_id", "valid_relationships", "blobs_get", "_validate_blob_key", "commits_list", "regex", "run_response", "fork_project", "validations", "model_id", "app_unpublish", "project_name", "payload", "_project_id", "required_key_overrides", "run_info", "executor_count", "environment_id", "get_user_id", "domino_token_file", "all_owned_projects", "_validate_information_data_type", "unit", "runs_start_blocking", "throw_if_information_invalid", "collaborators_get", "get_run_info", "job_runtime_execution_details", "_csrf_no_check_header", "url", "Domino", "supported_types_str", "models_list", "hardware_tiers_list", "runs_list"]}, {"author": "imarchenko", "path": "examples/export_model_to_sagemaker.py", "imports": ["boto3", "domino", "pprint", "base64", "sorted", "sleep", "Domino", "print", "b64decode", "time", "os"], "variables": ["aws_ecr_registry", "domino", "model_id", "model_export_logs", "model_version_id", "aws_account", "project_models", "aws_ecr_auth", "model_export_status", "aws_ecr_password", "AWS_ECR_REPOSITORY_NAME", "aws_ecr_credentials", "model_export_image_tag", "model_versions", "SLEEP_TIME_SECONDS", "aws_ecr_username", "model_export"]}, {"author": "Mohith G", "path": "domino/domino.py", "imports": ["_HttpRequestManager", "pprint", "logging", "ValueError", "len", "polling2", "re", "Exception", "Optional", "validate_is_on_demand_spark_supported", "bs4", "list", "requests", "time", "os", "CLUSTER_TYPE_MIN_SUPPORT", "get_job_status", "__version__", "int", "domino._version", "typing", "validate_distributed_compute_cluster_properties", "MINIMUM_EXTERNAL_VOLUME_MOUNTS_SUPPORT_DOMINO_VERSION", "BeautifulSoup", "get_auth_by_type", "get_default_spark_settings", "functools", "validate_spark_executor_count", "throw_if_information_invalid", "List", "DOMINO_LOG_LEVEL_KEY_NAME", "DOMINO_HOST_KEY_NAME", "validate_on_demand_spark_cluster_properties", "_Routes", "validate_is_external_volume_mounts_supported", "helpers", "exceptions", "str", "MINIMUM_ON_DEMAND_SPARK_CLUSTER_SUPPORT_DOMINO_VERSION", "Tuple"], "variables": ["request_payload", "app_publish", "commitId", "run_stop", "accepted_units", "validated_compute_cluster_properties", "compute_environment_id", "executor_hardware_tier_id", "path", "default_master_hardware_tier", "resolved_hardware_tier_id", "project", "function", "stdout", "query", "job_status", "self", "output_commit_id", "tier", "endpoint_publish", "owner_username", "saveChanges", "useable_environment_list_url", "process_log", "model_version_export_logs", "relationship", "_", "username_or_email", "span_regex", "error_message", "name", "message", "get_default_spark_settings", "r", "max_execution_slot", "logs", "model_version_export_status", "raw_stdout", "validate_on_demand_spark_cluster_properties", "validate_is_external_volume_mounts_supported", "model_version_export", "required_keys", "poll_start", "unpublishRunningApps", "default_spark_setting_url", "response", "supported_types", "description", "project_create", "isDirect", "stdout_msg", "runs_status", "validate_is_on_demand_spark_supported", "api_key", "runs_stdout", "endpoint_state", "collaborators_add", "_configure_logging", "master_hardware_tier_id", "files_upload", "run_id", "model_version_publish", "executor_storage", "job_stop", "returns", "_app_id", "html_start_tags", "projects_list", "_validate_hardware_tier_name", "_validate_environment_id", "job_start_blocking", "app_id", "log", "validate_distributed_compute_cluster_properties", "job", "users", "job_start", "files_list", "user_id", "hardwareTierId", "publishApiEndpoint", "count", "runId", "data", "file", "title", "_host", "html_end_tags", "__app_get_status", "key", "model_versions_get", "endpoint_unpublish", "_put_file", "spark_cluster_properties", "logging_level", "model_publish", "host", "deployment_version", "runs_start", "poll_freq", "default_executor_hardware_tier", "max_poll_time", "get_hardware_tier_id_from_name", "current_retry_count", "show_completed", "project_archive", "app", "environments_list", "command", "request", "__init__", "requires_at_least", "collaborators_remove", "get_job_status", "authenticate", "key_required", "job_id", "get_run_log", "_validate_commit_id", "elapsed_time", "_get", "includeSetupLog", "files_to_exclude", "auth_token", "__app_create", "validate_spark_executor_count", "status", "_useable_environments_list", "retry_count", "default_spark_setting", "model_version_sagemaker_export", "text", "_validate_hardware_tier_id", "valid_relationships", "blobs_get", "_validate_blob_key", "commits_list", "regex", "run_response", "fork_project", "validations", "model_id", "app_unpublish", "project_name", "payload", "_project_id", "required_key_overrides", "run_info", "executor_count", "environment_id", "get_user_id", "domino_token_file", "all_owned_projects", "_validate_information_data_type", "unit", "runs_start_blocking", "throw_if_information_invalid", "collaborators_get", "get_run_info", "job_runtime_execution_details", "_csrf_no_check_header", "url", "Domino", "supported_types_str", "models_list", "hardware_tiers_list", "runs_list"]}, {"author": "Mohith G", "path": "examples/models_and_environments.py", "imports": ["domino", "list", "describe_model_versions", "len", "filter", "Domino", "print", "os"], "variables": ["domino", "published_model_id", "describe_model_versions", "global_environments", "another_model_version", "all_available_models", "chosen_environment_id", "model_versions", "all_available_environments", "published_model"]}, {"author": "Maksim", "path": "domino/domino.py", "imports": ["_HttpRequestManager", "pprint", "logging", "ValueError", "len", "polling2", "re", "Exception", "Optional", "validate_is_on_demand_spark_supported", "bs4", "list", "requests", "time", "os", "CLUSTER_TYPE_MIN_SUPPORT", "get_job_status", "__version__", "int", "domino._version", "typing", "validate_distributed_compute_cluster_properties", "MINIMUM_EXTERNAL_VOLUME_MOUNTS_SUPPORT_DOMINO_VERSION", "BeautifulSoup", "get_auth_by_type", "get_default_spark_settings", "functools", "validate_spark_executor_count", "throw_if_information_invalid", "List", "DOMINO_LOG_LEVEL_KEY_NAME", "DOMINO_HOST_KEY_NAME", "validate_on_demand_spark_cluster_properties", "_Routes", "validate_is_external_volume_mounts_supported", "helpers", "exceptions", "str", "MINIMUM_ON_DEMAND_SPARK_CLUSTER_SUPPORT_DOMINO_VERSION", "Tuple"], "variables": ["request_payload", "app_publish", "commitId", "run_stop", "accepted_units", "validated_compute_cluster_properties", "compute_environment_id", "executor_hardware_tier_id", "path", "default_master_hardware_tier", "resolved_hardware_tier_id", "project", "function", "stdout", "query", "job_status", "self", "output_commit_id", "tier", "endpoint_publish", "owner_username", "saveChanges", "useable_environment_list_url", "process_log", "model_version_export_logs", "relationship", "_", "username_or_email", "span_regex", "error_message", "name", "message", "get_default_spark_settings", "r", "max_execution_slot", "logs", "model_version_export_status", "raw_stdout", "validate_on_demand_spark_cluster_properties", "validate_is_external_volume_mounts_supported", "model_version_export", "required_keys", "poll_start", "unpublishRunningApps", "default_spark_setting_url", "response", "supported_types", "description", "project_create", "isDirect", "stdout_msg", "runs_status", "validate_is_on_demand_spark_supported", "api_key", "runs_stdout", "endpoint_state", "collaborators_add", "_configure_logging", "master_hardware_tier_id", "files_upload", "run_id", "model_version_publish", "executor_storage", "job_stop", "returns", "_app_id", "html_start_tags", "projects_list", "_validate_hardware_tier_name", "_validate_environment_id", "job_start_blocking", "app_id", "log", "validate_distributed_compute_cluster_properties", "job", "users", "job_start", "files_list", "user_id", "hardwareTierId", "publishApiEndpoint", "count", "runId", "data", "file", "title", "_host", "html_end_tags", "__app_get_status", "key", "model_versions_get", "endpoint_unpublish", "_put_file", "spark_cluster_properties", "logging_level", "model_publish", "host", "deployment_version", "runs_start", "poll_freq", "default_executor_hardware_tier", "max_poll_time", "get_hardware_tier_id_from_name", "current_retry_count", "show_completed", "project_archive", "app", "environments_list", "command", "request", "__init__", "requires_at_least", "collaborators_remove", "get_job_status", "authenticate", "key_required", "job_id", "get_run_log", "_validate_commit_id", "elapsed_time", "_get", "includeSetupLog", "files_to_exclude", "auth_token", "__app_create", "validate_spark_executor_count", "status", "_useable_environments_list", "retry_count", "default_spark_setting", "model_version_sagemaker_export", "text", "_validate_hardware_tier_id", "valid_relationships", "blobs_get", "_validate_blob_key", "commits_list", "regex", "run_response", "fork_project", "validations", "model_id", "app_unpublish", "project_name", "payload", "_project_id", "required_key_overrides", "run_info", "executor_count", "environment_id", "get_user_id", "domino_token_file", "all_owned_projects", "_validate_information_data_type", "unit", "runs_start_blocking", "throw_if_information_invalid", "collaborators_get", "get_run_info", "job_runtime_execution_details", "_csrf_no_check_header", "url", "Domino", "supported_types_str", "models_list", "hardware_tiers_list", "runs_list"]}, {"author": "Will Eaton", "path": "domino/airflow/__init__.py", "imports": ["domino.airflow._operator", "DominoSparkOperator", "ImportError", "DominoOperator"], "variables": ["__all__"]}, {"author": "Will Eaton", "path": "domino/airflow/_operator.py", "imports": ["airflow.utils.decorators", "domino", "Any", "List", "BaseOperator", "ValueError", "airflow.models", "len", "super", "Domino", "typing", "Optional", "apply_defaults", "time"], "variables": ["tier_metadata", "execute", "template_fields", "DominoSparkOperator", "__init__", "DominoOperator", "run_response", "log", "ui_color"]}, {"author": "Will Eaton", "path": "domino/domino.py", "imports": ["_HttpRequestManager", "pprint", "logging", "ValueError", "len", "polling2", "re", "Exception", "Optional", "validate_is_on_demand_spark_supported", "bs4", "list", "requests", "time", "os", "CLUSTER_TYPE_MIN_SUPPORT", "get_job_status", "__version__", "int", "domino._version", "typing", "validate_distributed_compute_cluster_properties", "MINIMUM_EXTERNAL_VOLUME_MOUNTS_SUPPORT_DOMINO_VERSION", "BeautifulSoup", "get_auth_by_type", "get_default_spark_settings", "functools", "validate_spark_executor_count", "throw_if_information_invalid", "List", "DOMINO_LOG_LEVEL_KEY_NAME", "DOMINO_HOST_KEY_NAME", "validate_on_demand_spark_cluster_properties", "_Routes", "validate_is_external_volume_mounts_supported", "helpers", "exceptions", "str", "MINIMUM_ON_DEMAND_SPARK_CLUSTER_SUPPORT_DOMINO_VERSION", "Tuple"], "variables": ["request_payload", "app_publish", "commitId", "run_stop", "accepted_units", "validated_compute_cluster_properties", "compute_environment_id", "executor_hardware_tier_id", "path", "default_master_hardware_tier", "resolved_hardware_tier_id", "project", "function", "stdout", "query", "job_status", "self", "output_commit_id", "tier", "endpoint_publish", "owner_username", "saveChanges", "useable_environment_list_url", "process_log", "model_version_export_logs", "relationship", "_", "username_or_email", "span_regex", "error_message", "name", "message", "get_default_spark_settings", "r", "max_execution_slot", "logs", "model_version_export_status", "raw_stdout", "validate_on_demand_spark_cluster_properties", "validate_is_external_volume_mounts_supported", "model_version_export", "required_keys", "poll_start", "unpublishRunningApps", "default_spark_setting_url", "response", "supported_types", "description", "project_create", "isDirect", "stdout_msg", "runs_status", "validate_is_on_demand_spark_supported", "api_key", "runs_stdout", "endpoint_state", "collaborators_add", "_configure_logging", "master_hardware_tier_id", "files_upload", "run_id", "model_version_publish", "executor_storage", "job_stop", "returns", "_app_id", "html_start_tags", "projects_list", "_validate_hardware_tier_name", "_validate_environment_id", "job_start_blocking", "app_id", "log", "validate_distributed_compute_cluster_properties", "job", "users", "job_start", "files_list", "user_id", "hardwareTierId", "publishApiEndpoint", "count", "runId", "data", "file", "title", "_host", "html_end_tags", "__app_get_status", "key", "model_versions_get", "endpoint_unpublish", "_put_file", "spark_cluster_properties", "logging_level", "model_publish", "host", "deployment_version", "runs_start", "poll_freq", "default_executor_hardware_tier", "max_poll_time", "get_hardware_tier_id_from_name", "current_retry_count", "show_completed", "project_archive", "app", "environments_list", "command", "request", "__init__", "requires_at_least", "collaborators_remove", "get_job_status", "authenticate", "key_required", "job_id", "get_run_log", "_validate_commit_id", "elapsed_time", "_get", "includeSetupLog", "files_to_exclude", "auth_token", "__app_create", "validate_spark_executor_count", "status", "_useable_environments_list", "retry_count", "default_spark_setting", "model_version_sagemaker_export", "text", "_validate_hardware_tier_id", "valid_relationships", "blobs_get", "_validate_blob_key", "commits_list", "regex", "run_response", "fork_project", "validations", "model_id", "app_unpublish", "project_name", "payload", "_project_id", "required_key_overrides", "run_info", "executor_count", "environment_id", "get_user_id", "domino_token_file", "all_owned_projects", "_validate_information_data_type", "unit", "runs_start_blocking", "throw_if_information_invalid", "collaborators_get", "get_run_info", "job_runtime_execution_details", "_csrf_no_check_header", "url", "Domino", "supported_types_str", "models_list", "hardware_tiers_list", "runs_list"]}, {"author": "Will Eaton", "path": "tests/scripts/test_spark.py", "imports": ["SparkContext", "pyspark.sql", "pandas", "pyspark", "SQLContext"], "variables": ["sqlContext", "sc", "df", "spark", "sdf"]}, {"author": "Will Eaton", "path": "tests/test_operator.py", "imports": ["airflow", "airflow.models", "TaskInstance", "datetime", "pytest", "DAG", "domino.airflow", "DominoOperator", "RunFailedException", "os", "domino.exceptions"], "variables": ["test_operator", "task", "dag", "test_operator_fail", "TEST_PROJECT", "test_operator_fail_invalid_tier", "ti"]}, {"author": "Will Eaton", "path": "tests/test_spark_operator.py", "imports": ["airflow", "airflow.models", "TaskInstance", "datetime", "pytest", "DAG", "DominoSparkOperator", "domino.airflow", "RunFailedException", "os", "domino.exceptions"], "variables": ["task", "dag", "SPARK_ENVIRONMENT_ID", "TEST_PROJECT", "test_spark_operator_with_cluster", "test_spark_operator_no_cluster_failed", "ti", "test_spark_operator_no_cluster"]}, {"author": "Abhijeet Sharma", "path": "domino/domino.py", "imports": ["_HttpRequestManager", "pprint", "logging", "ValueError", "len", "polling2", "re", "Exception", "Optional", "validate_is_on_demand_spark_supported", "bs4", "list", "requests", "time", "os", "CLUSTER_TYPE_MIN_SUPPORT", "get_job_status", "__version__", "int", "domino._version", "typing", "validate_distributed_compute_cluster_properties", "MINIMUM_EXTERNAL_VOLUME_MOUNTS_SUPPORT_DOMINO_VERSION", "BeautifulSoup", "get_auth_by_type", "get_default_spark_settings", "functools", "validate_spark_executor_count", "throw_if_information_invalid", "List", "DOMINO_LOG_LEVEL_KEY_NAME", "DOMINO_HOST_KEY_NAME", "validate_on_demand_spark_cluster_properties", "_Routes", "validate_is_external_volume_mounts_supported", "helpers", "exceptions", "str", "MINIMUM_ON_DEMAND_SPARK_CLUSTER_SUPPORT_DOMINO_VERSION", "Tuple"], "variables": ["request_payload", "app_publish", "commitId", "run_stop", "accepted_units", "validated_compute_cluster_properties", "compute_environment_id", "executor_hardware_tier_id", "path", "default_master_hardware_tier", "resolved_hardware_tier_id", "project", "function", "stdout", "query", "job_status", "self", "output_commit_id", "tier", "endpoint_publish", "owner_username", "saveChanges", "useable_environment_list_url", "process_log", "model_version_export_logs", "relationship", "_", "username_or_email", "span_regex", "error_message", "name", "message", "get_default_spark_settings", "r", "max_execution_slot", "logs", "model_version_export_status", "raw_stdout", "validate_on_demand_spark_cluster_properties", "validate_is_external_volume_mounts_supported", "model_version_export", "required_keys", "poll_start", "unpublishRunningApps", "default_spark_setting_url", "response", "supported_types", "description", "project_create", "isDirect", "stdout_msg", "runs_status", "validate_is_on_demand_spark_supported", "api_key", "runs_stdout", "endpoint_state", "collaborators_add", "_configure_logging", "master_hardware_tier_id", "files_upload", "run_id", "model_version_publish", "executor_storage", "job_stop", "returns", "_app_id", "html_start_tags", "projects_list", "_validate_hardware_tier_name", "_validate_environment_id", "job_start_blocking", "app_id", "log", "validate_distributed_compute_cluster_properties", "job", "users", "job_start", "files_list", "user_id", "hardwareTierId", "publishApiEndpoint", "count", "runId", "data", "file", "title", "_host", "html_end_tags", "__app_get_status", "key", "model_versions_get", "endpoint_unpublish", "_put_file", "spark_cluster_properties", "logging_level", "model_publish", "host", "deployment_version", "runs_start", "poll_freq", "default_executor_hardware_tier", "max_poll_time", "get_hardware_tier_id_from_name", "current_retry_count", "show_completed", "project_archive", "app", "environments_list", "command", "request", "__init__", "requires_at_least", "collaborators_remove", "get_job_status", "authenticate", "key_required", "job_id", "get_run_log", "_validate_commit_id", "elapsed_time", "_get", "includeSetupLog", "files_to_exclude", "auth_token", "__app_create", "validate_spark_executor_count", "status", "_useable_environments_list", "retry_count", "default_spark_setting", "model_version_sagemaker_export", "text", "_validate_hardware_tier_id", "valid_relationships", "blobs_get", "_validate_blob_key", "commits_list", "regex", "run_response", "fork_project", "validations", "model_id", "app_unpublish", "project_name", "payload", "_project_id", "required_key_overrides", "run_info", "executor_count", "environment_id", "get_user_id", "domino_token_file", "all_owned_projects", "_validate_information_data_type", "unit", "runs_start_blocking", "throw_if_information_invalid", "collaborators_get", "get_run_info", "job_runtime_execution_details", "_csrf_no_check_header", "url", "Domino", "supported_types_str", "models_list", "hardware_tiers_list", "runs_list"]}, {"author": "Abhijeet Sharma", "path": "domino/helpers.py", "imports": ["next", "LooseVersion", "print", "urllib", "int", "socket", "parse_version", "distutils.version", "os", "constants"], "variables": ["url_split", "clean_host_url", "s", "is_version_compatible", "is_compute_cluster_properties_supported", "domino_is_reachable", "fqdn", "curr_version", "is_external_volume_mounts_supported", "is_reachable", "is_on_demand_spark_cluster_supported", "is_comute_cluster_autoscaling_supported", "is_cluster_type_supported"]}, {"author": "Abhijeet Sharma", "path": "domino/http_request_manager.py", "imports": ["AuthBase", "logging", "requests", "bool", "HTTPStatus", "http", "ReloginRequiredException", "BeautifulSoup", "bs4", "requests.auth"], "variables": ["_HttpRequestManager", "get", "put", "post", "url", "self", "json", "__init__", "data", "_raise_for_status", "delete", "get_raw"]}, {"author": "Abhijeet Sharma", "path": "setup.py", "imports": ["find_packages", "pathlib", "get_version", "setup", "re", "open", "setuptools"], "variables": ["README", "f", "HERE", "get_version", "PACKAGE_NAME", "mo", "ver"]}, {"author": "Abhijeet Sharma", "path": "domino/domino.py", "imports": ["_HttpRequestManager", "pprint", "logging", "ValueError", "len", "polling2", "re", "Exception", "Optional", "validate_is_on_demand_spark_supported", "bs4", "list", "requests", "time", "os", "CLUSTER_TYPE_MIN_SUPPORT", "get_job_status", "__version__", "int", "domino._version", "typing", "validate_distributed_compute_cluster_properties", "MINIMUM_EXTERNAL_VOLUME_MOUNTS_SUPPORT_DOMINO_VERSION", "BeautifulSoup", "get_auth_by_type", "get_default_spark_settings", "functools", "validate_spark_executor_count", "throw_if_information_invalid", "List", "DOMINO_LOG_LEVEL_KEY_NAME", "DOMINO_HOST_KEY_NAME", "validate_on_demand_spark_cluster_properties", "_Routes", "validate_is_external_volume_mounts_supported", "helpers", "exceptions", "str", "MINIMUM_ON_DEMAND_SPARK_CLUSTER_SUPPORT_DOMINO_VERSION", "Tuple"], "variables": ["request_payload", "app_publish", "commitId", "run_stop", "accepted_units", "validated_compute_cluster_properties", "compute_environment_id", "executor_hardware_tier_id", "path", "default_master_hardware_tier", "resolved_hardware_tier_id", "project", "function", "stdout", "query", "job_status", "self", "output_commit_id", "tier", "endpoint_publish", "owner_username", "saveChanges", "useable_environment_list_url", "process_log", "model_version_export_logs", "relationship", "_", "username_or_email", "span_regex", "error_message", "name", "message", "get_default_spark_settings", "r", "max_execution_slot", "logs", "model_version_export_status", "raw_stdout", "validate_on_demand_spark_cluster_properties", "validate_is_external_volume_mounts_supported", "model_version_export", "required_keys", "poll_start", "unpublishRunningApps", "default_spark_setting_url", "response", "supported_types", "description", "project_create", "isDirect", "stdout_msg", "runs_status", "validate_is_on_demand_spark_supported", "api_key", "runs_stdout", "endpoint_state", "collaborators_add", "_configure_logging", "master_hardware_tier_id", "files_upload", "run_id", "model_version_publish", "executor_storage", "job_stop", "returns", "_app_id", "html_start_tags", "projects_list", "_validate_hardware_tier_name", "_validate_environment_id", "job_start_blocking", "app_id", "log", "validate_distributed_compute_cluster_properties", "job", "users", "job_start", "files_list", "user_id", "hardwareTierId", "publishApiEndpoint", "count", "runId", "data", "file", "title", "_host", "html_end_tags", "__app_get_status", "key", "model_versions_get", "endpoint_unpublish", "_put_file", "spark_cluster_properties", "logging_level", "model_publish", "host", "deployment_version", "runs_start", "poll_freq", "default_executor_hardware_tier", "max_poll_time", "get_hardware_tier_id_from_name", "current_retry_count", "show_completed", "project_archive", "app", "environments_list", "command", "request", "__init__", "requires_at_least", "collaborators_remove", "get_job_status", "authenticate", "key_required", "job_id", "get_run_log", "_validate_commit_id", "elapsed_time", "_get", "includeSetupLog", "files_to_exclude", "auth_token", "__app_create", "validate_spark_executor_count", "status", "_useable_environments_list", "retry_count", "default_spark_setting", "model_version_sagemaker_export", "text", "_validate_hardware_tier_id", "valid_relationships", "blobs_get", "_validate_blob_key", "commits_list", "regex", "run_response", "fork_project", "validations", "model_id", "app_unpublish", "project_name", "payload", "_project_id", "required_key_overrides", "run_info", "executor_count", "environment_id", "get_user_id", "domino_token_file", "all_owned_projects", "_validate_information_data_type", "unit", "runs_start_blocking", "throw_if_information_invalid", "collaborators_get", "get_run_info", "job_runtime_execution_details", "_csrf_no_check_header", "url", "Domino", "supported_types_str", "models_list", "hardware_tiers_list", "runs_list"]}, {"author": "Abhijeet Sharma", "path": "domino/helpers.py", "imports": ["next", "LooseVersion", "print", "urllib", "int", "socket", "parse_version", "distutils.version", "os", "constants"], "variables": ["url_split", "clean_host_url", "s", "is_version_compatible", "is_compute_cluster_properties_supported", "domino_is_reachable", "fqdn", "curr_version", "is_external_volume_mounts_supported", "is_reachable", "is_on_demand_spark_cluster_supported", "is_comute_cluster_autoscaling_supported", "is_cluster_type_supported"]}, {"author": "Abhijeet Sharma", "path": "domino/http_request_manager.py", "imports": ["AuthBase", "logging", "requests", "bool", "HTTPStatus", "http", "ReloginRequiredException", "BeautifulSoup", "bs4", "requests.auth"], "variables": ["_HttpRequestManager", "get", "put", "post", "url", "self", "json", "__init__", "data", "_raise_for_status", "delete", "get_raw"]}, {"author": "Abhijeet Sharma", "path": "domino/domino.py", "imports": ["_HttpRequestManager", "pprint", "logging", "ValueError", "len", "polling2", "re", "Exception", "Optional", "validate_is_on_demand_spark_supported", "bs4", "list", "requests", "time", "os", "CLUSTER_TYPE_MIN_SUPPORT", "get_job_status", "__version__", "int", "domino._version", "typing", "validate_distributed_compute_cluster_properties", "MINIMUM_EXTERNAL_VOLUME_MOUNTS_SUPPORT_DOMINO_VERSION", "BeautifulSoup", "get_auth_by_type", "get_default_spark_settings", "functools", "validate_spark_executor_count", "throw_if_information_invalid", "List", "DOMINO_LOG_LEVEL_KEY_NAME", "DOMINO_HOST_KEY_NAME", "validate_on_demand_spark_cluster_properties", "_Routes", "validate_is_external_volume_mounts_supported", "helpers", "exceptions", "str", "MINIMUM_ON_DEMAND_SPARK_CLUSTER_SUPPORT_DOMINO_VERSION", "Tuple"], "variables": ["request_payload", "app_publish", "commitId", "run_stop", "accepted_units", "validated_compute_cluster_properties", "compute_environment_id", "executor_hardware_tier_id", "path", "default_master_hardware_tier", "resolved_hardware_tier_id", "project", "function", "stdout", "query", "job_status", "self", "output_commit_id", "tier", "endpoint_publish", "owner_username", "saveChanges", "useable_environment_list_url", "process_log", "model_version_export_logs", "relationship", "_", "username_or_email", "span_regex", "error_message", "name", "message", "get_default_spark_settings", "r", "max_execution_slot", "logs", "model_version_export_status", "raw_stdout", "validate_on_demand_spark_cluster_properties", "validate_is_external_volume_mounts_supported", "model_version_export", "required_keys", "poll_start", "unpublishRunningApps", "default_spark_setting_url", "response", "supported_types", "description", "project_create", "isDirect", "stdout_msg", "runs_status", "validate_is_on_demand_spark_supported", "api_key", "runs_stdout", "endpoint_state", "collaborators_add", "_configure_logging", "master_hardware_tier_id", "files_upload", "run_id", "model_version_publish", "executor_storage", "job_stop", "returns", "_app_id", "html_start_tags", "projects_list", "_validate_hardware_tier_name", "_validate_environment_id", "job_start_blocking", "app_id", "log", "validate_distributed_compute_cluster_properties", "job", "users", "job_start", "files_list", "user_id", "hardwareTierId", "publishApiEndpoint", "count", "runId", "data", "file", "title", "_host", "html_end_tags", "__app_get_status", "key", "model_versions_get", "endpoint_unpublish", "_put_file", "spark_cluster_properties", "logging_level", "model_publish", "host", "deployment_version", "runs_start", "poll_freq", "default_executor_hardware_tier", "max_poll_time", "get_hardware_tier_id_from_name", "current_retry_count", "show_completed", "project_archive", "app", "environments_list", "command", "request", "__init__", "requires_at_least", "collaborators_remove", "get_job_status", "authenticate", "key_required", "job_id", "get_run_log", "_validate_commit_id", "elapsed_time", "_get", "includeSetupLog", "files_to_exclude", "auth_token", "__app_create", "validate_spark_executor_count", "status", "_useable_environments_list", "retry_count", "default_spark_setting", "model_version_sagemaker_export", "text", "_validate_hardware_tier_id", "valid_relationships", "blobs_get", "_validate_blob_key", "commits_list", "regex", "run_response", "fork_project", "validations", "model_id", "app_unpublish", "project_name", "payload", "_project_id", "required_key_overrides", "run_info", "executor_count", "environment_id", "get_user_id", "domino_token_file", "all_owned_projects", "_validate_information_data_type", "unit", "runs_start_blocking", "throw_if_information_invalid", "collaborators_get", "get_run_info", "job_runtime_execution_details", "_csrf_no_check_header", "url", "Domino", "supported_types_str", "models_list", "hardware_tiers_list", "runs_list"]}, {"author": "Abhijeet Sharma", "path": "domino/http_request_manager.py", "imports": ["AuthBase", "logging", "requests", "bool", "HTTPStatus", "http", "ReloginRequiredException", "BeautifulSoup", "bs4", "requests.auth"], "variables": ["_HttpRequestManager", "get", "put", "post", "url", "self", "json", "__init__", "data", "_raise_for_status", "delete", "get_raw"]}, {"author": "Abhijeet Sharma", "path": "domino/domino.py", "imports": ["_HttpRequestManager", "pprint", "logging", "ValueError", "len", "polling2", "re", "Exception", "Optional", "validate_is_on_demand_spark_supported", "bs4", "list", "requests", "time", "os", "CLUSTER_TYPE_MIN_SUPPORT", "get_job_status", "__version__", "int", "domino._version", "typing", "validate_distributed_compute_cluster_properties", "MINIMUM_EXTERNAL_VOLUME_MOUNTS_SUPPORT_DOMINO_VERSION", "BeautifulSoup", "get_auth_by_type", "get_default_spark_settings", "functools", "validate_spark_executor_count", "throw_if_information_invalid", "List", "DOMINO_LOG_LEVEL_KEY_NAME", "DOMINO_HOST_KEY_NAME", "validate_on_demand_spark_cluster_properties", "_Routes", "validate_is_external_volume_mounts_supported", "helpers", "exceptions", "str", "MINIMUM_ON_DEMAND_SPARK_CLUSTER_SUPPORT_DOMINO_VERSION", "Tuple"], "variables": ["request_payload", "app_publish", "commitId", "run_stop", "accepted_units", "validated_compute_cluster_properties", "compute_environment_id", "executor_hardware_tier_id", "path", "default_master_hardware_tier", "resolved_hardware_tier_id", "project", "function", "stdout", "query", "job_status", "self", "output_commit_id", "tier", "endpoint_publish", "owner_username", "saveChanges", "useable_environment_list_url", "process_log", "model_version_export_logs", "relationship", "_", "username_or_email", "span_regex", "error_message", "name", "message", "get_default_spark_settings", "r", "max_execution_slot", "logs", "model_version_export_status", "raw_stdout", "validate_on_demand_spark_cluster_properties", "validate_is_external_volume_mounts_supported", "model_version_export", "required_keys", "poll_start", "unpublishRunningApps", "default_spark_setting_url", "response", "supported_types", "description", "project_create", "isDirect", "stdout_msg", "runs_status", "validate_is_on_demand_spark_supported", "api_key", "runs_stdout", "endpoint_state", "collaborators_add", "_configure_logging", "master_hardware_tier_id", "files_upload", "run_id", "model_version_publish", "executor_storage", "job_stop", "returns", "_app_id", "html_start_tags", "projects_list", "_validate_hardware_tier_name", "_validate_environment_id", "job_start_blocking", "app_id", "log", "validate_distributed_compute_cluster_properties", "job", "users", "job_start", "files_list", "user_id", "hardwareTierId", "publishApiEndpoint", "count", "runId", "data", "file", "title", "_host", "html_end_tags", "__app_get_status", "key", "model_versions_get", "endpoint_unpublish", "_put_file", "spark_cluster_properties", "logging_level", "model_publish", "host", "deployment_version", "runs_start", "poll_freq", "default_executor_hardware_tier", "max_poll_time", "get_hardware_tier_id_from_name", "current_retry_count", "show_completed", "project_archive", "app", "environments_list", "command", "request", "__init__", "requires_at_least", "collaborators_remove", "get_job_status", "authenticate", "key_required", "job_id", "get_run_log", "_validate_commit_id", "elapsed_time", "_get", "includeSetupLog", "files_to_exclude", "auth_token", "__app_create", "validate_spark_executor_count", "status", "_useable_environments_list", "retry_count", "default_spark_setting", "model_version_sagemaker_export", "text", "_validate_hardware_tier_id", "valid_relationships", "blobs_get", "_validate_blob_key", "commits_list", "regex", "run_response", "fork_project", "validations", "model_id", "app_unpublish", "project_name", "payload", "_project_id", "required_key_overrides", "run_info", "executor_count", "environment_id", "get_user_id", "domino_token_file", "all_owned_projects", "_validate_information_data_type", "unit", "runs_start_blocking", "throw_if_information_invalid", "collaborators_get", "get_run_info", "job_runtime_execution_details", "_csrf_no_check_header", "url", "Domino", "supported_types_str", "models_list", "hardware_tiers_list", "runs_list"]}, {"author": "Abhijeet Sharma", "path": "setup.py", "imports": ["find_packages", "pathlib", "get_version", "setup", "re", "open", "setuptools"], "variables": ["README", "f", "HERE", "get_version", "PACKAGE_NAME", "mo", "ver"]}, {"author": "Will Eaton", "path": "domino/airflow/_operator.py", "imports": ["airflow.utils.decorators", "domino", "Any", "List", "BaseOperator", "ValueError", "airflow.models", "len", "super", "Domino", "typing", "Optional", "apply_defaults", "time"], "variables": ["tier_metadata", "execute", "template_fields", "DominoSparkOperator", "__init__", "DominoOperator", "run_response", "log", "ui_color"]}, {"author": "Will Eaton", "path": "domino/domino.py", "imports": ["_HttpRequestManager", "pprint", "logging", "ValueError", "len", "polling2", "re", "Exception", "Optional", "validate_is_on_demand_spark_supported", "bs4", "list", "requests", "time", "os", "CLUSTER_TYPE_MIN_SUPPORT", "get_job_status", "__version__", "int", "domino._version", "typing", "validate_distributed_compute_cluster_properties", "MINIMUM_EXTERNAL_VOLUME_MOUNTS_SUPPORT_DOMINO_VERSION", "BeautifulSoup", "get_auth_by_type", "get_default_spark_settings", "functools", "validate_spark_executor_count", "throw_if_information_invalid", "List", "DOMINO_LOG_LEVEL_KEY_NAME", "DOMINO_HOST_KEY_NAME", "validate_on_demand_spark_cluster_properties", "_Routes", "validate_is_external_volume_mounts_supported", "helpers", "exceptions", "str", "MINIMUM_ON_DEMAND_SPARK_CLUSTER_SUPPORT_DOMINO_VERSION", "Tuple"], "variables": ["request_payload", "app_publish", "commitId", "run_stop", "accepted_units", "validated_compute_cluster_properties", "compute_environment_id", "executor_hardware_tier_id", "path", "default_master_hardware_tier", "resolved_hardware_tier_id", "project", "function", "stdout", "query", "job_status", "self", "output_commit_id", "tier", "endpoint_publish", "owner_username", "saveChanges", "useable_environment_list_url", "process_log", "model_version_export_logs", "relationship", "_", "username_or_email", "span_regex", "error_message", "name", "message", "get_default_spark_settings", "r", "max_execution_slot", "logs", "model_version_export_status", "raw_stdout", "validate_on_demand_spark_cluster_properties", "validate_is_external_volume_mounts_supported", "model_version_export", "required_keys", "poll_start", "unpublishRunningApps", "default_spark_setting_url", "response", "supported_types", "description", "project_create", "isDirect", "stdout_msg", "runs_status", "validate_is_on_demand_spark_supported", "api_key", "runs_stdout", "endpoint_state", "collaborators_add", "_configure_logging", "master_hardware_tier_id", "files_upload", "run_id", "model_version_publish", "executor_storage", "job_stop", "returns", "_app_id", "html_start_tags", "projects_list", "_validate_hardware_tier_name", "_validate_environment_id", "job_start_blocking", "app_id", "log", "validate_distributed_compute_cluster_properties", "job", "users", "job_start", "files_list", "user_id", "hardwareTierId", "publishApiEndpoint", "count", "runId", "data", "file", "title", "_host", "html_end_tags", "__app_get_status", "key", "model_versions_get", "endpoint_unpublish", "_put_file", "spark_cluster_properties", "logging_level", "model_publish", "host", "deployment_version", "runs_start", "poll_freq", "default_executor_hardware_tier", "max_poll_time", "get_hardware_tier_id_from_name", "current_retry_count", "show_completed", "project_archive", "app", "environments_list", "command", "request", "__init__", "requires_at_least", "collaborators_remove", "get_job_status", "authenticate", "key_required", "job_id", "get_run_log", "_validate_commit_id", "elapsed_time", "_get", "includeSetupLog", "files_to_exclude", "auth_token", "__app_create", "validate_spark_executor_count", "status", "_useable_environments_list", "retry_count", "default_spark_setting", "model_version_sagemaker_export", "text", "_validate_hardware_tier_id", "valid_relationships", "blobs_get", "_validate_blob_key", "commits_list", "regex", "run_response", "fork_project", "validations", "model_id", "app_unpublish", "project_name", "payload", "_project_id", "required_key_overrides", "run_info", "executor_count", "environment_id", "get_user_id", "domino_token_file", "all_owned_projects", "_validate_information_data_type", "unit", "runs_start_blocking", "throw_if_information_invalid", "collaborators_get", "get_run_info", "job_runtime_execution_details", "_csrf_no_check_header", "url", "Domino", "supported_types_str", "models_list", "hardware_tiers_list", "runs_list"]}, {"author": "Will Eaton", "path": "tests/test_operator.py", "imports": ["airflow", "airflow.models", "TaskInstance", "datetime", "pytest", "DAG", "domino.airflow", "DominoOperator", "RunFailedException", "os", "domino.exceptions"], "variables": ["test_operator", "task", "dag", "test_operator_fail", "TEST_PROJECT", "test_operator_fail_invalid_tier", "ti"]}, {"author": "macrogers", "path": "domino/domino.py", "imports": ["_HttpRequestManager", "pprint", "logging", "ValueError", "len", "polling2", "re", "Exception", "Optional", "validate_is_on_demand_spark_supported", "bs4", "list", "requests", "time", "os", "CLUSTER_TYPE_MIN_SUPPORT", "get_job_status", "__version__", "int", "domino._version", "typing", "validate_distributed_compute_cluster_properties", "MINIMUM_EXTERNAL_VOLUME_MOUNTS_SUPPORT_DOMINO_VERSION", "BeautifulSoup", "get_auth_by_type", "get_default_spark_settings", "functools", "validate_spark_executor_count", "throw_if_information_invalid", "List", "DOMINO_LOG_LEVEL_KEY_NAME", "DOMINO_HOST_KEY_NAME", "validate_on_demand_spark_cluster_properties", "_Routes", "validate_is_external_volume_mounts_supported", "helpers", "exceptions", "str", "MINIMUM_ON_DEMAND_SPARK_CLUSTER_SUPPORT_DOMINO_VERSION", "Tuple"], "variables": ["request_payload", "app_publish", "commitId", "run_stop", "accepted_units", "validated_compute_cluster_properties", "compute_environment_id", "executor_hardware_tier_id", "path", "default_master_hardware_tier", "resolved_hardware_tier_id", "project", "function", "stdout", "query", "job_status", "self", "output_commit_id", "tier", "endpoint_publish", "owner_username", "saveChanges", "useable_environment_list_url", "process_log", "model_version_export_logs", "relationship", "_", "username_or_email", "span_regex", "error_message", "name", "message", "get_default_spark_settings", "r", "max_execution_slot", "logs", "model_version_export_status", "raw_stdout", "validate_on_demand_spark_cluster_properties", "validate_is_external_volume_mounts_supported", "model_version_export", "required_keys", "poll_start", "unpublishRunningApps", "default_spark_setting_url", "response", "supported_types", "description", "project_create", "isDirect", "stdout_msg", "runs_status", "validate_is_on_demand_spark_supported", "api_key", "runs_stdout", "endpoint_state", "collaborators_add", "_configure_logging", "master_hardware_tier_id", "files_upload", "run_id", "model_version_publish", "executor_storage", "job_stop", "returns", "_app_id", "html_start_tags", "projects_list", "_validate_hardware_tier_name", "_validate_environment_id", "job_start_blocking", "app_id", "log", "validate_distributed_compute_cluster_properties", "job", "users", "job_start", "files_list", "user_id", "hardwareTierId", "publishApiEndpoint", "count", "runId", "data", "file", "title", "_host", "html_end_tags", "__app_get_status", "key", "model_versions_get", "endpoint_unpublish", "_put_file", "spark_cluster_properties", "logging_level", "model_publish", "host", "deployment_version", "runs_start", "poll_freq", "default_executor_hardware_tier", "max_poll_time", "get_hardware_tier_id_from_name", "current_retry_count", "show_completed", "project_archive", "app", "environments_list", "command", "request", "__init__", "requires_at_least", "collaborators_remove", "get_job_status", "authenticate", "key_required", "job_id", "get_run_log", "_validate_commit_id", "elapsed_time", "_get", "includeSetupLog", "files_to_exclude", "auth_token", "__app_create", "validate_spark_executor_count", "status", "_useable_environments_list", "retry_count", "default_spark_setting", "model_version_sagemaker_export", "text", "_validate_hardware_tier_id", "valid_relationships", "blobs_get", "_validate_blob_key", "commits_list", "regex", "run_response", "fork_project", "validations", "model_id", "app_unpublish", "project_name", "payload", "_project_id", "required_key_overrides", "run_info", "executor_count", "environment_id", "get_user_id", "domino_token_file", "all_owned_projects", "_validate_information_data_type", "unit", "runs_start_blocking", "throw_if_information_invalid", "collaborators_get", "get_run_info", "job_runtime_execution_details", "_csrf_no_check_header", "url", "Domino", "supported_types_str", "models_list", "hardware_tiers_list", "runs_list"]}, {"author": "macrogers", "path": "domino/domino.py", "imports": ["_HttpRequestManager", "pprint", "logging", "ValueError", "len", "polling2", "re", "Exception", "Optional", "validate_is_on_demand_spark_supported", "bs4", "list", "requests", "time", "os", "CLUSTER_TYPE_MIN_SUPPORT", "get_job_status", "__version__", "int", "domino._version", "typing", "validate_distributed_compute_cluster_properties", "MINIMUM_EXTERNAL_VOLUME_MOUNTS_SUPPORT_DOMINO_VERSION", "BeautifulSoup", "get_auth_by_type", "get_default_spark_settings", "functools", "validate_spark_executor_count", "throw_if_information_invalid", "List", "DOMINO_LOG_LEVEL_KEY_NAME", "DOMINO_HOST_KEY_NAME", "validate_on_demand_spark_cluster_properties", "_Routes", "validate_is_external_volume_mounts_supported", "helpers", "exceptions", "str", "MINIMUM_ON_DEMAND_SPARK_CLUSTER_SUPPORT_DOMINO_VERSION", "Tuple"], "variables": ["request_payload", "app_publish", "commitId", "run_stop", "accepted_units", "validated_compute_cluster_properties", "compute_environment_id", "executor_hardware_tier_id", "path", "default_master_hardware_tier", "resolved_hardware_tier_id", "project", "function", "stdout", "query", "job_status", "self", "output_commit_id", "tier", "endpoint_publish", "owner_username", "saveChanges", "useable_environment_list_url", "process_log", "model_version_export_logs", "relationship", "_", "username_or_email", "span_regex", "error_message", "name", "message", "get_default_spark_settings", "r", "max_execution_slot", "logs", "model_version_export_status", "raw_stdout", "validate_on_demand_spark_cluster_properties", "validate_is_external_volume_mounts_supported", "model_version_export", "required_keys", "poll_start", "unpublishRunningApps", "default_spark_setting_url", "response", "supported_types", "description", "project_create", "isDirect", "stdout_msg", "runs_status", "validate_is_on_demand_spark_supported", "api_key", "runs_stdout", "endpoint_state", "collaborators_add", "_configure_logging", "master_hardware_tier_id", "files_upload", "run_id", "model_version_publish", "executor_storage", "job_stop", "returns", "_app_id", "html_start_tags", "projects_list", "_validate_hardware_tier_name", "_validate_environment_id", "job_start_blocking", "app_id", "log", "validate_distributed_compute_cluster_properties", "job", "users", "job_start", "files_list", "user_id", "hardwareTierId", "publishApiEndpoint", "count", "runId", "data", "file", "title", "_host", "html_end_tags", "__app_get_status", "key", "model_versions_get", "endpoint_unpublish", "_put_file", "spark_cluster_properties", "logging_level", "model_publish", "host", "deployment_version", "runs_start", "poll_freq", "default_executor_hardware_tier", "max_poll_time", "get_hardware_tier_id_from_name", "current_retry_count", "show_completed", "project_archive", "app", "environments_list", "command", "request", "__init__", "requires_at_least", "collaborators_remove", "get_job_status", "authenticate", "key_required", "job_id", "get_run_log", "_validate_commit_id", "elapsed_time", "_get", "includeSetupLog", "files_to_exclude", "auth_token", "__app_create", "validate_spark_executor_count", "status", "_useable_environments_list", "retry_count", "default_spark_setting", "model_version_sagemaker_export", "text", "_validate_hardware_tier_id", "valid_relationships", "blobs_get", "_validate_blob_key", "commits_list", "regex", "run_response", "fork_project", "validations", "model_id", "app_unpublish", "project_name", "payload", "_project_id", "required_key_overrides", "run_info", "executor_count", "environment_id", "get_user_id", "domino_token_file", "all_owned_projects", "_validate_information_data_type", "unit", "runs_start_blocking", "throw_if_information_invalid", "collaborators_get", "get_run_info", "job_runtime_execution_details", "_csrf_no_check_header", "url", "Domino", "supported_types_str", "models_list", "hardware_tiers_list", "runs_list"]}, {"author": "Will Eaton", "path": "domino/airflow/_operator.py", "imports": ["airflow.utils.decorators", "domino", "Any", "List", "BaseOperator", "ValueError", "airflow.models", "len", "super", "Domino", "typing", "Optional", "apply_defaults", "time"], "variables": ["tier_metadata", "execute", "template_fields", "DominoSparkOperator", "__init__", "DominoOperator", "run_response", "log", "ui_color"]}, {"author": "Will Eaton", "path": "domino/domino.py", "imports": ["_HttpRequestManager", "pprint", "logging", "ValueError", "len", "polling2", "re", "Exception", "Optional", "validate_is_on_demand_spark_supported", "bs4", "list", "requests", "time", "os", "CLUSTER_TYPE_MIN_SUPPORT", "get_job_status", "__version__", "int", "domino._version", "typing", "validate_distributed_compute_cluster_properties", "MINIMUM_EXTERNAL_VOLUME_MOUNTS_SUPPORT_DOMINO_VERSION", "BeautifulSoup", "get_auth_by_type", "get_default_spark_settings", "functools", "validate_spark_executor_count", "throw_if_information_invalid", "List", "DOMINO_LOG_LEVEL_KEY_NAME", "DOMINO_HOST_KEY_NAME", "validate_on_demand_spark_cluster_properties", "_Routes", "validate_is_external_volume_mounts_supported", "helpers", "exceptions", "str", "MINIMUM_ON_DEMAND_SPARK_CLUSTER_SUPPORT_DOMINO_VERSION", "Tuple"], "variables": ["request_payload", "app_publish", "commitId", "run_stop", "accepted_units", "validated_compute_cluster_properties", "compute_environment_id", "executor_hardware_tier_id", "path", "default_master_hardware_tier", "resolved_hardware_tier_id", "project", "function", "stdout", "query", "job_status", "self", "output_commit_id", "tier", "endpoint_publish", "owner_username", "saveChanges", "useable_environment_list_url", "process_log", "model_version_export_logs", "relationship", "_", "username_or_email", "span_regex", "error_message", "name", "message", "get_default_spark_settings", "r", "max_execution_slot", "logs", "model_version_export_status", "raw_stdout", "validate_on_demand_spark_cluster_properties", "validate_is_external_volume_mounts_supported", "model_version_export", "required_keys", "poll_start", "unpublishRunningApps", "default_spark_setting_url", "response", "supported_types", "description", "project_create", "isDirect", "stdout_msg", "runs_status", "validate_is_on_demand_spark_supported", "api_key", "runs_stdout", "endpoint_state", "collaborators_add", "_configure_logging", "master_hardware_tier_id", "files_upload", "run_id", "model_version_publish", "executor_storage", "job_stop", "returns", "_app_id", "html_start_tags", "projects_list", "_validate_hardware_tier_name", "_validate_environment_id", "job_start_blocking", "app_id", "log", "validate_distributed_compute_cluster_properties", "job", "users", "job_start", "files_list", "user_id", "hardwareTierId", "publishApiEndpoint", "count", "runId", "data", "file", "title", "_host", "html_end_tags", "__app_get_status", "key", "model_versions_get", "endpoint_unpublish", "_put_file", "spark_cluster_properties", "logging_level", "model_publish", "host", "deployment_version", "runs_start", "poll_freq", "default_executor_hardware_tier", "max_poll_time", "get_hardware_tier_id_from_name", "current_retry_count", "show_completed", "project_archive", "app", "environments_list", "command", "request", "__init__", "requires_at_least", "collaborators_remove", "get_job_status", "authenticate", "key_required", "job_id", "get_run_log", "_validate_commit_id", "elapsed_time", "_get", "includeSetupLog", "files_to_exclude", "auth_token", "__app_create", "validate_spark_executor_count", "status", "_useable_environments_list", "retry_count", "default_spark_setting", "model_version_sagemaker_export", "text", "_validate_hardware_tier_id", "valid_relationships", "blobs_get", "_validate_blob_key", "commits_list", "regex", "run_response", "fork_project", "validations", "model_id", "app_unpublish", "project_name", "payload", "_project_id", "required_key_overrides", "run_info", "executor_count", "environment_id", "get_user_id", "domino_token_file", "all_owned_projects", "_validate_information_data_type", "unit", "runs_start_blocking", "throw_if_information_invalid", "collaborators_get", "get_run_info", "job_runtime_execution_details", "_csrf_no_check_header", "url", "Domino", "supported_types_str", "models_list", "hardware_tiers_list", "runs_list"]}, {"author": "Will Eaton", "path": "tests/test_operator.py", "imports": ["airflow", "airflow.models", "TaskInstance", "datetime", "pytest", "DAG", "domino.airflow", "DominoOperator", "RunFailedException", "os", "domino.exceptions"], "variables": ["test_operator", "task", "dag", "test_operator_fail", "TEST_PROJECT", "test_operator_fail_invalid_tier", "ti"]}, {"author": "Will Eaton", "path": "domino/airflow/__init__.py", "imports": ["domino.airflow._operator", "DominoSparkOperator", "ImportError", "DominoOperator"], "variables": ["__all__"]}, {"author": "Will Eaton", "path": "domino/airflow/_operator.py", "imports": ["airflow.utils.decorators", "domino", "Any", "List", "BaseOperator", "ValueError", "airflow.models", "len", "super", "Domino", "typing", "Optional", "apply_defaults", "time"], "variables": ["tier_metadata", "execute", "template_fields", "DominoSparkOperator", "__init__", "DominoOperator", "run_response", "log", "ui_color"]}, {"author": "Will Eaton", "path": "domino/domino.py", "imports": ["_HttpRequestManager", "pprint", "logging", "ValueError", "len", "polling2", "re", "Exception", "Optional", "validate_is_on_demand_spark_supported", "bs4", "list", "requests", "time", "os", "CLUSTER_TYPE_MIN_SUPPORT", "get_job_status", "__version__", "int", "domino._version", "typing", "validate_distributed_compute_cluster_properties", "MINIMUM_EXTERNAL_VOLUME_MOUNTS_SUPPORT_DOMINO_VERSION", "BeautifulSoup", "get_auth_by_type", "get_default_spark_settings", "functools", "validate_spark_executor_count", "throw_if_information_invalid", "List", "DOMINO_LOG_LEVEL_KEY_NAME", "DOMINO_HOST_KEY_NAME", "validate_on_demand_spark_cluster_properties", "_Routes", "validate_is_external_volume_mounts_supported", "helpers", "exceptions", "str", "MINIMUM_ON_DEMAND_SPARK_CLUSTER_SUPPORT_DOMINO_VERSION", "Tuple"], "variables": ["request_payload", "app_publish", "commitId", "run_stop", "accepted_units", "validated_compute_cluster_properties", "compute_environment_id", "executor_hardware_tier_id", "path", "default_master_hardware_tier", "resolved_hardware_tier_id", "project", "function", "stdout", "query", "job_status", "self", "output_commit_id", "tier", "endpoint_publish", "owner_username", "saveChanges", "useable_environment_list_url", "process_log", "model_version_export_logs", "relationship", "_", "username_or_email", "span_regex", "error_message", "name", "message", "get_default_spark_settings", "r", "max_execution_slot", "logs", "model_version_export_status", "raw_stdout", "validate_on_demand_spark_cluster_properties", "validate_is_external_volume_mounts_supported", "model_version_export", "required_keys", "poll_start", "unpublishRunningApps", "default_spark_setting_url", "response", "supported_types", "description", "project_create", "isDirect", "stdout_msg", "runs_status", "validate_is_on_demand_spark_supported", "api_key", "runs_stdout", "endpoint_state", "collaborators_add", "_configure_logging", "master_hardware_tier_id", "files_upload", "run_id", "model_version_publish", "executor_storage", "job_stop", "returns", "_app_id", "html_start_tags", "projects_list", "_validate_hardware_tier_name", "_validate_environment_id", "job_start_blocking", "app_id", "log", "validate_distributed_compute_cluster_properties", "job", "users", "job_start", "files_list", "user_id", "hardwareTierId", "publishApiEndpoint", "count", "runId", "data", "file", "title", "_host", "html_end_tags", "__app_get_status", "key", "model_versions_get", "endpoint_unpublish", "_put_file", "spark_cluster_properties", "logging_level", "model_publish", "host", "deployment_version", "runs_start", "poll_freq", "default_executor_hardware_tier", "max_poll_time", "get_hardware_tier_id_from_name", "current_retry_count", "show_completed", "project_archive", "app", "environments_list", "command", "request", "__init__", "requires_at_least", "collaborators_remove", "get_job_status", "authenticate", "key_required", "job_id", "get_run_log", "_validate_commit_id", "elapsed_time", "_get", "includeSetupLog", "files_to_exclude", "auth_token", "__app_create", "validate_spark_executor_count", "status", "_useable_environments_list", "retry_count", "default_spark_setting", "model_version_sagemaker_export", "text", "_validate_hardware_tier_id", "valid_relationships", "blobs_get", "_validate_blob_key", "commits_list", "regex", "run_response", "fork_project", "validations", "model_id", "app_unpublish", "project_name", "payload", "_project_id", "required_key_overrides", "run_info", "executor_count", "environment_id", "get_user_id", "domino_token_file", "all_owned_projects", "_validate_information_data_type", "unit", "runs_start_blocking", "throw_if_information_invalid", "collaborators_get", "get_run_info", "job_runtime_execution_details", "_csrf_no_check_header", "url", "Domino", "supported_types_str", "models_list", "hardware_tiers_list", "runs_list"]}, {"author": "Will Eaton", "path": "examples/example_airflow_dag.py", "imports": ["airflow", "timedelta", "airflow.models", "Variable", "datetime", "DAG", "domino.airflow", "DominoOperator"], "variables": ["t1", "dag", "default_args", "host", "api_key"]}, {"author": "Will Eaton", "path": "setup.py", "imports": ["find_packages", "pathlib", "get_version", "setup", "re", "open", "setuptools"], "variables": ["README", "f", "HERE", "get_version", "PACKAGE_NAME", "mo", "ver"]}, {"author": "Abhijeet Sharma", "path": "domino/domino.py", "imports": ["_HttpRequestManager", "pprint", "logging", "ValueError", "len", "polling2", "re", "Exception", "Optional", "validate_is_on_demand_spark_supported", "bs4", "list", "requests", "time", "os", "CLUSTER_TYPE_MIN_SUPPORT", "get_job_status", "__version__", "int", "domino._version", "typing", "validate_distributed_compute_cluster_properties", "MINIMUM_EXTERNAL_VOLUME_MOUNTS_SUPPORT_DOMINO_VERSION", "BeautifulSoup", "get_auth_by_type", "get_default_spark_settings", "functools", "validate_spark_executor_count", "throw_if_information_invalid", "List", "DOMINO_LOG_LEVEL_KEY_NAME", "DOMINO_HOST_KEY_NAME", "validate_on_demand_spark_cluster_properties", "_Routes", "validate_is_external_volume_mounts_supported", "helpers", "exceptions", "str", "MINIMUM_ON_DEMAND_SPARK_CLUSTER_SUPPORT_DOMINO_VERSION", "Tuple"], "variables": ["request_payload", "app_publish", "commitId", "run_stop", "accepted_units", "validated_compute_cluster_properties", "compute_environment_id", "executor_hardware_tier_id", "path", "default_master_hardware_tier", "resolved_hardware_tier_id", "project", "function", "stdout", "query", "job_status", "self", "output_commit_id", "tier", "endpoint_publish", "owner_username", "saveChanges", "useable_environment_list_url", "process_log", "model_version_export_logs", "relationship", "_", "username_or_email", "span_regex", "error_message", "name", "message", "get_default_spark_settings", "r", "max_execution_slot", "logs", "model_version_export_status", "raw_stdout", "validate_on_demand_spark_cluster_properties", "validate_is_external_volume_mounts_supported", "model_version_export", "required_keys", "poll_start", "unpublishRunningApps", "default_spark_setting_url", "response", "supported_types", "description", "project_create", "isDirect", "stdout_msg", "runs_status", "validate_is_on_demand_spark_supported", "api_key", "runs_stdout", "endpoint_state", "collaborators_add", "_configure_logging", "master_hardware_tier_id", "files_upload", "run_id", "model_version_publish", "executor_storage", "job_stop", "returns", "_app_id", "html_start_tags", "projects_list", "_validate_hardware_tier_name", "_validate_environment_id", "job_start_blocking", "app_id", "log", "validate_distributed_compute_cluster_properties", "job", "users", "job_start", "files_list", "user_id", "hardwareTierId", "publishApiEndpoint", "count", "runId", "data", "file", "title", "_host", "html_end_tags", "__app_get_status", "key", "model_versions_get", "endpoint_unpublish", "_put_file", "spark_cluster_properties", "logging_level", "model_publish", "host", "deployment_version", "runs_start", "poll_freq", "default_executor_hardware_tier", "max_poll_time", "get_hardware_tier_id_from_name", "current_retry_count", "show_completed", "project_archive", "app", "environments_list", "command", "request", "__init__", "requires_at_least", "collaborators_remove", "get_job_status", "authenticate", "key_required", "job_id", "get_run_log", "_validate_commit_id", "elapsed_time", "_get", "includeSetupLog", "files_to_exclude", "auth_token", "__app_create", "validate_spark_executor_count", "status", "_useable_environments_list", "retry_count", "default_spark_setting", "model_version_sagemaker_export", "text", "_validate_hardware_tier_id", "valid_relationships", "blobs_get", "_validate_blob_key", "commits_list", "regex", "run_response", "fork_project", "validations", "model_id", "app_unpublish", "project_name", "payload", "_project_id", "required_key_overrides", "run_info", "executor_count", "environment_id", "get_user_id", "domino_token_file", "all_owned_projects", "_validate_information_data_type", "unit", "runs_start_blocking", "throw_if_information_invalid", "collaborators_get", "get_run_info", "job_runtime_execution_details", "_csrf_no_check_header", "url", "Domino", "supported_types_str", "models_list", "hardware_tiers_list", "runs_list"]}, {"author": "Abhijeet Sharma", "path": "examples/create_project_with_collaborators.py", "imports": ["domino", "ProjectNotFoundException", "Domino", "print", "os", "domino.exceptions"], "variables": ["domino", "collaborators", "new_project", "new_collaborators", "new_project_name"]}, {"author": "Abhijeet Sharma", "path": "domino/bearer_auth.py", "imports": ["AuthBase", "Exception", "open", "requests.auth", "os"], "variables": ["__call__", "__init__", "token", "BearerAuth", "_assert_token_file_valid"]}, {"author": "Abhijeet Sharma", "path": "domino/domino.py", "imports": ["_HttpRequestManager", "pprint", "logging", "ValueError", "len", "polling2", "re", "Exception", "Optional", "validate_is_on_demand_spark_supported", "bs4", "list", "requests", "time", "os", "CLUSTER_TYPE_MIN_SUPPORT", "get_job_status", "__version__", "int", "domino._version", "typing", "validate_distributed_compute_cluster_properties", "MINIMUM_EXTERNAL_VOLUME_MOUNTS_SUPPORT_DOMINO_VERSION", "BeautifulSoup", "get_auth_by_type", "get_default_spark_settings", "functools", "validate_spark_executor_count", "throw_if_information_invalid", "List", "DOMINO_LOG_LEVEL_KEY_NAME", "DOMINO_HOST_KEY_NAME", "validate_on_demand_spark_cluster_properties", "_Routes", "validate_is_external_volume_mounts_supported", "helpers", "exceptions", "str", "MINIMUM_ON_DEMAND_SPARK_CLUSTER_SUPPORT_DOMINO_VERSION", "Tuple"], "variables": ["request_payload", "app_publish", "commitId", "run_stop", "accepted_units", "validated_compute_cluster_properties", "compute_environment_id", "executor_hardware_tier_id", "path", "default_master_hardware_tier", "resolved_hardware_tier_id", "project", "function", "stdout", "query", "job_status", "self", "output_commit_id", "tier", "endpoint_publish", "owner_username", "saveChanges", "useable_environment_list_url", "process_log", "model_version_export_logs", "relationship", "_", "username_or_email", "span_regex", "error_message", "name", "message", "get_default_spark_settings", "r", "max_execution_slot", "logs", "model_version_export_status", "raw_stdout", "validate_on_demand_spark_cluster_properties", "validate_is_external_volume_mounts_supported", "model_version_export", "required_keys", "poll_start", "unpublishRunningApps", "default_spark_setting_url", "response", "supported_types", "description", "project_create", "isDirect", "stdout_msg", "runs_status", "validate_is_on_demand_spark_supported", "api_key", "runs_stdout", "endpoint_state", "collaborators_add", "_configure_logging", "master_hardware_tier_id", "files_upload", "run_id", "model_version_publish", "executor_storage", "job_stop", "returns", "_app_id", "html_start_tags", "projects_list", "_validate_hardware_tier_name", "_validate_environment_id", "job_start_blocking", "app_id", "log", "validate_distributed_compute_cluster_properties", "job", "users", "job_start", "files_list", "user_id", "hardwareTierId", "publishApiEndpoint", "count", "runId", "data", "file", "title", "_host", "html_end_tags", "__app_get_status", "key", "model_versions_get", "endpoint_unpublish", "_put_file", "spark_cluster_properties", "logging_level", "model_publish", "host", "deployment_version", "runs_start", "poll_freq", "default_executor_hardware_tier", "max_poll_time", "get_hardware_tier_id_from_name", "current_retry_count", "show_completed", "project_archive", "app", "environments_list", "command", "request", "__init__", "requires_at_least", "collaborators_remove", "get_job_status", "authenticate", "key_required", "job_id", "get_run_log", "_validate_commit_id", "elapsed_time", "_get", "includeSetupLog", "files_to_exclude", "auth_token", "__app_create", "validate_spark_executor_count", "status", "_useable_environments_list", "retry_count", "default_spark_setting", "model_version_sagemaker_export", "text", "_validate_hardware_tier_id", "valid_relationships", "blobs_get", "_validate_blob_key", "commits_list", "regex", "run_response", "fork_project", "validations", "model_id", "app_unpublish", "project_name", "payload", "_project_id", "required_key_overrides", "run_info", "executor_count", "environment_id", "get_user_id", "domino_token_file", "all_owned_projects", "_validate_information_data_type", "unit", "runs_start_blocking", "throw_if_information_invalid", "collaborators_get", "get_run_info", "job_runtime_execution_details", "_csrf_no_check_header", "url", "Domino", "supported_types_str", "models_list", "hardware_tiers_list", "runs_list"]}, {"author": "Abhijeet Sharma", "path": "domino/helpers.py", "imports": ["next", "LooseVersion", "print", "urllib", "int", "socket", "parse_version", "distutils.version", "os", "constants"], "variables": ["url_split", "clean_host_url", "s", "is_version_compatible", "is_compute_cluster_properties_supported", "domino_is_reachable", "fqdn", "curr_version", "is_external_volume_mounts_supported", "is_reachable", "is_on_demand_spark_cluster_supported", "is_comute_cluster_autoscaling_supported", "is_cluster_type_supported"]}, {"author": "Abhijeet Sharma", "path": "domino/http_request_manager.py", "imports": ["AuthBase", "logging", "requests", "bool", "HTTPStatus", "http", "ReloginRequiredException", "BeautifulSoup", "bs4", "requests.auth"], "variables": ["_HttpRequestManager", "get", "put", "post", "url", "self", "json", "__init__", "data", "_raise_for_status", "delete", "get_raw"]}, {"author": "Abhijeet Sharma", "path": "domino/domino.py", "imports": ["_HttpRequestManager", "pprint", "logging", "ValueError", "len", "polling2", "re", "Exception", "Optional", "validate_is_on_demand_spark_supported", "bs4", "list", "requests", "time", "os", "CLUSTER_TYPE_MIN_SUPPORT", "get_job_status", "__version__", "int", "domino._version", "typing", "validate_distributed_compute_cluster_properties", "MINIMUM_EXTERNAL_VOLUME_MOUNTS_SUPPORT_DOMINO_VERSION", "BeautifulSoup", "get_auth_by_type", "get_default_spark_settings", "functools", "validate_spark_executor_count", "throw_if_information_invalid", "List", "DOMINO_LOG_LEVEL_KEY_NAME", "DOMINO_HOST_KEY_NAME", "validate_on_demand_spark_cluster_properties", "_Routes", "validate_is_external_volume_mounts_supported", "helpers", "exceptions", "str", "MINIMUM_ON_DEMAND_SPARK_CLUSTER_SUPPORT_DOMINO_VERSION", "Tuple"], "variables": ["request_payload", "app_publish", "commitId", "run_stop", "accepted_units", "validated_compute_cluster_properties", "compute_environment_id", "executor_hardware_tier_id", "path", "default_master_hardware_tier", "resolved_hardware_tier_id", "project", "function", "stdout", "query", "job_status", "self", "output_commit_id", "tier", "endpoint_publish", "owner_username", "saveChanges", "useable_environment_list_url", "process_log", "model_version_export_logs", "relationship", "_", "username_or_email", "span_regex", "error_message", "name", "message", "get_default_spark_settings", "r", "max_execution_slot", "logs", "model_version_export_status", "raw_stdout", "validate_on_demand_spark_cluster_properties", "validate_is_external_volume_mounts_supported", "model_version_export", "required_keys", "poll_start", "unpublishRunningApps", "default_spark_setting_url", "response", "supported_types", "description", "project_create", "isDirect", "stdout_msg", "runs_status", "validate_is_on_demand_spark_supported", "api_key", "runs_stdout", "endpoint_state", "collaborators_add", "_configure_logging", "master_hardware_tier_id", "files_upload", "run_id", "model_version_publish", "executor_storage", "job_stop", "returns", "_app_id", "html_start_tags", "projects_list", "_validate_hardware_tier_name", "_validate_environment_id", "job_start_blocking", "app_id", "log", "validate_distributed_compute_cluster_properties", "job", "users", "job_start", "files_list", "user_id", "hardwareTierId", "publishApiEndpoint", "count", "runId", "data", "file", "title", "_host", "html_end_tags", "__app_get_status", "key", "model_versions_get", "endpoint_unpublish", "_put_file", "spark_cluster_properties", "logging_level", "model_publish", "host", "deployment_version", "runs_start", "poll_freq", "default_executor_hardware_tier", "max_poll_time", "get_hardware_tier_id_from_name", "current_retry_count", "show_completed", "project_archive", "app", "environments_list", "command", "request", "__init__", "requires_at_least", "collaborators_remove", "get_job_status", "authenticate", "key_required", "job_id", "get_run_log", "_validate_commit_id", "elapsed_time", "_get", "includeSetupLog", "files_to_exclude", "auth_token", "__app_create", "validate_spark_executor_count", "status", "_useable_environments_list", "retry_count", "default_spark_setting", "model_version_sagemaker_export", "text", "_validate_hardware_tier_id", "valid_relationships", "blobs_get", "_validate_blob_key", "commits_list", "regex", "run_response", "fork_project", "validations", "model_id", "app_unpublish", "project_name", "payload", "_project_id", "required_key_overrides", "run_info", "executor_count", "environment_id", "get_user_id", "domino_token_file", "all_owned_projects", "_validate_information_data_type", "unit", "runs_start_blocking", "throw_if_information_invalid", "collaborators_get", "get_run_info", "job_runtime_execution_details", "_csrf_no_check_header", "url", "Domino", "supported_types_str", "models_list", "hardware_tiers_list", "runs_list"]}, {"author": "Abhijeet Sharma", "path": "domino/__init__.py", "imports": ["domino._version", "__version__", "Domino"], "variables": ["__all__"]}, {"author": "Abhijeet Sharma", "path": "domino/domino.py", "imports": ["_HttpRequestManager", "pprint", "logging", "ValueError", "len", "polling2", "re", "Exception", "Optional", "validate_is_on_demand_spark_supported", "bs4", "list", "requests", "time", "os", "CLUSTER_TYPE_MIN_SUPPORT", "get_job_status", "__version__", "int", "domino._version", "typing", "validate_distributed_compute_cluster_properties", "MINIMUM_EXTERNAL_VOLUME_MOUNTS_SUPPORT_DOMINO_VERSION", "BeautifulSoup", "get_auth_by_type", "get_default_spark_settings", "functools", "validate_spark_executor_count", "throw_if_information_invalid", "List", "DOMINO_LOG_LEVEL_KEY_NAME", "DOMINO_HOST_KEY_NAME", "validate_on_demand_spark_cluster_properties", "_Routes", "validate_is_external_volume_mounts_supported", "helpers", "exceptions", "str", "MINIMUM_ON_DEMAND_SPARK_CLUSTER_SUPPORT_DOMINO_VERSION", "Tuple"], "variables": ["request_payload", "app_publish", "commitId", "run_stop", "accepted_units", "validated_compute_cluster_properties", "compute_environment_id", "executor_hardware_tier_id", "path", "default_master_hardware_tier", "resolved_hardware_tier_id", "project", "function", "stdout", "query", "job_status", "self", "output_commit_id", "tier", "endpoint_publish", "owner_username", "saveChanges", "useable_environment_list_url", "process_log", "model_version_export_logs", "relationship", "_", "username_or_email", "span_regex", "error_message", "name", "message", "get_default_spark_settings", "r", "max_execution_slot", "logs", "model_version_export_status", "raw_stdout", "validate_on_demand_spark_cluster_properties", "validate_is_external_volume_mounts_supported", "model_version_export", "required_keys", "poll_start", "unpublishRunningApps", "default_spark_setting_url", "response", "supported_types", "description", "project_create", "isDirect", "stdout_msg", "runs_status", "validate_is_on_demand_spark_supported", "api_key", "runs_stdout", "endpoint_state", "collaborators_add", "_configure_logging", "master_hardware_tier_id", "files_upload", "run_id", "model_version_publish", "executor_storage", "job_stop", "returns", "_app_id", "html_start_tags", "projects_list", "_validate_hardware_tier_name", "_validate_environment_id", "job_start_blocking", "app_id", "log", "validate_distributed_compute_cluster_properties", "job", "users", "job_start", "files_list", "user_id", "hardwareTierId", "publishApiEndpoint", "count", "runId", "data", "file", "title", "_host", "html_end_tags", "__app_get_status", "key", "model_versions_get", "endpoint_unpublish", "_put_file", "spark_cluster_properties", "logging_level", "model_publish", "host", "deployment_version", "runs_start", "poll_freq", "default_executor_hardware_tier", "max_poll_time", "get_hardware_tier_id_from_name", "current_retry_count", "show_completed", "project_archive", "app", "environments_list", "command", "request", "__init__", "requires_at_least", "collaborators_remove", "get_job_status", "authenticate", "key_required", "job_id", "get_run_log", "_validate_commit_id", "elapsed_time", "_get", "includeSetupLog", "files_to_exclude", "auth_token", "__app_create", "validate_spark_executor_count", "status", "_useable_environments_list", "retry_count", "default_spark_setting", "model_version_sagemaker_export", "text", "_validate_hardware_tier_id", "valid_relationships", "blobs_get", "_validate_blob_key", "commits_list", "regex", "run_response", "fork_project", "validations", "model_id", "app_unpublish", "project_name", "payload", "_project_id", "required_key_overrides", "run_info", "executor_count", "environment_id", "get_user_id", "domino_token_file", "all_owned_projects", "_validate_information_data_type", "unit", "runs_start_blocking", "throw_if_information_invalid", "collaborators_get", "get_run_info", "job_runtime_execution_details", "_csrf_no_check_header", "url", "Domino", "supported_types_str", "models_list", "hardware_tiers_list", "runs_list"]}, {"author": "Abhijeet Sharma", "path": "setup.py", "imports": ["find_packages", "pathlib", "get_version", "setup", "re", "open", "setuptools"], "variables": ["README", "f", "HERE", "get_version", "PACKAGE_NAME", "mo", "ver"]}, {"author": "Abhijeet Sharma", "path": "domino/domino.py", "imports": ["_HttpRequestManager", "pprint", "logging", "ValueError", "len", "polling2", "re", "Exception", "Optional", "validate_is_on_demand_spark_supported", "bs4", "list", "requests", "time", "os", "CLUSTER_TYPE_MIN_SUPPORT", "get_job_status", "__version__", "int", "domino._version", "typing", "validate_distributed_compute_cluster_properties", "MINIMUM_EXTERNAL_VOLUME_MOUNTS_SUPPORT_DOMINO_VERSION", "BeautifulSoup", "get_auth_by_type", "get_default_spark_settings", "functools", "validate_spark_executor_count", "throw_if_information_invalid", "List", "DOMINO_LOG_LEVEL_KEY_NAME", "DOMINO_HOST_KEY_NAME", "validate_on_demand_spark_cluster_properties", "_Routes", "validate_is_external_volume_mounts_supported", "helpers", "exceptions", "str", "MINIMUM_ON_DEMAND_SPARK_CLUSTER_SUPPORT_DOMINO_VERSION", "Tuple"], "variables": ["request_payload", "app_publish", "commitId", "run_stop", "accepted_units", "validated_compute_cluster_properties", "compute_environment_id", "executor_hardware_tier_id", "path", "default_master_hardware_tier", "resolved_hardware_tier_id", "project", "function", "stdout", "query", "job_status", "self", "output_commit_id", "tier", "endpoint_publish", "owner_username", "saveChanges", "useable_environment_list_url", "process_log", "model_version_export_logs", "relationship", "_", "username_or_email", "span_regex", "error_message", "name", "message", "get_default_spark_settings", "r", "max_execution_slot", "logs", "model_version_export_status", "raw_stdout", "validate_on_demand_spark_cluster_properties", "validate_is_external_volume_mounts_supported", "model_version_export", "required_keys", "poll_start", "unpublishRunningApps", "default_spark_setting_url", "response", "supported_types", "description", "project_create", "isDirect", "stdout_msg", "runs_status", "validate_is_on_demand_spark_supported", "api_key", "runs_stdout", "endpoint_state", "collaborators_add", "_configure_logging", "master_hardware_tier_id", "files_upload", "run_id", "model_version_publish", "executor_storage", "job_stop", "returns", "_app_id", "html_start_tags", "projects_list", "_validate_hardware_tier_name", "_validate_environment_id", "job_start_blocking", "app_id", "log", "validate_distributed_compute_cluster_properties", "job", "users", "job_start", "files_list", "user_id", "hardwareTierId", "publishApiEndpoint", "count", "runId", "data", "file", "title", "_host", "html_end_tags", "__app_get_status", "key", "model_versions_get", "endpoint_unpublish", "_put_file", "spark_cluster_properties", "logging_level", "model_publish", "host", "deployment_version", "runs_start", "poll_freq", "default_executor_hardware_tier", "max_poll_time", "get_hardware_tier_id_from_name", "current_retry_count", "show_completed", "project_archive", "app", "environments_list", "command", "request", "__init__", "requires_at_least", "collaborators_remove", "get_job_status", "authenticate", "key_required", "job_id", "get_run_log", "_validate_commit_id", "elapsed_time", "_get", "includeSetupLog", "files_to_exclude", "auth_token", "__app_create", "validate_spark_executor_count", "status", "_useable_environments_list", "retry_count", "default_spark_setting", "model_version_sagemaker_export", "text", "_validate_hardware_tier_id", "valid_relationships", "blobs_get", "_validate_blob_key", "commits_list", "regex", "run_response", "fork_project", "validations", "model_id", "app_unpublish", "project_name", "payload", "_project_id", "required_key_overrides", "run_info", "executor_count", "environment_id", "get_user_id", "domino_token_file", "all_owned_projects", "_validate_information_data_type", "unit", "runs_start_blocking", "throw_if_information_invalid", "collaborators_get", "get_run_info", "job_runtime_execution_details", "_csrf_no_check_header", "url", "Domino", "supported_types_str", "models_list", "hardware_tiers_list", "runs_list"]}, {"author": "Abhijeet Sharma", "path": "domino/domino.py", "imports": ["_HttpRequestManager", "pprint", "logging", "ValueError", "len", "polling2", "re", "Exception", "Optional", "validate_is_on_demand_spark_supported", "bs4", "list", "requests", "time", "os", "CLUSTER_TYPE_MIN_SUPPORT", "get_job_status", "__version__", "int", "domino._version", "typing", "validate_distributed_compute_cluster_properties", "MINIMUM_EXTERNAL_VOLUME_MOUNTS_SUPPORT_DOMINO_VERSION", "BeautifulSoup", "get_auth_by_type", "get_default_spark_settings", "functools", "validate_spark_executor_count", "throw_if_information_invalid", "List", "DOMINO_LOG_LEVEL_KEY_NAME", "DOMINO_HOST_KEY_NAME", "validate_on_demand_spark_cluster_properties", "_Routes", "validate_is_external_volume_mounts_supported", "helpers", "exceptions", "str", "MINIMUM_ON_DEMAND_SPARK_CLUSTER_SUPPORT_DOMINO_VERSION", "Tuple"], "variables": ["request_payload", "app_publish", "commitId", "run_stop", "accepted_units", "validated_compute_cluster_properties", "compute_environment_id", "executor_hardware_tier_id", "path", "default_master_hardware_tier", "resolved_hardware_tier_id", "project", "function", "stdout", "query", "job_status", "self", "output_commit_id", "tier", "endpoint_publish", "owner_username", "saveChanges", "useable_environment_list_url", "process_log", "model_version_export_logs", "relationship", "_", "username_or_email", "span_regex", "error_message", "name", "message", "get_default_spark_settings", "r", "max_execution_slot", "logs", "model_version_export_status", "raw_stdout", "validate_on_demand_spark_cluster_properties", "validate_is_external_volume_mounts_supported", "model_version_export", "required_keys", "poll_start", "unpublishRunningApps", "default_spark_setting_url", "response", "supported_types", "description", "project_create", "isDirect", "stdout_msg", "runs_status", "validate_is_on_demand_spark_supported", "api_key", "runs_stdout", "endpoint_state", "collaborators_add", "_configure_logging", "master_hardware_tier_id", "files_upload", "run_id", "model_version_publish", "executor_storage", "job_stop", "returns", "_app_id", "html_start_tags", "projects_list", "_validate_hardware_tier_name", "_validate_environment_id", "job_start_blocking", "app_id", "log", "validate_distributed_compute_cluster_properties", "job", "users", "job_start", "files_list", "user_id", "hardwareTierId", "publishApiEndpoint", "count", "runId", "data", "file", "title", "_host", "html_end_tags", "__app_get_status", "key", "model_versions_get", "endpoint_unpublish", "_put_file", "spark_cluster_properties", "logging_level", "model_publish", "host", "deployment_version", "runs_start", "poll_freq", "default_executor_hardware_tier", "max_poll_time", "get_hardware_tier_id_from_name", "current_retry_count", "show_completed", "project_archive", "app", "environments_list", "command", "request", "__init__", "requires_at_least", "collaborators_remove", "get_job_status", "authenticate", "key_required", "job_id", "get_run_log", "_validate_commit_id", "elapsed_time", "_get", "includeSetupLog", "files_to_exclude", "auth_token", "__app_create", "validate_spark_executor_count", "status", "_useable_environments_list", "retry_count", "default_spark_setting", "model_version_sagemaker_export", "text", "_validate_hardware_tier_id", "valid_relationships", "blobs_get", "_validate_blob_key", "commits_list", "regex", "run_response", "fork_project", "validations", "model_id", "app_unpublish", "project_name", "payload", "_project_id", "required_key_overrides", "run_info", "executor_count", "environment_id", "get_user_id", "domino_token_file", "all_owned_projects", "_validate_information_data_type", "unit", "runs_start_blocking", "throw_if_information_invalid", "collaborators_get", "get_run_info", "job_runtime_execution_details", "_csrf_no_check_header", "url", "Domino", "supported_types_str", "models_list", "hardware_tiers_list", "runs_list"]}, {"author": "Abhijeet Sharma", "path": "domino/domino.py", "imports": ["_HttpRequestManager", "pprint", "logging", "ValueError", "len", "polling2", "re", "Exception", "Optional", "validate_is_on_demand_spark_supported", "bs4", "list", "requests", "time", "os", "CLUSTER_TYPE_MIN_SUPPORT", "get_job_status", "__version__", "int", "domino._version", "typing", "validate_distributed_compute_cluster_properties", "MINIMUM_EXTERNAL_VOLUME_MOUNTS_SUPPORT_DOMINO_VERSION", "BeautifulSoup", "get_auth_by_type", "get_default_spark_settings", "functools", "validate_spark_executor_count", "throw_if_information_invalid", "List", "DOMINO_LOG_LEVEL_KEY_NAME", "DOMINO_HOST_KEY_NAME", "validate_on_demand_spark_cluster_properties", "_Routes", "validate_is_external_volume_mounts_supported", "helpers", "exceptions", "str", "MINIMUM_ON_DEMAND_SPARK_CLUSTER_SUPPORT_DOMINO_VERSION", "Tuple"], "variables": ["request_payload", "app_publish", "commitId", "run_stop", "accepted_units", "validated_compute_cluster_properties", "compute_environment_id", "executor_hardware_tier_id", "path", "default_master_hardware_tier", "resolved_hardware_tier_id", "project", "function", "stdout", "query", "job_status", "self", "output_commit_id", "tier", "endpoint_publish", "owner_username", "saveChanges", "useable_environment_list_url", "process_log", "model_version_export_logs", "relationship", "_", "username_or_email", "span_regex", "error_message", "name", "message", "get_default_spark_settings", "r", "max_execution_slot", "logs", "model_version_export_status", "raw_stdout", "validate_on_demand_spark_cluster_properties", "validate_is_external_volume_mounts_supported", "model_version_export", "required_keys", "poll_start", "unpublishRunningApps", "default_spark_setting_url", "response", "supported_types", "description", "project_create", "isDirect", "stdout_msg", "runs_status", "validate_is_on_demand_spark_supported", "api_key", "runs_stdout", "endpoint_state", "collaborators_add", "_configure_logging", "master_hardware_tier_id", "files_upload", "run_id", "model_version_publish", "executor_storage", "job_stop", "returns", "_app_id", "html_start_tags", "projects_list", "_validate_hardware_tier_name", "_validate_environment_id", "job_start_blocking", "app_id", "log", "validate_distributed_compute_cluster_properties", "job", "users", "job_start", "files_list", "user_id", "hardwareTierId", "publishApiEndpoint", "count", "runId", "data", "file", "title", "_host", "html_end_tags", "__app_get_status", "key", "model_versions_get", "endpoint_unpublish", "_put_file", "spark_cluster_properties", "logging_level", "model_publish", "host", "deployment_version", "runs_start", "poll_freq", "default_executor_hardware_tier", "max_poll_time", "get_hardware_tier_id_from_name", "current_retry_count", "show_completed", "project_archive", "app", "environments_list", "command", "request", "__init__", "requires_at_least", "collaborators_remove", "get_job_status", "authenticate", "key_required", "job_id", "get_run_log", "_validate_commit_id", "elapsed_time", "_get", "includeSetupLog", "files_to_exclude", "auth_token", "__app_create", "validate_spark_executor_count", "status", "_useable_environments_list", "retry_count", "default_spark_setting", "model_version_sagemaker_export", "text", "_validate_hardware_tier_id", "valid_relationships", "blobs_get", "_validate_blob_key", "commits_list", "regex", "run_response", "fork_project", "validations", "model_id", "app_unpublish", "project_name", "payload", "_project_id", "required_key_overrides", "run_info", "executor_count", "environment_id", "get_user_id", "domino_token_file", "all_owned_projects", "_validate_information_data_type", "unit", "runs_start_blocking", "throw_if_information_invalid", "collaborators_get", "get_run_info", "job_runtime_execution_details", "_csrf_no_check_header", "url", "Domino", "supported_types_str", "models_list", "hardware_tiers_list", "runs_list"]}, {"author": "Abhijeet Sharma", "path": "domino/helpers.py", "imports": ["next", "LooseVersion", "print", "urllib", "int", "socket", "parse_version", "distutils.version", "os", "constants"], "variables": ["url_split", "clean_host_url", "s", "is_version_compatible", "is_compute_cluster_properties_supported", "domino_is_reachable", "fqdn", "curr_version", "is_external_volume_mounts_supported", "is_reachable", "is_on_demand_spark_cluster_supported", "is_comute_cluster_autoscaling_supported", "is_cluster_type_supported"]}, {"author": "Abhijeet Sharma", "path": "domino/domino.py", "imports": ["_HttpRequestManager", "pprint", "logging", "ValueError", "len", "polling2", "re", "Exception", "Optional", "validate_is_on_demand_spark_supported", "bs4", "list", "requests", "time", "os", "CLUSTER_TYPE_MIN_SUPPORT", "get_job_status", "__version__", "int", "domino._version", "typing", "validate_distributed_compute_cluster_properties", "MINIMUM_EXTERNAL_VOLUME_MOUNTS_SUPPORT_DOMINO_VERSION", "BeautifulSoup", "get_auth_by_type", "get_default_spark_settings", "functools", "validate_spark_executor_count", "throw_if_information_invalid", "List", "DOMINO_LOG_LEVEL_KEY_NAME", "DOMINO_HOST_KEY_NAME", "validate_on_demand_spark_cluster_properties", "_Routes", "validate_is_external_volume_mounts_supported", "helpers", "exceptions", "str", "MINIMUM_ON_DEMAND_SPARK_CLUSTER_SUPPORT_DOMINO_VERSION", "Tuple"], "variables": ["request_payload", "app_publish", "commitId", "run_stop", "accepted_units", "validated_compute_cluster_properties", "compute_environment_id", "executor_hardware_tier_id", "path", "default_master_hardware_tier", "resolved_hardware_tier_id", "project", "function", "stdout", "query", "job_status", "self", "output_commit_id", "tier", "endpoint_publish", "owner_username", "saveChanges", "useable_environment_list_url", "process_log", "model_version_export_logs", "relationship", "_", "username_or_email", "span_regex", "error_message", "name", "message", "get_default_spark_settings", "r", "max_execution_slot", "logs", "model_version_export_status", "raw_stdout", "validate_on_demand_spark_cluster_properties", "validate_is_external_volume_mounts_supported", "model_version_export", "required_keys", "poll_start", "unpublishRunningApps", "default_spark_setting_url", "response", "supported_types", "description", "project_create", "isDirect", "stdout_msg", "runs_status", "validate_is_on_demand_spark_supported", "api_key", "runs_stdout", "endpoint_state", "collaborators_add", "_configure_logging", "master_hardware_tier_id", "files_upload", "run_id", "model_version_publish", "executor_storage", "job_stop", "returns", "_app_id", "html_start_tags", "projects_list", "_validate_hardware_tier_name", "_validate_environment_id", "job_start_blocking", "app_id", "log", "validate_distributed_compute_cluster_properties", "job", "users", "job_start", "files_list", "user_id", "hardwareTierId", "publishApiEndpoint", "count", "runId", "data", "file", "title", "_host", "html_end_tags", "__app_get_status", "key", "model_versions_get", "endpoint_unpublish", "_put_file", "spark_cluster_properties", "logging_level", "model_publish", "host", "deployment_version", "runs_start", "poll_freq", "default_executor_hardware_tier", "max_poll_time", "get_hardware_tier_id_from_name", "current_retry_count", "show_completed", "project_archive", "app", "environments_list", "command", "request", "__init__", "requires_at_least", "collaborators_remove", "get_job_status", "authenticate", "key_required", "job_id", "get_run_log", "_validate_commit_id", "elapsed_time", "_get", "includeSetupLog", "files_to_exclude", "auth_token", "__app_create", "validate_spark_executor_count", "status", "_useable_environments_list", "retry_count", "default_spark_setting", "model_version_sagemaker_export", "text", "_validate_hardware_tier_id", "valid_relationships", "blobs_get", "_validate_blob_key", "commits_list", "regex", "run_response", "fork_project", "validations", "model_id", "app_unpublish", "project_name", "payload", "_project_id", "required_key_overrides", "run_info", "executor_count", "environment_id", "get_user_id", "domino_token_file", "all_owned_projects", "_validate_information_data_type", "unit", "runs_start_blocking", "throw_if_information_invalid", "collaborators_get", "get_run_info", "job_runtime_execution_details", "_csrf_no_check_header", "url", "Domino", "supported_types_str", "models_list", "hardware_tiers_list", "runs_list"]}, {"author": "Abhijeet Sharma", "path": "domino/helpers.py", "imports": ["next", "LooseVersion", "print", "urllib", "int", "socket", "parse_version", "distutils.version", "os", "constants"], "variables": ["url_split", "clean_host_url", "s", "is_version_compatible", "is_compute_cluster_properties_supported", "domino_is_reachable", "fqdn", "curr_version", "is_external_volume_mounts_supported", "is_reachable", "is_on_demand_spark_cluster_supported", "is_comute_cluster_autoscaling_supported", "is_cluster_type_supported"]}, {"author": "Abhijeet Sharma", "path": "domino/domino.py", "imports": ["_HttpRequestManager", "pprint", "logging", "ValueError", "len", "polling2", "re", "Exception", "Optional", "validate_is_on_demand_spark_supported", "bs4", "list", "requests", "time", "os", "CLUSTER_TYPE_MIN_SUPPORT", "get_job_status", "__version__", "int", "domino._version", "typing", "validate_distributed_compute_cluster_properties", "MINIMUM_EXTERNAL_VOLUME_MOUNTS_SUPPORT_DOMINO_VERSION", "BeautifulSoup", "get_auth_by_type", "get_default_spark_settings", "functools", "validate_spark_executor_count", "throw_if_information_invalid", "List", "DOMINO_LOG_LEVEL_KEY_NAME", "DOMINO_HOST_KEY_NAME", "validate_on_demand_spark_cluster_properties", "_Routes", "validate_is_external_volume_mounts_supported", "helpers", "exceptions", "str", "MINIMUM_ON_DEMAND_SPARK_CLUSTER_SUPPORT_DOMINO_VERSION", "Tuple"], "variables": ["request_payload", "app_publish", "commitId", "run_stop", "accepted_units", "validated_compute_cluster_properties", "compute_environment_id", "executor_hardware_tier_id", "path", "default_master_hardware_tier", "resolved_hardware_tier_id", "project", "function", "stdout", "query", "job_status", "self", "output_commit_id", "tier", "endpoint_publish", "owner_username", "saveChanges", "useable_environment_list_url", "process_log", "model_version_export_logs", "relationship", "_", "username_or_email", "span_regex", "error_message", "name", "message", "get_default_spark_settings", "r", "max_execution_slot", "logs", "model_version_export_status", "raw_stdout", "validate_on_demand_spark_cluster_properties", "validate_is_external_volume_mounts_supported", "model_version_export", "required_keys", "poll_start", "unpublishRunningApps", "default_spark_setting_url", "response", "supported_types", "description", "project_create", "isDirect", "stdout_msg", "runs_status", "validate_is_on_demand_spark_supported", "api_key", "runs_stdout", "endpoint_state", "collaborators_add", "_configure_logging", "master_hardware_tier_id", "files_upload", "run_id", "model_version_publish", "executor_storage", "job_stop", "returns", "_app_id", "html_start_tags", "projects_list", "_validate_hardware_tier_name", "_validate_environment_id", "job_start_blocking", "app_id", "log", "validate_distributed_compute_cluster_properties", "job", "users", "job_start", "files_list", "user_id", "hardwareTierId", "publishApiEndpoint", "count", "runId", "data", "file", "title", "_host", "html_end_tags", "__app_get_status", "key", "model_versions_get", "endpoint_unpublish", "_put_file", "spark_cluster_properties", "logging_level", "model_publish", "host", "deployment_version", "runs_start", "poll_freq", "default_executor_hardware_tier", "max_poll_time", "get_hardware_tier_id_from_name", "current_retry_count", "show_completed", "project_archive", "app", "environments_list", "command", "request", "__init__", "requires_at_least", "collaborators_remove", "get_job_status", "authenticate", "key_required", "job_id", "get_run_log", "_validate_commit_id", "elapsed_time", "_get", "includeSetupLog", "files_to_exclude", "auth_token", "__app_create", "validate_spark_executor_count", "status", "_useable_environments_list", "retry_count", "default_spark_setting", "model_version_sagemaker_export", "text", "_validate_hardware_tier_id", "valid_relationships", "blobs_get", "_validate_blob_key", "commits_list", "regex", "run_response", "fork_project", "validations", "model_id", "app_unpublish", "project_name", "payload", "_project_id", "required_key_overrides", "run_info", "executor_count", "environment_id", "get_user_id", "domino_token_file", "all_owned_projects", "_validate_information_data_type", "unit", "runs_start_blocking", "throw_if_information_invalid", "collaborators_get", "get_run_info", "job_runtime_execution_details", "_csrf_no_check_header", "url", "Domino", "supported_types_str", "models_list", "hardware_tiers_list", "runs_list"]}, {"author": "Abhijeet Sharma", "path": "domino/helpers.py", "imports": ["next", "LooseVersion", "print", "urllib", "int", "socket", "parse_version", "distutils.version", "os", "constants"], "variables": ["url_split", "clean_host_url", "s", "is_version_compatible", "is_compute_cluster_properties_supported", "domino_is_reachable", "fqdn", "curr_version", "is_external_volume_mounts_supported", "is_reachable", "is_on_demand_spark_cluster_supported", "is_comute_cluster_autoscaling_supported", "is_cluster_type_supported"]}, {"author": "Abhijeet Sharma", "path": "domino/domino.py", "imports": ["_HttpRequestManager", "pprint", "logging", "ValueError", "len", "polling2", "re", "Exception", "Optional", "validate_is_on_demand_spark_supported", "bs4", "list", "requests", "time", "os", "CLUSTER_TYPE_MIN_SUPPORT", "get_job_status", "__version__", "int", "domino._version", "typing", "validate_distributed_compute_cluster_properties", "MINIMUM_EXTERNAL_VOLUME_MOUNTS_SUPPORT_DOMINO_VERSION", "BeautifulSoup", "get_auth_by_type", "get_default_spark_settings", "functools", "validate_spark_executor_count", "throw_if_information_invalid", "List", "DOMINO_LOG_LEVEL_KEY_NAME", "DOMINO_HOST_KEY_NAME", "validate_on_demand_spark_cluster_properties", "_Routes", "validate_is_external_volume_mounts_supported", "helpers", "exceptions", "str", "MINIMUM_ON_DEMAND_SPARK_CLUSTER_SUPPORT_DOMINO_VERSION", "Tuple"], "variables": ["request_payload", "app_publish", "commitId", "run_stop", "accepted_units", "validated_compute_cluster_properties", "compute_environment_id", "executor_hardware_tier_id", "path", "default_master_hardware_tier", "resolved_hardware_tier_id", "project", "function", "stdout", "query", "job_status", "self", "output_commit_id", "tier", "endpoint_publish", "owner_username", "saveChanges", "useable_environment_list_url", "process_log", "model_version_export_logs", "relationship", "_", "username_or_email", "span_regex", "error_message", "name", "message", "get_default_spark_settings", "r", "max_execution_slot", "logs", "model_version_export_status", "raw_stdout", "validate_on_demand_spark_cluster_properties", "validate_is_external_volume_mounts_supported", "model_version_export", "required_keys", "poll_start", "unpublishRunningApps", "default_spark_setting_url", "response", "supported_types", "description", "project_create", "isDirect", "stdout_msg", "runs_status", "validate_is_on_demand_spark_supported", "api_key", "runs_stdout", "endpoint_state", "collaborators_add", "_configure_logging", "master_hardware_tier_id", "files_upload", "run_id", "model_version_publish", "executor_storage", "job_stop", "returns", "_app_id", "html_start_tags", "projects_list", "_validate_hardware_tier_name", "_validate_environment_id", "job_start_blocking", "app_id", "log", "validate_distributed_compute_cluster_properties", "job", "users", "job_start", "files_list", "user_id", "hardwareTierId", "publishApiEndpoint", "count", "runId", "data", "file", "title", "_host", "html_end_tags", "__app_get_status", "key", "model_versions_get", "endpoint_unpublish", "_put_file", "spark_cluster_properties", "logging_level", "model_publish", "host", "deployment_version", "runs_start", "poll_freq", "default_executor_hardware_tier", "max_poll_time", "get_hardware_tier_id_from_name", "current_retry_count", "show_completed", "project_archive", "app", "environments_list", "command", "request", "__init__", "requires_at_least", "collaborators_remove", "get_job_status", "authenticate", "key_required", "job_id", "get_run_log", "_validate_commit_id", "elapsed_time", "_get", "includeSetupLog", "files_to_exclude", "auth_token", "__app_create", "validate_spark_executor_count", "status", "_useable_environments_list", "retry_count", "default_spark_setting", "model_version_sagemaker_export", "text", "_validate_hardware_tier_id", "valid_relationships", "blobs_get", "_validate_blob_key", "commits_list", "regex", "run_response", "fork_project", "validations", "model_id", "app_unpublish", "project_name", "payload", "_project_id", "required_key_overrides", "run_info", "executor_count", "environment_id", "get_user_id", "domino_token_file", "all_owned_projects", "_validate_information_data_type", "unit", "runs_start_blocking", "throw_if_information_invalid", "collaborators_get", "get_run_info", "job_runtime_execution_details", "_csrf_no_check_header", "url", "Domino", "supported_types_str", "models_list", "hardware_tiers_list", "runs_list"]}, {"author": "Abhijeet Sharma", "path": "domino/__init__.py", "imports": ["domino._version", "__version__", "Domino"], "variables": ["__all__"]}, {"author": "Abhijeet Sharma", "path": "domino/domino.py", "imports": ["_HttpRequestManager", "pprint", "logging", "ValueError", "len", "polling2", "re", "Exception", "Optional", "validate_is_on_demand_spark_supported", "bs4", "list", "requests", "time", "os", "CLUSTER_TYPE_MIN_SUPPORT", "get_job_status", "__version__", "int", "domino._version", "typing", "validate_distributed_compute_cluster_properties", "MINIMUM_EXTERNAL_VOLUME_MOUNTS_SUPPORT_DOMINO_VERSION", "BeautifulSoup", "get_auth_by_type", "get_default_spark_settings", "functools", "validate_spark_executor_count", "throw_if_information_invalid", "List", "DOMINO_LOG_LEVEL_KEY_NAME", "DOMINO_HOST_KEY_NAME", "validate_on_demand_spark_cluster_properties", "_Routes", "validate_is_external_volume_mounts_supported", "helpers", "exceptions", "str", "MINIMUM_ON_DEMAND_SPARK_CLUSTER_SUPPORT_DOMINO_VERSION", "Tuple"], "variables": ["request_payload", "app_publish", "commitId", "run_stop", "accepted_units", "validated_compute_cluster_properties", "compute_environment_id", "executor_hardware_tier_id", "path", "default_master_hardware_tier", "resolved_hardware_tier_id", "project", "function", "stdout", "query", "job_status", "self", "output_commit_id", "tier", "endpoint_publish", "owner_username", "saveChanges", "useable_environment_list_url", "process_log", "model_version_export_logs", "relationship", "_", "username_or_email", "span_regex", "error_message", "name", "message", "get_default_spark_settings", "r", "max_execution_slot", "logs", "model_version_export_status", "raw_stdout", "validate_on_demand_spark_cluster_properties", "validate_is_external_volume_mounts_supported", "model_version_export", "required_keys", "poll_start", "unpublishRunningApps", "default_spark_setting_url", "response", "supported_types", "description", "project_create", "isDirect", "stdout_msg", "runs_status", "validate_is_on_demand_spark_supported", "api_key", "runs_stdout", "endpoint_state", "collaborators_add", "_configure_logging", "master_hardware_tier_id", "files_upload", "run_id", "model_version_publish", "executor_storage", "job_stop", "returns", "_app_id", "html_start_tags", "projects_list", "_validate_hardware_tier_name", "_validate_environment_id", "job_start_blocking", "app_id", "log", "validate_distributed_compute_cluster_properties", "job", "users", "job_start", "files_list", "user_id", "hardwareTierId", "publishApiEndpoint", "count", "runId", "data", "file", "title", "_host", "html_end_tags", "__app_get_status", "key", "model_versions_get", "endpoint_unpublish", "_put_file", "spark_cluster_properties", "logging_level", "model_publish", "host", "deployment_version", "runs_start", "poll_freq", "default_executor_hardware_tier", "max_poll_time", "get_hardware_tier_id_from_name", "current_retry_count", "show_completed", "project_archive", "app", "environments_list", "command", "request", "__init__", "requires_at_least", "collaborators_remove", "get_job_status", "authenticate", "key_required", "job_id", "get_run_log", "_validate_commit_id", "elapsed_time", "_get", "includeSetupLog", "files_to_exclude", "auth_token", "__app_create", "validate_spark_executor_count", "status", "_useable_environments_list", "retry_count", "default_spark_setting", "model_version_sagemaker_export", "text", "_validate_hardware_tier_id", "valid_relationships", "blobs_get", "_validate_blob_key", "commits_list", "regex", "run_response", "fork_project", "validations", "model_id", "app_unpublish", "project_name", "payload", "_project_id", "required_key_overrides", "run_info", "executor_count", "environment_id", "get_user_id", "domino_token_file", "all_owned_projects", "_validate_information_data_type", "unit", "runs_start_blocking", "throw_if_information_invalid", "collaborators_get", "get_run_info", "job_runtime_execution_details", "_csrf_no_check_header", "url", "Domino", "supported_types_str", "models_list", "hardware_tiers_list", "runs_list"]}, {"author": "Abhijeet Sharma", "path": "domino/domino.py", "imports": ["_HttpRequestManager", "pprint", "logging", "ValueError", "len", "polling2", "re", "Exception", "Optional", "validate_is_on_demand_spark_supported", "bs4", "list", "requests", "time", "os", "CLUSTER_TYPE_MIN_SUPPORT", "get_job_status", "__version__", "int", "domino._version", "typing", "validate_distributed_compute_cluster_properties", "MINIMUM_EXTERNAL_VOLUME_MOUNTS_SUPPORT_DOMINO_VERSION", "BeautifulSoup", "get_auth_by_type", "get_default_spark_settings", "functools", "validate_spark_executor_count", "throw_if_information_invalid", "List", "DOMINO_LOG_LEVEL_KEY_NAME", "DOMINO_HOST_KEY_NAME", "validate_on_demand_spark_cluster_properties", "_Routes", "validate_is_external_volume_mounts_supported", "helpers", "exceptions", "str", "MINIMUM_ON_DEMAND_SPARK_CLUSTER_SUPPORT_DOMINO_VERSION", "Tuple"], "variables": ["request_payload", "app_publish", "commitId", "run_stop", "accepted_units", "validated_compute_cluster_properties", "compute_environment_id", "executor_hardware_tier_id", "path", "default_master_hardware_tier", "resolved_hardware_tier_id", "project", "function", "stdout", "query", "job_status", "self", "output_commit_id", "tier", "endpoint_publish", "owner_username", "saveChanges", "useable_environment_list_url", "process_log", "model_version_export_logs", "relationship", "_", "username_or_email", "span_regex", "error_message", "name", "message", "get_default_spark_settings", "r", "max_execution_slot", "logs", "model_version_export_status", "raw_stdout", "validate_on_demand_spark_cluster_properties", "validate_is_external_volume_mounts_supported", "model_version_export", "required_keys", "poll_start", "unpublishRunningApps", "default_spark_setting_url", "response", "supported_types", "description", "project_create", "isDirect", "stdout_msg", "runs_status", "validate_is_on_demand_spark_supported", "api_key", "runs_stdout", "endpoint_state", "collaborators_add", "_configure_logging", "master_hardware_tier_id", "files_upload", "run_id", "model_version_publish", "executor_storage", "job_stop", "returns", "_app_id", "html_start_tags", "projects_list", "_validate_hardware_tier_name", "_validate_environment_id", "job_start_blocking", "app_id", "log", "validate_distributed_compute_cluster_properties", "job", "users", "job_start", "files_list", "user_id", "hardwareTierId", "publishApiEndpoint", "count", "runId", "data", "file", "title", "_host", "html_end_tags", "__app_get_status", "key", "model_versions_get", "endpoint_unpublish", "_put_file", "spark_cluster_properties", "logging_level", "model_publish", "host", "deployment_version", "runs_start", "poll_freq", "default_executor_hardware_tier", "max_poll_time", "get_hardware_tier_id_from_name", "current_retry_count", "show_completed", "project_archive", "app", "environments_list", "command", "request", "__init__", "requires_at_least", "collaborators_remove", "get_job_status", "authenticate", "key_required", "job_id", "get_run_log", "_validate_commit_id", "elapsed_time", "_get", "includeSetupLog", "files_to_exclude", "auth_token", "__app_create", "validate_spark_executor_count", "status", "_useable_environments_list", "retry_count", "default_spark_setting", "model_version_sagemaker_export", "text", "_validate_hardware_tier_id", "valid_relationships", "blobs_get", "_validate_blob_key", "commits_list", "regex", "run_response", "fork_project", "validations", "model_id", "app_unpublish", "project_name", "payload", "_project_id", "required_key_overrides", "run_info", "executor_count", "environment_id", "get_user_id", "domino_token_file", "all_owned_projects", "_validate_information_data_type", "unit", "runs_start_blocking", "throw_if_information_invalid", "collaborators_get", "get_run_info", "job_runtime_execution_details", "_csrf_no_check_header", "url", "Domino", "supported_types_str", "models_list", "hardware_tiers_list", "runs_list"]}, {"author": "Abhijeet Sharma", "path": "domino/helpers.py", "imports": ["next", "LooseVersion", "print", "urllib", "int", "socket", "parse_version", "distutils.version", "os", "constants"], "variables": ["url_split", "clean_host_url", "s", "is_version_compatible", "is_compute_cluster_properties_supported", "domino_is_reachable", "fqdn", "curr_version", "is_external_volume_mounts_supported", "is_reachable", "is_on_demand_spark_cluster_supported", "is_comute_cluster_autoscaling_supported", "is_cluster_type_supported"]}, {"author": "Abhijeet Sharma", "path": "domino/__init__.py", "imports": ["domino._version", "__version__", "Domino"], "variables": ["__all__"]}, {"author": "Abhijeet Sharma", "path": "domino/domino.py", "imports": ["_HttpRequestManager", "pprint", "logging", "ValueError", "len", "polling2", "re", "Exception", "Optional", "validate_is_on_demand_spark_supported", "bs4", "list", "requests", "time", "os", "CLUSTER_TYPE_MIN_SUPPORT", "get_job_status", "__version__", "int", "domino._version", "typing", "validate_distributed_compute_cluster_properties", "MINIMUM_EXTERNAL_VOLUME_MOUNTS_SUPPORT_DOMINO_VERSION", "BeautifulSoup", "get_auth_by_type", "get_default_spark_settings", "functools", "validate_spark_executor_count", "throw_if_information_invalid", "List", "DOMINO_LOG_LEVEL_KEY_NAME", "DOMINO_HOST_KEY_NAME", "validate_on_demand_spark_cluster_properties", "_Routes", "validate_is_external_volume_mounts_supported", "helpers", "exceptions", "str", "MINIMUM_ON_DEMAND_SPARK_CLUSTER_SUPPORT_DOMINO_VERSION", "Tuple"], "variables": ["request_payload", "app_publish", "commitId", "run_stop", "accepted_units", "validated_compute_cluster_properties", "compute_environment_id", "executor_hardware_tier_id", "path", "default_master_hardware_tier", "resolved_hardware_tier_id", "project", "function", "stdout", "query", "job_status", "self", "output_commit_id", "tier", "endpoint_publish", "owner_username", "saveChanges", "useable_environment_list_url", "process_log", "model_version_export_logs", "relationship", "_", "username_or_email", "span_regex", "error_message", "name", "message", "get_default_spark_settings", "r", "max_execution_slot", "logs", "model_version_export_status", "raw_stdout", "validate_on_demand_spark_cluster_properties", "validate_is_external_volume_mounts_supported", "model_version_export", "required_keys", "poll_start", "unpublishRunningApps", "default_spark_setting_url", "response", "supported_types", "description", "project_create", "isDirect", "stdout_msg", "runs_status", "validate_is_on_demand_spark_supported", "api_key", "runs_stdout", "endpoint_state", "collaborators_add", "_configure_logging", "master_hardware_tier_id", "files_upload", "run_id", "model_version_publish", "executor_storage", "job_stop", "returns", "_app_id", "html_start_tags", "projects_list", "_validate_hardware_tier_name", "_validate_environment_id", "job_start_blocking", "app_id", "log", "validate_distributed_compute_cluster_properties", "job", "users", "job_start", "files_list", "user_id", "hardwareTierId", "publishApiEndpoint", "count", "runId", "data", "file", "title", "_host", "html_end_tags", "__app_get_status", "key", "model_versions_get", "endpoint_unpublish", "_put_file", "spark_cluster_properties", "logging_level", "model_publish", "host", "deployment_version", "runs_start", "poll_freq", "default_executor_hardware_tier", "max_poll_time", "get_hardware_tier_id_from_name", "current_retry_count", "show_completed", "project_archive", "app", "environments_list", "command", "request", "__init__", "requires_at_least", "collaborators_remove", "get_job_status", "authenticate", "key_required", "job_id", "get_run_log", "_validate_commit_id", "elapsed_time", "_get", "includeSetupLog", "files_to_exclude", "auth_token", "__app_create", "validate_spark_executor_count", "status", "_useable_environments_list", "retry_count", "default_spark_setting", "model_version_sagemaker_export", "text", "_validate_hardware_tier_id", "valid_relationships", "blobs_get", "_validate_blob_key", "commits_list", "regex", "run_response", "fork_project", "validations", "model_id", "app_unpublish", "project_name", "payload", "_project_id", "required_key_overrides", "run_info", "executor_count", "environment_id", "get_user_id", "domino_token_file", "all_owned_projects", "_validate_information_data_type", "unit", "runs_start_blocking", "throw_if_information_invalid", "collaborators_get", "get_run_info", "job_runtime_execution_details", "_csrf_no_check_header", "url", "Domino", "supported_types_str", "models_list", "hardware_tiers_list", "runs_list"]}, {"author": "Abhijeet Sharma", "path": "domino/helpers.py", "imports": ["next", "LooseVersion", "print", "urllib", "int", "socket", "parse_version", "distutils.version", "os", "constants"], "variables": ["url_split", "clean_host_url", "s", "is_version_compatible", "is_compute_cluster_properties_supported", "domino_is_reachable", "fqdn", "curr_version", "is_external_volume_mounts_supported", "is_reachable", "is_on_demand_spark_cluster_supported", "is_comute_cluster_autoscaling_supported", "is_cluster_type_supported"]}, {"author": "Abhijeet Sharma", "path": "setup.py", "imports": ["find_packages", "pathlib", "get_version", "setup", "re", "open", "setuptools"], "variables": ["README", "f", "HERE", "get_version", "PACKAGE_NAME", "mo", "ver"]}, {"author": "Abhijeet Sharma", "path": "domino/domino.py", "imports": ["_HttpRequestManager", "pprint", "logging", "ValueError", "len", "polling2", "re", "Exception", "Optional", "validate_is_on_demand_spark_supported", "bs4", "list", "requests", "time", "os", "CLUSTER_TYPE_MIN_SUPPORT", "get_job_status", "__version__", "int", "domino._version", "typing", "validate_distributed_compute_cluster_properties", "MINIMUM_EXTERNAL_VOLUME_MOUNTS_SUPPORT_DOMINO_VERSION", "BeautifulSoup", "get_auth_by_type", "get_default_spark_settings", "functools", "validate_spark_executor_count", "throw_if_information_invalid", "List", "DOMINO_LOG_LEVEL_KEY_NAME", "DOMINO_HOST_KEY_NAME", "validate_on_demand_spark_cluster_properties", "_Routes", "validate_is_external_volume_mounts_supported", "helpers", "exceptions", "str", "MINIMUM_ON_DEMAND_SPARK_CLUSTER_SUPPORT_DOMINO_VERSION", "Tuple"], "variables": ["request_payload", "app_publish", "commitId", "run_stop", "accepted_units", "validated_compute_cluster_properties", "compute_environment_id", "executor_hardware_tier_id", "path", "default_master_hardware_tier", "resolved_hardware_tier_id", "project", "function", "stdout", "query", "job_status", "self", "output_commit_id", "tier", "endpoint_publish", "owner_username", "saveChanges", "useable_environment_list_url", "process_log", "model_version_export_logs", "relationship", "_", "username_or_email", "span_regex", "error_message", "name", "message", "get_default_spark_settings", "r", "max_execution_slot", "logs", "model_version_export_status", "raw_stdout", "validate_on_demand_spark_cluster_properties", "validate_is_external_volume_mounts_supported", "model_version_export", "required_keys", "poll_start", "unpublishRunningApps", "default_spark_setting_url", "response", "supported_types", "description", "project_create", "isDirect", "stdout_msg", "runs_status", "validate_is_on_demand_spark_supported", "api_key", "runs_stdout", "endpoint_state", "collaborators_add", "_configure_logging", "master_hardware_tier_id", "files_upload", "run_id", "model_version_publish", "executor_storage", "job_stop", "returns", "_app_id", "html_start_tags", "projects_list", "_validate_hardware_tier_name", "_validate_environment_id", "job_start_blocking", "app_id", "log", "validate_distributed_compute_cluster_properties", "job", "users", "job_start", "files_list", "user_id", "hardwareTierId", "publishApiEndpoint", "count", "runId", "data", "file", "title", "_host", "html_end_tags", "__app_get_status", "key", "model_versions_get", "endpoint_unpublish", "_put_file", "spark_cluster_properties", "logging_level", "model_publish", "host", "deployment_version", "runs_start", "poll_freq", "default_executor_hardware_tier", "max_poll_time", "get_hardware_tier_id_from_name", "current_retry_count", "show_completed", "project_archive", "app", "environments_list", "command", "request", "__init__", "requires_at_least", "collaborators_remove", "get_job_status", "authenticate", "key_required", "job_id", "get_run_log", "_validate_commit_id", "elapsed_time", "_get", "includeSetupLog", "files_to_exclude", "auth_token", "__app_create", "validate_spark_executor_count", "status", "_useable_environments_list", "retry_count", "default_spark_setting", "model_version_sagemaker_export", "text", "_validate_hardware_tier_id", "valid_relationships", "blobs_get", "_validate_blob_key", "commits_list", "regex", "run_response", "fork_project", "validations", "model_id", "app_unpublish", "project_name", "payload", "_project_id", "required_key_overrides", "run_info", "executor_count", "environment_id", "get_user_id", "domino_token_file", "all_owned_projects", "_validate_information_data_type", "unit", "runs_start_blocking", "throw_if_information_invalid", "collaborators_get", "get_run_info", "job_runtime_execution_details", "_csrf_no_check_header", "url", "Domino", "supported_types_str", "models_list", "hardware_tiers_list", "runs_list"]}, {"author": "Igor Marchenko", "path": "domino/__init__.py", "imports": ["domino._version", "__version__", "Domino"], "variables": ["__all__"]}, {"author": "Igor Marchenko", "path": "setup.py", "imports": ["find_packages", "pathlib", "get_version", "setup", "re", "open", "setuptools"], "variables": ["README", "f", "HERE", "get_version", "PACKAGE_NAME", "mo", "ver"]}, {"author": "imarchenko", "path": "domino/__init__.py", "imports": ["domino._version", "__version__", "Domino"], "variables": ["__all__"]}, {"author": "Igor Marchenko", "path": "domino/domino.py", "imports": ["_HttpRequestManager", "pprint", "logging", "ValueError", "len", "polling2", "re", "Exception", "Optional", "validate_is_on_demand_spark_supported", "bs4", "list", "requests", "time", "os", "CLUSTER_TYPE_MIN_SUPPORT", "get_job_status", "__version__", "int", "domino._version", "typing", "validate_distributed_compute_cluster_properties", "MINIMUM_EXTERNAL_VOLUME_MOUNTS_SUPPORT_DOMINO_VERSION", "BeautifulSoup", "get_auth_by_type", "get_default_spark_settings", "functools", "validate_spark_executor_count", "throw_if_information_invalid", "List", "DOMINO_LOG_LEVEL_KEY_NAME", "DOMINO_HOST_KEY_NAME", "validate_on_demand_spark_cluster_properties", "_Routes", "validate_is_external_volume_mounts_supported", "helpers", "exceptions", "str", "MINIMUM_ON_DEMAND_SPARK_CLUSTER_SUPPORT_DOMINO_VERSION", "Tuple"], "variables": ["request_payload", "app_publish", "commitId", "run_stop", "accepted_units", "validated_compute_cluster_properties", "compute_environment_id", "executor_hardware_tier_id", "path", "default_master_hardware_tier", "resolved_hardware_tier_id", "project", "function", "stdout", "query", "job_status", "self", "output_commit_id", "tier", "endpoint_publish", "owner_username", "saveChanges", "useable_environment_list_url", "process_log", "model_version_export_logs", "relationship", "_", "username_or_email", "span_regex", "error_message", "name", "message", "get_default_spark_settings", "r", "max_execution_slot", "logs", "model_version_export_status", "raw_stdout", "validate_on_demand_spark_cluster_properties", "validate_is_external_volume_mounts_supported", "model_version_export", "required_keys", "poll_start", "unpublishRunningApps", "default_spark_setting_url", "response", "supported_types", "description", "project_create", "isDirect", "stdout_msg", "runs_status", "validate_is_on_demand_spark_supported", "api_key", "runs_stdout", "endpoint_state", "collaborators_add", "_configure_logging", "master_hardware_tier_id", "files_upload", "run_id", "model_version_publish", "executor_storage", "job_stop", "returns", "_app_id", "html_start_tags", "projects_list", "_validate_hardware_tier_name", "_validate_environment_id", "job_start_blocking", "app_id", "log", "validate_distributed_compute_cluster_properties", "job", "users", "job_start", "files_list", "user_id", "hardwareTierId", "publishApiEndpoint", "count", "runId", "data", "file", "title", "_host", "html_end_tags", "__app_get_status", "key", "model_versions_get", "endpoint_unpublish", "_put_file", "spark_cluster_properties", "logging_level", "model_publish", "host", "deployment_version", "runs_start", "poll_freq", "default_executor_hardware_tier", "max_poll_time", "get_hardware_tier_id_from_name", "current_retry_count", "show_completed", "project_archive", "app", "environments_list", "command", "request", "__init__", "requires_at_least", "collaborators_remove", "get_job_status", "authenticate", "key_required", "job_id", "get_run_log", "_validate_commit_id", "elapsed_time", "_get", "includeSetupLog", "files_to_exclude", "auth_token", "__app_create", "validate_spark_executor_count", "status", "_useable_environments_list", "retry_count", "default_spark_setting", "model_version_sagemaker_export", "text", "_validate_hardware_tier_id", "valid_relationships", "blobs_get", "_validate_blob_key", "commits_list", "regex", "run_response", "fork_project", "validations", "model_id", "app_unpublish", "project_name", "payload", "_project_id", "required_key_overrides", "run_info", "executor_count", "environment_id", "get_user_id", "domino_token_file", "all_owned_projects", "_validate_information_data_type", "unit", "runs_start_blocking", "throw_if_information_invalid", "collaborators_get", "get_run_info", "job_runtime_execution_details", "_csrf_no_check_header", "url", "Domino", "supported_types_str", "models_list", "hardware_tiers_list", "runs_list"]}, {"author": "Andrew Ziegler", "path": "domino/domino.py", "imports": ["_HttpRequestManager", "pprint", "logging", "ValueError", "len", "polling2", "re", "Exception", "Optional", "validate_is_on_demand_spark_supported", "bs4", "list", "requests", "time", "os", "CLUSTER_TYPE_MIN_SUPPORT", "get_job_status", "__version__", "int", "domino._version", "typing", "validate_distributed_compute_cluster_properties", "MINIMUM_EXTERNAL_VOLUME_MOUNTS_SUPPORT_DOMINO_VERSION", "BeautifulSoup", "get_auth_by_type", "get_default_spark_settings", "functools", "validate_spark_executor_count", "throw_if_information_invalid", "List", "DOMINO_LOG_LEVEL_KEY_NAME", "DOMINO_HOST_KEY_NAME", "validate_on_demand_spark_cluster_properties", "_Routes", "validate_is_external_volume_mounts_supported", "helpers", "exceptions", "str", "MINIMUM_ON_DEMAND_SPARK_CLUSTER_SUPPORT_DOMINO_VERSION", "Tuple"], "variables": ["request_payload", "app_publish", "commitId", "run_stop", "accepted_units", "validated_compute_cluster_properties", "compute_environment_id", "executor_hardware_tier_id", "path", "default_master_hardware_tier", "resolved_hardware_tier_id", "project", "function", "stdout", "query", "job_status", "self", "output_commit_id", "tier", "endpoint_publish", "owner_username", "saveChanges", "useable_environment_list_url", "process_log", "model_version_export_logs", "relationship", "_", "username_or_email", "span_regex", "error_message", "name", "message", "get_default_spark_settings", "r", "max_execution_slot", "logs", "model_version_export_status", "raw_stdout", "validate_on_demand_spark_cluster_properties", "validate_is_external_volume_mounts_supported", "model_version_export", "required_keys", "poll_start", "unpublishRunningApps", "default_spark_setting_url", "response", "supported_types", "description", "project_create", "isDirect", "stdout_msg", "runs_status", "validate_is_on_demand_spark_supported", "api_key", "runs_stdout", "endpoint_state", "collaborators_add", "_configure_logging", "master_hardware_tier_id", "files_upload", "run_id", "model_version_publish", "executor_storage", "job_stop", "returns", "_app_id", "html_start_tags", "projects_list", "_validate_hardware_tier_name", "_validate_environment_id", "job_start_blocking", "app_id", "log", "validate_distributed_compute_cluster_properties", "job", "users", "job_start", "files_list", "user_id", "hardwareTierId", "publishApiEndpoint", "count", "runId", "data", "file", "title", "_host", "html_end_tags", "__app_get_status", "key", "model_versions_get", "endpoint_unpublish", "_put_file", "spark_cluster_properties", "logging_level", "model_publish", "host", "deployment_version", "runs_start", "poll_freq", "default_executor_hardware_tier", "max_poll_time", "get_hardware_tier_id_from_name", "current_retry_count", "show_completed", "project_archive", "app", "environments_list", "command", "request", "__init__", "requires_at_least", "collaborators_remove", "get_job_status", "authenticate", "key_required", "job_id", "get_run_log", "_validate_commit_id", "elapsed_time", "_get", "includeSetupLog", "files_to_exclude", "auth_token", "__app_create", "validate_spark_executor_count", "status", "_useable_environments_list", "retry_count", "default_spark_setting", "model_version_sagemaker_export", "text", "_validate_hardware_tier_id", "valid_relationships", "blobs_get", "_validate_blob_key", "commits_list", "regex", "run_response", "fork_project", "validations", "model_id", "app_unpublish", "project_name", "payload", "_project_id", "required_key_overrides", "run_info", "executor_count", "environment_id", "get_user_id", "domino_token_file", "all_owned_projects", "_validate_information_data_type", "unit", "runs_start_blocking", "throw_if_information_invalid", "collaborators_get", "get_run_info", "job_runtime_execution_details", "_csrf_no_check_header", "url", "Domino", "supported_types_str", "models_list", "hardware_tiers_list", "runs_list"]}, {"author": "Andrew Ziegler", "path": "domino/domino.py", "imports": ["_HttpRequestManager", "pprint", "logging", "ValueError", "len", "polling2", "re", "Exception", "Optional", "validate_is_on_demand_spark_supported", "bs4", "list", "requests", "time", "os", "CLUSTER_TYPE_MIN_SUPPORT", "get_job_status", "__version__", "int", "domino._version", "typing", "validate_distributed_compute_cluster_properties", "MINIMUM_EXTERNAL_VOLUME_MOUNTS_SUPPORT_DOMINO_VERSION", "BeautifulSoup", "get_auth_by_type", "get_default_spark_settings", "functools", "validate_spark_executor_count", "throw_if_information_invalid", "List", "DOMINO_LOG_LEVEL_KEY_NAME", "DOMINO_HOST_KEY_NAME", "validate_on_demand_spark_cluster_properties", "_Routes", "validate_is_external_volume_mounts_supported", "helpers", "exceptions", "str", "MINIMUM_ON_DEMAND_SPARK_CLUSTER_SUPPORT_DOMINO_VERSION", "Tuple"], "variables": ["request_payload", "app_publish", "commitId", "run_stop", "accepted_units", "validated_compute_cluster_properties", "compute_environment_id", "executor_hardware_tier_id", "path", "default_master_hardware_tier", "resolved_hardware_tier_id", "project", "function", "stdout", "query", "job_status", "self", "output_commit_id", "tier", "endpoint_publish", "owner_username", "saveChanges", "useable_environment_list_url", "process_log", "model_version_export_logs", "relationship", "_", "username_or_email", "span_regex", "error_message", "name", "message", "get_default_spark_settings", "r", "max_execution_slot", "logs", "model_version_export_status", "raw_stdout", "validate_on_demand_spark_cluster_properties", "validate_is_external_volume_mounts_supported", "model_version_export", "required_keys", "poll_start", "unpublishRunningApps", "default_spark_setting_url", "response", "supported_types", "description", "project_create", "isDirect", "stdout_msg", "runs_status", "validate_is_on_demand_spark_supported", "api_key", "runs_stdout", "endpoint_state", "collaborators_add", "_configure_logging", "master_hardware_tier_id", "files_upload", "run_id", "model_version_publish", "executor_storage", "job_stop", "returns", "_app_id", "html_start_tags", "projects_list", "_validate_hardware_tier_name", "_validate_environment_id", "job_start_blocking", "app_id", "log", "validate_distributed_compute_cluster_properties", "job", "users", "job_start", "files_list", "user_id", "hardwareTierId", "publishApiEndpoint", "count", "runId", "data", "file", "title", "_host", "html_end_tags", "__app_get_status", "key", "model_versions_get", "endpoint_unpublish", "_put_file", "spark_cluster_properties", "logging_level", "model_publish", "host", "deployment_version", "runs_start", "poll_freq", "default_executor_hardware_tier", "max_poll_time", "get_hardware_tier_id_from_name", "current_retry_count", "show_completed", "project_archive", "app", "environments_list", "command", "request", "__init__", "requires_at_least", "collaborators_remove", "get_job_status", "authenticate", "key_required", "job_id", "get_run_log", "_validate_commit_id", "elapsed_time", "_get", "includeSetupLog", "files_to_exclude", "auth_token", "__app_create", "validate_spark_executor_count", "status", "_useable_environments_list", "retry_count", "default_spark_setting", "model_version_sagemaker_export", "text", "_validate_hardware_tier_id", "valid_relationships", "blobs_get", "_validate_blob_key", "commits_list", "regex", "run_response", "fork_project", "validations", "model_id", "app_unpublish", "project_name", "payload", "_project_id", "required_key_overrides", "run_info", "executor_count", "environment_id", "get_user_id", "domino_token_file", "all_owned_projects", "_validate_information_data_type", "unit", "runs_start_blocking", "throw_if_information_invalid", "collaborators_get", "get_run_info", "job_runtime_execution_details", "_csrf_no_check_header", "url", "Domino", "supported_types_str", "models_list", "hardware_tiers_list", "runs_list"]}, {"author": "imarchenko", "path": "examples/models_and_environments.py", "imports": ["domino", "list", "describe_model_versions", "len", "filter", "Domino", "print", "os"], "variables": ["domino", "published_model_id", "describe_model_versions", "global_environments", "another_model_version", "all_available_models", "chosen_environment_id", "model_versions", "all_available_environments", "published_model"]}, {"author": "imarchenko", "path": "domino/domino.py", "imports": ["_HttpRequestManager", "pprint", "logging", "ValueError", "len", "polling2", "re", "Exception", "Optional", "validate_is_on_demand_spark_supported", "bs4", "list", "requests", "time", "os", "CLUSTER_TYPE_MIN_SUPPORT", "get_job_status", "__version__", "int", "domino._version", "typing", "validate_distributed_compute_cluster_properties", "MINIMUM_EXTERNAL_VOLUME_MOUNTS_SUPPORT_DOMINO_VERSION", "BeautifulSoup", "get_auth_by_type", "get_default_spark_settings", "functools", "validate_spark_executor_count", "throw_if_information_invalid", "List", "DOMINO_LOG_LEVEL_KEY_NAME", "DOMINO_HOST_KEY_NAME", "validate_on_demand_spark_cluster_properties", "_Routes", "validate_is_external_volume_mounts_supported", "helpers", "exceptions", "str", "MINIMUM_ON_DEMAND_SPARK_CLUSTER_SUPPORT_DOMINO_VERSION", "Tuple"], "variables": ["request_payload", "app_publish", "commitId", "run_stop", "accepted_units", "validated_compute_cluster_properties", "compute_environment_id", "executor_hardware_tier_id", "path", "default_master_hardware_tier", "resolved_hardware_tier_id", "project", "function", "stdout", "query", "job_status", "self", "output_commit_id", "tier", "endpoint_publish", "owner_username", "saveChanges", "useable_environment_list_url", "process_log", "model_version_export_logs", "relationship", "_", "username_or_email", "span_regex", "error_message", "name", "message", "get_default_spark_settings", "r", "max_execution_slot", "logs", "model_version_export_status", "raw_stdout", "validate_on_demand_spark_cluster_properties", "validate_is_external_volume_mounts_supported", "model_version_export", "required_keys", "poll_start", "unpublishRunningApps", "default_spark_setting_url", "response", "supported_types", "description", "project_create", "isDirect", "stdout_msg", "runs_status", "validate_is_on_demand_spark_supported", "api_key", "runs_stdout", "endpoint_state", "collaborators_add", "_configure_logging", "master_hardware_tier_id", "files_upload", "run_id", "model_version_publish", "executor_storage", "job_stop", "returns", "_app_id", "html_start_tags", "projects_list", "_validate_hardware_tier_name", "_validate_environment_id", "job_start_blocking", "app_id", "log", "validate_distributed_compute_cluster_properties", "job", "users", "job_start", "files_list", "user_id", "hardwareTierId", "publishApiEndpoint", "count", "runId", "data", "file", "title", "_host", "html_end_tags", "__app_get_status", "key", "model_versions_get", "endpoint_unpublish", "_put_file", "spark_cluster_properties", "logging_level", "model_publish", "host", "deployment_version", "runs_start", "poll_freq", "default_executor_hardware_tier", "max_poll_time", "get_hardware_tier_id_from_name", "current_retry_count", "show_completed", "project_archive", "app", "environments_list", "command", "request", "__init__", "requires_at_least", "collaborators_remove", "get_job_status", "authenticate", "key_required", "job_id", "get_run_log", "_validate_commit_id", "elapsed_time", "_get", "includeSetupLog", "files_to_exclude", "auth_token", "__app_create", "validate_spark_executor_count", "status", "_useable_environments_list", "retry_count", "default_spark_setting", "model_version_sagemaker_export", "text", "_validate_hardware_tier_id", "valid_relationships", "blobs_get", "_validate_blob_key", "commits_list", "regex", "run_response", "fork_project", "validations", "model_id", "app_unpublish", "project_name", "payload", "_project_id", "required_key_overrides", "run_info", "executor_count", "environment_id", "get_user_id", "domino_token_file", "all_owned_projects", "_validate_information_data_type", "unit", "runs_start_blocking", "throw_if_information_invalid", "collaborators_get", "get_run_info", "job_runtime_execution_details", "_csrf_no_check_header", "url", "Domino", "supported_types_str", "models_list", "hardware_tiers_list", "runs_list"]}, {"author": "imarchenko", "path": "setup.py", "imports": ["find_packages", "pathlib", "get_version", "setup", "re", "open", "setuptools"], "variables": ["README", "f", "HERE", "get_version", "PACKAGE_NAME", "mo", "ver"]}, {"author": "Mark Silverberg", "path": "domino/domino.py", "imports": ["_HttpRequestManager", "pprint", "logging", "ValueError", "len", "polling2", "re", "Exception", "Optional", "validate_is_on_demand_spark_supported", "bs4", "list", "requests", "time", "os", "CLUSTER_TYPE_MIN_SUPPORT", "get_job_status", "__version__", "int", "domino._version", "typing", "validate_distributed_compute_cluster_properties", "MINIMUM_EXTERNAL_VOLUME_MOUNTS_SUPPORT_DOMINO_VERSION", "BeautifulSoup", "get_auth_by_type", "get_default_spark_settings", "functools", "validate_spark_executor_count", "throw_if_information_invalid", "List", "DOMINO_LOG_LEVEL_KEY_NAME", "DOMINO_HOST_KEY_NAME", "validate_on_demand_spark_cluster_properties", "_Routes", "validate_is_external_volume_mounts_supported", "helpers", "exceptions", "str", "MINIMUM_ON_DEMAND_SPARK_CLUSTER_SUPPORT_DOMINO_VERSION", "Tuple"], "variables": ["request_payload", "app_publish", "commitId", "run_stop", "accepted_units", "validated_compute_cluster_properties", "compute_environment_id", "executor_hardware_tier_id", "path", "default_master_hardware_tier", "resolved_hardware_tier_id", "project", "function", "stdout", "query", "job_status", "self", "output_commit_id", "tier", "endpoint_publish", "owner_username", "saveChanges", "useable_environment_list_url", "process_log", "model_version_export_logs", "relationship", "_", "username_or_email", "span_regex", "error_message", "name", "message", "get_default_spark_settings", "r", "max_execution_slot", "logs", "model_version_export_status", "raw_stdout", "validate_on_demand_spark_cluster_properties", "validate_is_external_volume_mounts_supported", "model_version_export", "required_keys", "poll_start", "unpublishRunningApps", "default_spark_setting_url", "response", "supported_types", "description", "project_create", "isDirect", "stdout_msg", "runs_status", "validate_is_on_demand_spark_supported", "api_key", "runs_stdout", "endpoint_state", "collaborators_add", "_configure_logging", "master_hardware_tier_id", "files_upload", "run_id", "model_version_publish", "executor_storage", "job_stop", "returns", "_app_id", "html_start_tags", "projects_list", "_validate_hardware_tier_name", "_validate_environment_id", "job_start_blocking", "app_id", "log", "validate_distributed_compute_cluster_properties", "job", "users", "job_start", "files_list", "user_id", "hardwareTierId", "publishApiEndpoint", "count", "runId", "data", "file", "title", "_host", "html_end_tags", "__app_get_status", "key", "model_versions_get", "endpoint_unpublish", "_put_file", "spark_cluster_properties", "logging_level", "model_publish", "host", "deployment_version", "runs_start", "poll_freq", "default_executor_hardware_tier", "max_poll_time", "get_hardware_tier_id_from_name", "current_retry_count", "show_completed", "project_archive", "app", "environments_list", "command", "request", "__init__", "requires_at_least", "collaborators_remove", "get_job_status", "authenticate", "key_required", "job_id", "get_run_log", "_validate_commit_id", "elapsed_time", "_get", "includeSetupLog", "files_to_exclude", "auth_token", "__app_create", "validate_spark_executor_count", "status", "_useable_environments_list", "retry_count", "default_spark_setting", "model_version_sagemaker_export", "text", "_validate_hardware_tier_id", "valid_relationships", "blobs_get", "_validate_blob_key", "commits_list", "regex", "run_response", "fork_project", "validations", "model_id", "app_unpublish", "project_name", "payload", "_project_id", "required_key_overrides", "run_info", "executor_count", "environment_id", "get_user_id", "domino_token_file", "all_owned_projects", "_validate_information_data_type", "unit", "runs_start_blocking", "throw_if_information_invalid", "collaborators_get", "get_run_info", "job_runtime_execution_details", "_csrf_no_check_header", "url", "Domino", "supported_types_str", "models_list", "hardware_tiers_list", "runs_list"]}, {"author": "Mark Silverberg", "path": "setup.py", "imports": ["find_packages", "pathlib", "get_version", "setup", "re", "open", "setuptools"], "variables": ["README", "f", "HERE", "get_version", "PACKAGE_NAME", "mo", "ver"]}, {"author": "Mark Silverberg", "path": "domino/domino.py", "imports": ["_HttpRequestManager", "pprint", "logging", "ValueError", "len", "polling2", "re", "Exception", "Optional", "validate_is_on_demand_spark_supported", "bs4", "list", "requests", "time", "os", "CLUSTER_TYPE_MIN_SUPPORT", "get_job_status", "__version__", "int", "domino._version", "typing", "validate_distributed_compute_cluster_properties", "MINIMUM_EXTERNAL_VOLUME_MOUNTS_SUPPORT_DOMINO_VERSION", "BeautifulSoup", "get_auth_by_type", "get_default_spark_settings", "functools", "validate_spark_executor_count", "throw_if_information_invalid", "List", "DOMINO_LOG_LEVEL_KEY_NAME", "DOMINO_HOST_KEY_NAME", "validate_on_demand_spark_cluster_properties", "_Routes", "validate_is_external_volume_mounts_supported", "helpers", "exceptions", "str", "MINIMUM_ON_DEMAND_SPARK_CLUSTER_SUPPORT_DOMINO_VERSION", "Tuple"], "variables": ["request_payload", "app_publish", "commitId", "run_stop", "accepted_units", "validated_compute_cluster_properties", "compute_environment_id", "executor_hardware_tier_id", "path", "default_master_hardware_tier", "resolved_hardware_tier_id", "project", "function", "stdout", "query", "job_status", "self", "output_commit_id", "tier", "endpoint_publish", "owner_username", "saveChanges", "useable_environment_list_url", "process_log", "model_version_export_logs", "relationship", "_", "username_or_email", "span_regex", "error_message", "name", "message", "get_default_spark_settings", "r", "max_execution_slot", "logs", "model_version_export_status", "raw_stdout", "validate_on_demand_spark_cluster_properties", "validate_is_external_volume_mounts_supported", "model_version_export", "required_keys", "poll_start", "unpublishRunningApps", "default_spark_setting_url", "response", "supported_types", "description", "project_create", "isDirect", "stdout_msg", "runs_status", "validate_is_on_demand_spark_supported", "api_key", "runs_stdout", "endpoint_state", "collaborators_add", "_configure_logging", "master_hardware_tier_id", "files_upload", "run_id", "model_version_publish", "executor_storage", "job_stop", "returns", "_app_id", "html_start_tags", "projects_list", "_validate_hardware_tier_name", "_validate_environment_id", "job_start_blocking", "app_id", "log", "validate_distributed_compute_cluster_properties", "job", "users", "job_start", "files_list", "user_id", "hardwareTierId", "publishApiEndpoint", "count", "runId", "data", "file", "title", "_host", "html_end_tags", "__app_get_status", "key", "model_versions_get", "endpoint_unpublish", "_put_file", "spark_cluster_properties", "logging_level", "model_publish", "host", "deployment_version", "runs_start", "poll_freq", "default_executor_hardware_tier", "max_poll_time", "get_hardware_tier_id_from_name", "current_retry_count", "show_completed", "project_archive", "app", "environments_list", "command", "request", "__init__", "requires_at_least", "collaborators_remove", "get_job_status", "authenticate", "key_required", "job_id", "get_run_log", "_validate_commit_id", "elapsed_time", "_get", "includeSetupLog", "files_to_exclude", "auth_token", "__app_create", "validate_spark_executor_count", "status", "_useable_environments_list", "retry_count", "default_spark_setting", "model_version_sagemaker_export", "text", "_validate_hardware_tier_id", "valid_relationships", "blobs_get", "_validate_blob_key", "commits_list", "regex", "run_response", "fork_project", "validations", "model_id", "app_unpublish", "project_name", "payload", "_project_id", "required_key_overrides", "run_info", "executor_count", "environment_id", "get_user_id", "domino_token_file", "all_owned_projects", "_validate_information_data_type", "unit", "runs_start_blocking", "throw_if_information_invalid", "collaborators_get", "get_run_info", "job_runtime_execution_details", "_csrf_no_check_header", "url", "Domino", "supported_types_str", "models_list", "hardware_tiers_list", "runs_list"]}, {"author": "Mark Silverberg", "path": "examples/models_and_environments.py", "imports": ["domino", "list", "describe_model_versions", "len", "filter", "Domino", "print", "os"], "variables": ["domino", "published_model_id", "describe_model_versions", "global_environments", "another_model_version", "all_available_models", "chosen_environment_id", "model_versions", "all_available_environments", "published_model"]}, {"author": "Mark Silverberg", "path": "setup.py", "imports": ["find_packages", "pathlib", "get_version", "setup", "re", "open", "setuptools"], "variables": ["README", "f", "HERE", "get_version", "PACKAGE_NAME", "mo", "ver"]}, {"author": "Mark Silverberg", "path": "domino/domino.py", "imports": ["_HttpRequestManager", "pprint", "logging", "ValueError", "len", "polling2", "re", "Exception", "Optional", "validate_is_on_demand_spark_supported", "bs4", "list", "requests", "time", "os", "CLUSTER_TYPE_MIN_SUPPORT", "get_job_status", "__version__", "int", "domino._version", "typing", "validate_distributed_compute_cluster_properties", "MINIMUM_EXTERNAL_VOLUME_MOUNTS_SUPPORT_DOMINO_VERSION", "BeautifulSoup", "get_auth_by_type", "get_default_spark_settings", "functools", "validate_spark_executor_count", "throw_if_information_invalid", "List", "DOMINO_LOG_LEVEL_KEY_NAME", "DOMINO_HOST_KEY_NAME", "validate_on_demand_spark_cluster_properties", "_Routes", "validate_is_external_volume_mounts_supported", "helpers", "exceptions", "str", "MINIMUM_ON_DEMAND_SPARK_CLUSTER_SUPPORT_DOMINO_VERSION", "Tuple"], "variables": ["request_payload", "app_publish", "commitId", "run_stop", "accepted_units", "validated_compute_cluster_properties", "compute_environment_id", "executor_hardware_tier_id", "path", "default_master_hardware_tier", "resolved_hardware_tier_id", "project", "function", "stdout", "query", "job_status", "self", "output_commit_id", "tier", "endpoint_publish", "owner_username", "saveChanges", "useable_environment_list_url", "process_log", "model_version_export_logs", "relationship", "_", "username_or_email", "span_regex", "error_message", "name", "message", "get_default_spark_settings", "r", "max_execution_slot", "logs", "model_version_export_status", "raw_stdout", "validate_on_demand_spark_cluster_properties", "validate_is_external_volume_mounts_supported", "model_version_export", "required_keys", "poll_start", "unpublishRunningApps", "default_spark_setting_url", "response", "supported_types", "description", "project_create", "isDirect", "stdout_msg", "runs_status", "validate_is_on_demand_spark_supported", "api_key", "runs_stdout", "endpoint_state", "collaborators_add", "_configure_logging", "master_hardware_tier_id", "files_upload", "run_id", "model_version_publish", "executor_storage", "job_stop", "returns", "_app_id", "html_start_tags", "projects_list", "_validate_hardware_tier_name", "_validate_environment_id", "job_start_blocking", "app_id", "log", "validate_distributed_compute_cluster_properties", "job", "users", "job_start", "files_list", "user_id", "hardwareTierId", "publishApiEndpoint", "count", "runId", "data", "file", "title", "_host", "html_end_tags", "__app_get_status", "key", "model_versions_get", "endpoint_unpublish", "_put_file", "spark_cluster_properties", "logging_level", "model_publish", "host", "deployment_version", "runs_start", "poll_freq", "default_executor_hardware_tier", "max_poll_time", "get_hardware_tier_id_from_name", "current_retry_count", "show_completed", "project_archive", "app", "environments_list", "command", "request", "__init__", "requires_at_least", "collaborators_remove", "get_job_status", "authenticate", "key_required", "job_id", "get_run_log", "_validate_commit_id", "elapsed_time", "_get", "includeSetupLog", "files_to_exclude", "auth_token", "__app_create", "validate_spark_executor_count", "status", "_useable_environments_list", "retry_count", "default_spark_setting", "model_version_sagemaker_export", "text", "_validate_hardware_tier_id", "valid_relationships", "blobs_get", "_validate_blob_key", "commits_list", "regex", "run_response", "fork_project", "validations", "model_id", "app_unpublish", "project_name", "payload", "_project_id", "required_key_overrides", "run_info", "executor_count", "environment_id", "get_user_id", "domino_token_file", "all_owned_projects", "_validate_information_data_type", "unit", "runs_start_blocking", "throw_if_information_invalid", "collaborators_get", "get_run_info", "job_runtime_execution_details", "_csrf_no_check_header", "url", "Domino", "supported_types_str", "models_list", "hardware_tiers_list", "runs_list"]}, {"author": "Mark Silverberg", "path": "setup.py", "imports": ["find_packages", "pathlib", "get_version", "setup", "re", "open", "setuptools"], "variables": ["README", "f", "HERE", "get_version", "PACKAGE_NAME", "mo", "ver"]}, {"author": "macrogers", "path": "domino/domino.py", "imports": ["_HttpRequestManager", "pprint", "logging", "ValueError", "len", "polling2", "re", "Exception", "Optional", "validate_is_on_demand_spark_supported", "bs4", "list", "requests", "time", "os", "CLUSTER_TYPE_MIN_SUPPORT", "get_job_status", "__version__", "int", "domino._version", "typing", "validate_distributed_compute_cluster_properties", "MINIMUM_EXTERNAL_VOLUME_MOUNTS_SUPPORT_DOMINO_VERSION", "BeautifulSoup", "get_auth_by_type", "get_default_spark_settings", "functools", "validate_spark_executor_count", "throw_if_information_invalid", "List", "DOMINO_LOG_LEVEL_KEY_NAME", "DOMINO_HOST_KEY_NAME", "validate_on_demand_spark_cluster_properties", "_Routes", "validate_is_external_volume_mounts_supported", "helpers", "exceptions", "str", "MINIMUM_ON_DEMAND_SPARK_CLUSTER_SUPPORT_DOMINO_VERSION", "Tuple"], "variables": ["request_payload", "app_publish", "commitId", "run_stop", "accepted_units", "validated_compute_cluster_properties", "compute_environment_id", "executor_hardware_tier_id", "path", "default_master_hardware_tier", "resolved_hardware_tier_id", "project", "function", "stdout", "query", "job_status", "self", "output_commit_id", "tier", "endpoint_publish", "owner_username", "saveChanges", "useable_environment_list_url", "process_log", "model_version_export_logs", "relationship", "_", "username_or_email", "span_regex", "error_message", "name", "message", "get_default_spark_settings", "r", "max_execution_slot", "logs", "model_version_export_status", "raw_stdout", "validate_on_demand_spark_cluster_properties", "validate_is_external_volume_mounts_supported", "model_version_export", "required_keys", "poll_start", "unpublishRunningApps", "default_spark_setting_url", "response", "supported_types", "description", "project_create", "isDirect", "stdout_msg", "runs_status", "validate_is_on_demand_spark_supported", "api_key", "runs_stdout", "endpoint_state", "collaborators_add", "_configure_logging", "master_hardware_tier_id", "files_upload", "run_id", "model_version_publish", "executor_storage", "job_stop", "returns", "_app_id", "html_start_tags", "projects_list", "_validate_hardware_tier_name", "_validate_environment_id", "job_start_blocking", "app_id", "log", "validate_distributed_compute_cluster_properties", "job", "users", "job_start", "files_list", "user_id", "hardwareTierId", "publishApiEndpoint", "count", "runId", "data", "file", "title", "_host", "html_end_tags", "__app_get_status", "key", "model_versions_get", "endpoint_unpublish", "_put_file", "spark_cluster_properties", "logging_level", "model_publish", "host", "deployment_version", "runs_start", "poll_freq", "default_executor_hardware_tier", "max_poll_time", "get_hardware_tier_id_from_name", "current_retry_count", "show_completed", "project_archive", "app", "environments_list", "command", "request", "__init__", "requires_at_least", "collaborators_remove", "get_job_status", "authenticate", "key_required", "job_id", "get_run_log", "_validate_commit_id", "elapsed_time", "_get", "includeSetupLog", "files_to_exclude", "auth_token", "__app_create", "validate_spark_executor_count", "status", "_useable_environments_list", "retry_count", "default_spark_setting", "model_version_sagemaker_export", "text", "_validate_hardware_tier_id", "valid_relationships", "blobs_get", "_validate_blob_key", "commits_list", "regex", "run_response", "fork_project", "validations", "model_id", "app_unpublish", "project_name", "payload", "_project_id", "required_key_overrides", "run_info", "executor_count", "environment_id", "get_user_id", "domino_token_file", "all_owned_projects", "_validate_information_data_type", "unit", "runs_start_blocking", "throw_if_information_invalid", "collaborators_get", "get_run_info", "job_runtime_execution_details", "_csrf_no_check_header", "url", "Domino", "supported_types_str", "models_list", "hardware_tiers_list", "runs_list"]}, {"author": "macrogers", "path": "domino/domino.py", "imports": ["_HttpRequestManager", "pprint", "logging", "ValueError", "len", "polling2", "re", "Exception", "Optional", "validate_is_on_demand_spark_supported", "bs4", "list", "requests", "time", "os", "CLUSTER_TYPE_MIN_SUPPORT", "get_job_status", "__version__", "int", "domino._version", "typing", "validate_distributed_compute_cluster_properties", "MINIMUM_EXTERNAL_VOLUME_MOUNTS_SUPPORT_DOMINO_VERSION", "BeautifulSoup", "get_auth_by_type", "get_default_spark_settings", "functools", "validate_spark_executor_count", "throw_if_information_invalid", "List", "DOMINO_LOG_LEVEL_KEY_NAME", "DOMINO_HOST_KEY_NAME", "validate_on_demand_spark_cluster_properties", "_Routes", "validate_is_external_volume_mounts_supported", "helpers", "exceptions", "str", "MINIMUM_ON_DEMAND_SPARK_CLUSTER_SUPPORT_DOMINO_VERSION", "Tuple"], "variables": ["request_payload", "app_publish", "commitId", "run_stop", "accepted_units", "validated_compute_cluster_properties", "compute_environment_id", "executor_hardware_tier_id", "path", "default_master_hardware_tier", "resolved_hardware_tier_id", "project", "function", "stdout", "query", "job_status", "self", "output_commit_id", "tier", "endpoint_publish", "owner_username", "saveChanges", "useable_environment_list_url", "process_log", "model_version_export_logs", "relationship", "_", "username_or_email", "span_regex", "error_message", "name", "message", "get_default_spark_settings", "r", "max_execution_slot", "logs", "model_version_export_status", "raw_stdout", "validate_on_demand_spark_cluster_properties", "validate_is_external_volume_mounts_supported", "model_version_export", "required_keys", "poll_start", "unpublishRunningApps", "default_spark_setting_url", "response", "supported_types", "description", "project_create", "isDirect", "stdout_msg", "runs_status", "validate_is_on_demand_spark_supported", "api_key", "runs_stdout", "endpoint_state", "collaborators_add", "_configure_logging", "master_hardware_tier_id", "files_upload", "run_id", "model_version_publish", "executor_storage", "job_stop", "returns", "_app_id", "html_start_tags", "projects_list", "_validate_hardware_tier_name", "_validate_environment_id", "job_start_blocking", "app_id", "log", "validate_distributed_compute_cluster_properties", "job", "users", "job_start", "files_list", "user_id", "hardwareTierId", "publishApiEndpoint", "count", "runId", "data", "file", "title", "_host", "html_end_tags", "__app_get_status", "key", "model_versions_get", "endpoint_unpublish", "_put_file", "spark_cluster_properties", "logging_level", "model_publish", "host", "deployment_version", "runs_start", "poll_freq", "default_executor_hardware_tier", "max_poll_time", "get_hardware_tier_id_from_name", "current_retry_count", "show_completed", "project_archive", "app", "environments_list", "command", "request", "__init__", "requires_at_least", "collaborators_remove", "get_job_status", "authenticate", "key_required", "job_id", "get_run_log", "_validate_commit_id", "elapsed_time", "_get", "includeSetupLog", "files_to_exclude", "auth_token", "__app_create", "validate_spark_executor_count", "status", "_useable_environments_list", "retry_count", "default_spark_setting", "model_version_sagemaker_export", "text", "_validate_hardware_tier_id", "valid_relationships", "blobs_get", "_validate_blob_key", "commits_list", "regex", "run_response", "fork_project", "validations", "model_id", "app_unpublish", "project_name", "payload", "_project_id", "required_key_overrides", "run_info", "executor_count", "environment_id", "get_user_id", "domino_token_file", "all_owned_projects", "_validate_information_data_type", "unit", "runs_start_blocking", "throw_if_information_invalid", "collaborators_get", "get_run_info", "job_runtime_execution_details", "_csrf_no_check_header", "url", "Domino", "supported_types_str", "models_list", "hardware_tiers_list", "runs_list"]}, {"author": "macrogers", "path": "domino/domino.py", "imports": ["_HttpRequestManager", "pprint", "logging", "ValueError", "len", "polling2", "re", "Exception", "Optional", "validate_is_on_demand_spark_supported", "bs4", "list", "requests", "time", "os", "CLUSTER_TYPE_MIN_SUPPORT", "get_job_status", "__version__", "int", "domino._version", "typing", "validate_distributed_compute_cluster_properties", "MINIMUM_EXTERNAL_VOLUME_MOUNTS_SUPPORT_DOMINO_VERSION", "BeautifulSoup", "get_auth_by_type", "get_default_spark_settings", "functools", "validate_spark_executor_count", "throw_if_information_invalid", "List", "DOMINO_LOG_LEVEL_KEY_NAME", "DOMINO_HOST_KEY_NAME", "validate_on_demand_spark_cluster_properties", "_Routes", "validate_is_external_volume_mounts_supported", "helpers", "exceptions", "str", "MINIMUM_ON_DEMAND_SPARK_CLUSTER_SUPPORT_DOMINO_VERSION", "Tuple"], "variables": ["request_payload", "app_publish", "commitId", "run_stop", "accepted_units", "validated_compute_cluster_properties", "compute_environment_id", "executor_hardware_tier_id", "path", "default_master_hardware_tier", "resolved_hardware_tier_id", "project", "function", "stdout", "query", "job_status", "self", "output_commit_id", "tier", "endpoint_publish", "owner_username", "saveChanges", "useable_environment_list_url", "process_log", "model_version_export_logs", "relationship", "_", "username_or_email", "span_regex", "error_message", "name", "message", "get_default_spark_settings", "r", "max_execution_slot", "logs", "model_version_export_status", "raw_stdout", "validate_on_demand_spark_cluster_properties", "validate_is_external_volume_mounts_supported", "model_version_export", "required_keys", "poll_start", "unpublishRunningApps", "default_spark_setting_url", "response", "supported_types", "description", "project_create", "isDirect", "stdout_msg", "runs_status", "validate_is_on_demand_spark_supported", "api_key", "runs_stdout", "endpoint_state", "collaborators_add", "_configure_logging", "master_hardware_tier_id", "files_upload", "run_id", "model_version_publish", "executor_storage", "job_stop", "returns", "_app_id", "html_start_tags", "projects_list", "_validate_hardware_tier_name", "_validate_environment_id", "job_start_blocking", "app_id", "log", "validate_distributed_compute_cluster_properties", "job", "users", "job_start", "files_list", "user_id", "hardwareTierId", "publishApiEndpoint", "count", "runId", "data", "file", "title", "_host", "html_end_tags", "__app_get_status", "key", "model_versions_get", "endpoint_unpublish", "_put_file", "spark_cluster_properties", "logging_level", "model_publish", "host", "deployment_version", "runs_start", "poll_freq", "default_executor_hardware_tier", "max_poll_time", "get_hardware_tier_id_from_name", "current_retry_count", "show_completed", "project_archive", "app", "environments_list", "command", "request", "__init__", "requires_at_least", "collaborators_remove", "get_job_status", "authenticate", "key_required", "job_id", "get_run_log", "_validate_commit_id", "elapsed_time", "_get", "includeSetupLog", "files_to_exclude", "auth_token", "__app_create", "validate_spark_executor_count", "status", "_useable_environments_list", "retry_count", "default_spark_setting", "model_version_sagemaker_export", "text", "_validate_hardware_tier_id", "valid_relationships", "blobs_get", "_validate_blob_key", "commits_list", "regex", "run_response", "fork_project", "validations", "model_id", "app_unpublish", "project_name", "payload", "_project_id", "required_key_overrides", "run_info", "executor_count", "environment_id", "get_user_id", "domino_token_file", "all_owned_projects", "_validate_information_data_type", "unit", "runs_start_blocking", "throw_if_information_invalid", "collaborators_get", "get_run_info", "job_runtime_execution_details", "_csrf_no_check_header", "url", "Domino", "supported_types_str", "models_list", "hardware_tiers_list", "runs_list"]}, {"author": "macrogers", "path": "domino/domino.py", "imports": ["_HttpRequestManager", "pprint", "logging", "ValueError", "len", "polling2", "re", "Exception", "Optional", "validate_is_on_demand_spark_supported", "bs4", "list", "requests", "time", "os", "CLUSTER_TYPE_MIN_SUPPORT", "get_job_status", "__version__", "int", "domino._version", "typing", "validate_distributed_compute_cluster_properties", "MINIMUM_EXTERNAL_VOLUME_MOUNTS_SUPPORT_DOMINO_VERSION", "BeautifulSoup", "get_auth_by_type", "get_default_spark_settings", "functools", "validate_spark_executor_count", "throw_if_information_invalid", "List", "DOMINO_LOG_LEVEL_KEY_NAME", "DOMINO_HOST_KEY_NAME", "validate_on_demand_spark_cluster_properties", "_Routes", "validate_is_external_volume_mounts_supported", "helpers", "exceptions", "str", "MINIMUM_ON_DEMAND_SPARK_CLUSTER_SUPPORT_DOMINO_VERSION", "Tuple"], "variables": ["request_payload", "app_publish", "commitId", "run_stop", "accepted_units", "validated_compute_cluster_properties", "compute_environment_id", "executor_hardware_tier_id", "path", "default_master_hardware_tier", "resolved_hardware_tier_id", "project", "function", "stdout", "query", "job_status", "self", "output_commit_id", "tier", "endpoint_publish", "owner_username", "saveChanges", "useable_environment_list_url", "process_log", "model_version_export_logs", "relationship", "_", "username_or_email", "span_regex", "error_message", "name", "message", "get_default_spark_settings", "r", "max_execution_slot", "logs", "model_version_export_status", "raw_stdout", "validate_on_demand_spark_cluster_properties", "validate_is_external_volume_mounts_supported", "model_version_export", "required_keys", "poll_start", "unpublishRunningApps", "default_spark_setting_url", "response", "supported_types", "description", "project_create", "isDirect", "stdout_msg", "runs_status", "validate_is_on_demand_spark_supported", "api_key", "runs_stdout", "endpoint_state", "collaborators_add", "_configure_logging", "master_hardware_tier_id", "files_upload", "run_id", "model_version_publish", "executor_storage", "job_stop", "returns", "_app_id", "html_start_tags", "projects_list", "_validate_hardware_tier_name", "_validate_environment_id", "job_start_blocking", "app_id", "log", "validate_distributed_compute_cluster_properties", "job", "users", "job_start", "files_list", "user_id", "hardwareTierId", "publishApiEndpoint", "count", "runId", "data", "file", "title", "_host", "html_end_tags", "__app_get_status", "key", "model_versions_get", "endpoint_unpublish", "_put_file", "spark_cluster_properties", "logging_level", "model_publish", "host", "deployment_version", "runs_start", "poll_freq", "default_executor_hardware_tier", "max_poll_time", "get_hardware_tier_id_from_name", "current_retry_count", "show_completed", "project_archive", "app", "environments_list", "command", "request", "__init__", "requires_at_least", "collaborators_remove", "get_job_status", "authenticate", "key_required", "job_id", "get_run_log", "_validate_commit_id", "elapsed_time", "_get", "includeSetupLog", "files_to_exclude", "auth_token", "__app_create", "validate_spark_executor_count", "status", "_useable_environments_list", "retry_count", "default_spark_setting", "model_version_sagemaker_export", "text", "_validate_hardware_tier_id", "valid_relationships", "blobs_get", "_validate_blob_key", "commits_list", "regex", "run_response", "fork_project", "validations", "model_id", "app_unpublish", "project_name", "payload", "_project_id", "required_key_overrides", "run_info", "executor_count", "environment_id", "get_user_id", "domino_token_file", "all_owned_projects", "_validate_information_data_type", "unit", "runs_start_blocking", "throw_if_information_invalid", "collaborators_get", "get_run_info", "job_runtime_execution_details", "_csrf_no_check_header", "url", "Domino", "supported_types_str", "models_list", "hardware_tiers_list", "runs_list"]}, {"author": "macrogers", "path": "domino/domino.py", "imports": ["_HttpRequestManager", "pprint", "logging", "ValueError", "len", "polling2", "re", "Exception", "Optional", "validate_is_on_demand_spark_supported", "bs4", "list", "requests", "time", "os", "CLUSTER_TYPE_MIN_SUPPORT", "get_job_status", "__version__", "int", "domino._version", "typing", "validate_distributed_compute_cluster_properties", "MINIMUM_EXTERNAL_VOLUME_MOUNTS_SUPPORT_DOMINO_VERSION", "BeautifulSoup", "get_auth_by_type", "get_default_spark_settings", "functools", "validate_spark_executor_count", "throw_if_information_invalid", "List", "DOMINO_LOG_LEVEL_KEY_NAME", "DOMINO_HOST_KEY_NAME", "validate_on_demand_spark_cluster_properties", "_Routes", "validate_is_external_volume_mounts_supported", "helpers", "exceptions", "str", "MINIMUM_ON_DEMAND_SPARK_CLUSTER_SUPPORT_DOMINO_VERSION", "Tuple"], "variables": ["request_payload", "app_publish", "commitId", "run_stop", "accepted_units", "validated_compute_cluster_properties", "compute_environment_id", "executor_hardware_tier_id", "path", "default_master_hardware_tier", "resolved_hardware_tier_id", "project", "function", "stdout", "query", "job_status", "self", "output_commit_id", "tier", "endpoint_publish", "owner_username", "saveChanges", "useable_environment_list_url", "process_log", "model_version_export_logs", "relationship", "_", "username_or_email", "span_regex", "error_message", "name", "message", "get_default_spark_settings", "r", "max_execution_slot", "logs", "model_version_export_status", "raw_stdout", "validate_on_demand_spark_cluster_properties", "validate_is_external_volume_mounts_supported", "model_version_export", "required_keys", "poll_start", "unpublishRunningApps", "default_spark_setting_url", "response", "supported_types", "description", "project_create", "isDirect", "stdout_msg", "runs_status", "validate_is_on_demand_spark_supported", "api_key", "runs_stdout", "endpoint_state", "collaborators_add", "_configure_logging", "master_hardware_tier_id", "files_upload", "run_id", "model_version_publish", "executor_storage", "job_stop", "returns", "_app_id", "html_start_tags", "projects_list", "_validate_hardware_tier_name", "_validate_environment_id", "job_start_blocking", "app_id", "log", "validate_distributed_compute_cluster_properties", "job", "users", "job_start", "files_list", "user_id", "hardwareTierId", "publishApiEndpoint", "count", "runId", "data", "file", "title", "_host", "html_end_tags", "__app_get_status", "key", "model_versions_get", "endpoint_unpublish", "_put_file", "spark_cluster_properties", "logging_level", "model_publish", "host", "deployment_version", "runs_start", "poll_freq", "default_executor_hardware_tier", "max_poll_time", "get_hardware_tier_id_from_name", "current_retry_count", "show_completed", "project_archive", "app", "environments_list", "command", "request", "__init__", "requires_at_least", "collaborators_remove", "get_job_status", "authenticate", "key_required", "job_id", "get_run_log", "_validate_commit_id", "elapsed_time", "_get", "includeSetupLog", "files_to_exclude", "auth_token", "__app_create", "validate_spark_executor_count", "status", "_useable_environments_list", "retry_count", "default_spark_setting", "model_version_sagemaker_export", "text", "_validate_hardware_tier_id", "valid_relationships", "blobs_get", "_validate_blob_key", "commits_list", "regex", "run_response", "fork_project", "validations", "model_id", "app_unpublish", "project_name", "payload", "_project_id", "required_key_overrides", "run_info", "executor_count", "environment_id", "get_user_id", "domino_token_file", "all_owned_projects", "_validate_information_data_type", "unit", "runs_start_blocking", "throw_if_information_invalid", "collaborators_get", "get_run_info", "job_runtime_execution_details", "_csrf_no_check_header", "url", "Domino", "supported_types_str", "models_list", "hardware_tiers_list", "runs_list"]}]
[{"author": "Stevan Pejak", "path": "sevenbridges/__init__.py", "imports": ["DRSImportBulk", "ServiceUnavailable", "Task", "Conflict", "Member", "AsyncJob", "Import", "MethodNotAllowed", "sevenbridges.models.async_jobs", "ExecutionDetailsInvalidTaskType", "ServerError", "ResourceNotModified", "VolumeType", "sevenbridges.models.user", "AutomationStatus", "sevenbridges.models.compound.volumes.volume_object", "Project", "Invoice", "BillingGroup", "sevenbridges.models.bulk", "sevenbridges.models.app", "AutomationPackage", "sevenbridges.models.dataset", "ImportExportState", "PartSize", "DivisionRole", "ValidationError", "Endpoints", "sevenbridges.models.automation", "Marker", "Dataset", "NotFound", "sevenbridges.errors", "logging", "sevenbridges.models.drs_import", "Division", "TaskValidationError", "AutomationRun", "sevenbridges.models.endpoints", "VolumeObject", "Config", "sevenbridges.models.storage_export", "TaskStatus", "sevenbridges.models.team", "__version__", "TeamMember", "SbgError", "Volume", "TransferState", "App", "sevenbridges.api", "AsyncFileOperations", "AsyncJobStates", "Export", "BulkRecord", "AppRawFormat", "sevenbridges.version", "BadRequest", "sevenbridges.models.project", "sevenbridges.models.volume", "Permissions", "sevenbridges.models.task", "Unauthorized", "VolumeAccessMode", "File", "Forbidden", "Team", "AutomationMember", "LocalFileAlreadyExists", "sevenbridges.models.file", "User", "sevenbridges.models.member", "sevenbridges.config", "RequestTimeout", "Automation", "sevenbridges.models.division", "sevenbridges.models.storage_import", "PaginationError", "ReadOnlyPropertyError", "sevenbridges.models.enums", "FileStorageType", "AutomationRunActions", "AppCopyStrategy", "TooManyRequests", "sevenbridges.models.invoice", "Api", "sevenbridges.models.marker", "ssl", "sevenbridges.models.billing_group"], "variables": ["required_ssl_version", "__all__"]}, {"author": "Stevan Pejak", "path": "sevenbridges/models/billing_group.py", "imports": ["BillingGroupAnalysisBreakdown", "type", "sevenbridges.models.compound.price", "CompoundField", "Price", "BooleanField", "sevenbridges.meta.fields", "HrefField", "sevenbridges.meta.resource", "super", "BillingGroupEgressBreakdown", "Resource", "UuidField", "sevenbridges.models.billing_storage_breakdown", "StringField", "sevenbridges.models.billing_analysis_breakdown", "BillingGroupStorageBreakdown", "sevenbridges.models.billing_egress_breakdown"], "variables": ["date_from", "offset", "analysis_breakdown", "__eq__", "cls", "type", "limit", "date_to", "_URL", "query", "BillingGroup", "invoice_id", "self", "egress_breakdown", "storage_breakdown", "owner", "name", "pending", "fields", "id", "disabled", "__str__", "balance", "api", "href"]}, {"author": "Stevan Pejak", "path": "sevenbridges/models/volume.py", "imports": ["sevenbridges.models.member", "sevenbridges.errors", "logging", "CompoundField", "sevenbridges.meta.fields", "sevenbridges.decorators", "HrefField", "Member", "sevenbridges.models.link", "sevenbridges.meta.transformer", "sevenbridges.models.compound.volumes.service", "isinstance", "VolumeObject", "type", "ResourceNotModified", "VolumeType", "VolumePrefix", "sevenbridges.models.compound.volumes.volume_object", "inplace_reload", "Resource", "sevenbridges.models.enums", "Transform", "super", "DateTimeField", "VolumeService", "VolumeCollection", "StringField", "Volume", "BooleanField", "Collection", "sevenbridges.models.compound.volumes.volume_prefix", "sevenbridges.meta.resource", "VolumeLink", "sevenbridges.meta.collection", "Link"], "variables": ["add_member", "remove_member", "user", "response", "description", "access_mode", "save", "offset", "create_s3_volume", "members", "member_data", "logger", "modified_on", "__eq__", "modified_data", "create_oss_volume", "get_member", "client_email", "cls", "project", "limit", "list", "team", "_URL", "created_on", "query", "param", "self", "private_key", "total", "get_volume_object_info", "configuration", "role_arn", "prefix", "bucket", "links", "properties", "state", "inplace", "objects", "add_member_team", "create_google_iam_volume", "active", "name", "service", "volume", "add_member_division", "Volume", "create_s3_volume_role_auth", "division", "id", "__str__", "create_google_volume", "secret_access_key", "prefixes", "endpoint", "access_key_id", "get_members", "get_exports", "get_imports", "data", "api", "extra", "href", "params", "external_id", "username"]}, {"author": "perica.prokic", "path": "sevenbridges/models/task.py", "imports": ["sevenbridges.errors", "logging", "CompoundField", "Task", "sevenbridges.meta.fields", "sevenbridges.decorators", "HrefField", "callback", "sevenbridges.meta.transformer", "BulkRecord", "DictField", "TaskValidationError", "isinstance", "type", "FileApiFormats", "sevenbridges.models.execution_details", "sevenbridges.models.compound.tasks.output", "Input", "BatchGroup", "inplace_reload", "sevenbridges.models.bulk", "Resource", "sevenbridges.models.app", "sevenbridges.models.enums", "sevenbridges.models.compound.tasks.execution_status", "time", "Transform", "TaskStatus", "BatchBy", "File", "ExecutionStatus", "super", "UuidField", "DateTimeField", "dict", "StringField", "SbgError", "ExecutionDetails", "sevenbridges.models.compound.tasks.batch_by", "Output", "sevenbridges.models.compound.price", "Price", "BooleanField", "sevenbridges.meta.resource", "sevenbridges.models.compound.tasks.input", "App", "sevenbridges.models.file", "sevenbridges.models.compound.tasks.batch_group"], "variables": ["task_data", "started_from", "Task", "batch", "abort", "project", "limit", "created_time", "inputs", "query", "self", "task_meta", "serialized_es_mapping", "execution_settings", "name", "created_to", "id", "task_request_data", "resource", "created_from", "instance_type", "api", "task_ids", "response", "description", "batch_by", "offset", "interruptible", "use_interruptible_instances", "logger", "ended_from", "tasks", "get_batch_children", "wait", "started_to", "_URL", "end_time", "order_by", "task", "app_id", "_to_api_file_format", "start_time", "order", "_serialize_inputs", "use_memoization", "outputs", "revision", "created_task", "return_value", "origin", "params", "data", "href", "save", "batch_group", "type", "app", "ended_to", "use_elastic_disc", "serialized_es", "get_execution_details", "__str__", "batch_input", "bulk_get", "status", "task_inputs", "max_parallel_instances", "warnings", "run", "modified_data", "clone", "__eq__", "parent", "price", "errors", "cls", "executed_by", "_serialize_execution_settings", "create", "inplace", "disable_batch", "execution_status", "TaskBulkRecord", "created_by", "extra"]}, {"author": "perica.prokic", "path": "sevenbridges/models/task.py", "imports": ["sevenbridges.errors", "logging", "CompoundField", "Task", "sevenbridges.meta.fields", "sevenbridges.decorators", "HrefField", "callback", "sevenbridges.meta.transformer", "BulkRecord", "DictField", "TaskValidationError", "isinstance", "type", "FileApiFormats", "sevenbridges.models.execution_details", "sevenbridges.models.compound.tasks.output", "Input", "BatchGroup", "inplace_reload", "sevenbridges.models.bulk", "Resource", "sevenbridges.models.app", "sevenbridges.models.enums", "sevenbridges.models.compound.tasks.execution_status", "time", "Transform", "TaskStatus", "BatchBy", "File", "ExecutionStatus", "super", "UuidField", "DateTimeField", "dict", "StringField", "SbgError", "ExecutionDetails", "sevenbridges.models.compound.tasks.batch_by", "Output", "sevenbridges.models.compound.price", "Price", "BooleanField", "sevenbridges.meta.resource", "sevenbridges.models.compound.tasks.input", "App", "sevenbridges.models.file", "sevenbridges.models.compound.tasks.batch_group"], "variables": ["task_data", "started_from", "Task", "batch", "abort", "project", "limit", "created_time", "inputs", "query", "self", "task_meta", "serialized_es_mapping", "execution_settings", "name", "created_to", "id", "task_request_data", "resource", "created_from", "instance_type", "api", "task_ids", "response", "description", "batch_by", "offset", "interruptible", "use_interruptible_instances", "logger", "ended_from", "tasks", "get_batch_children", "wait", "started_to", "_URL", "end_time", "order_by", "task", "app_id", "_to_api_file_format", "start_time", "order", "_serialize_inputs", "use_memoization", "outputs", "revision", "created_task", "return_value", "origin", "params", "data", "href", "save", "batch_group", "type", "app", "ended_to", "use_elastic_disc", "serialized_es", "get_execution_details", "__str__", "batch_input", "bulk_get", "status", "task_inputs", "max_parallel_instances", "warnings", "run", "modified_data", "clone", "__eq__", "parent", "price", "errors", "cls", "executed_by", "_serialize_execution_settings", "create", "inplace", "disable_batch", "execution_status", "TaskBulkRecord", "created_by", "extra"]}, {"author": "perica.prokic", "path": "sevenbridges/models/task.py", "imports": ["sevenbridges.errors", "logging", "CompoundField", "Task", "sevenbridges.meta.fields", "sevenbridges.decorators", "HrefField", "callback", "sevenbridges.meta.transformer", "BulkRecord", "DictField", "TaskValidationError", "isinstance", "type", "FileApiFormats", "sevenbridges.models.execution_details", "sevenbridges.models.compound.tasks.output", "Input", "BatchGroup", "inplace_reload", "sevenbridges.models.bulk", "Resource", "sevenbridges.models.app", "sevenbridges.models.enums", "sevenbridges.models.compound.tasks.execution_status", "time", "Transform", "TaskStatus", "BatchBy", "File", "ExecutionStatus", "super", "UuidField", "DateTimeField", "dict", "StringField", "SbgError", "ExecutionDetails", "sevenbridges.models.compound.tasks.batch_by", "Output", "sevenbridges.models.compound.price", "Price", "BooleanField", "sevenbridges.meta.resource", "sevenbridges.models.compound.tasks.input", "App", "sevenbridges.models.file", "sevenbridges.models.compound.tasks.batch_group"], "variables": ["task_data", "started_from", "Task", "batch", "abort", "project", "limit", "created_time", "inputs", "query", "self", "task_meta", "serialized_es_mapping", "execution_settings", "name", "created_to", "id", "task_request_data", "resource", "created_from", "instance_type", "api", "task_ids", "response", "description", "batch_by", "offset", "interruptible", "use_interruptible_instances", "logger", "ended_from", "tasks", "get_batch_children", "wait", "started_to", "_URL", "end_time", "order_by", "task", "app_id", "_to_api_file_format", "start_time", "order", "_serialize_inputs", "use_memoization", "outputs", "revision", "created_task", "return_value", "origin", "params", "data", "href", "save", "batch_group", "type", "app", "ended_to", "use_elastic_disc", "serialized_es", "get_execution_details", "__str__", "batch_input", "bulk_get", "status", "task_inputs", "max_parallel_instances", "warnings", "run", "modified_data", "clone", "__eq__", "parent", "price", "errors", "cls", "executed_by", "_serialize_execution_settings", "create", "inplace", "disable_batch", "execution_status", "TaskBulkRecord", "created_by", "extra"]}, {"author": "perica.prokic", "path": "sevenbridges/__init__.py", "imports": ["DRSImportBulk", "ServiceUnavailable", "Task", "Conflict", "Member", "AsyncJob", "Import", "MethodNotAllowed", "sevenbridges.models.async_jobs", "ExecutionDetailsInvalidTaskType", "ServerError", "ResourceNotModified", "VolumeType", "sevenbridges.models.user", "AutomationStatus", "sevenbridges.models.compound.volumes.volume_object", "Project", "Invoice", "BillingGroup", "sevenbridges.models.bulk", "sevenbridges.models.app", "AutomationPackage", "sevenbridges.models.dataset", "ImportExportState", "PartSize", "DivisionRole", "ValidationError", "Endpoints", "sevenbridges.models.automation", "Marker", "Dataset", "NotFound", "sevenbridges.errors", "logging", "sevenbridges.models.drs_import", "Division", "TaskValidationError", "AutomationRun", "sevenbridges.models.endpoints", "VolumeObject", "Config", "sevenbridges.models.storage_export", "TaskStatus", "sevenbridges.models.team", "__version__", "TeamMember", "SbgError", "Volume", "TransferState", "App", "sevenbridges.api", "AsyncFileOperations", "AsyncJobStates", "Export", "BulkRecord", "AppRawFormat", "sevenbridges.version", "BadRequest", "sevenbridges.models.project", "sevenbridges.models.volume", "Permissions", "sevenbridges.models.task", "Unauthorized", "VolumeAccessMode", "File", "Forbidden", "Team", "AutomationMember", "LocalFileAlreadyExists", "sevenbridges.models.file", "User", "sevenbridges.models.member", "sevenbridges.config", "RequestTimeout", "Automation", "sevenbridges.models.division", "sevenbridges.models.storage_import", "PaginationError", "ReadOnlyPropertyError", "sevenbridges.models.enums", "FileStorageType", "AutomationRunActions", "AppCopyStrategy", "TooManyRequests", "sevenbridges.models.invoice", "Api", "sevenbridges.models.marker", "ssl", "sevenbridges.models.billing_group"], "variables": ["required_ssl_version", "__all__"]}, {"author": "Borislav Dugosija", "path": "tests/test_automations.py", "imports": ["faker", "CodePackageUpload", "sevenbridges.errors", "set", "len", "pytest", "sevenbridges.transfer.upload", "tempfile", "SbgError", "os"], "variables": ["test_get_member", "automation_description", "test_get_run_log", "test_get_run", "run", "file_part_url", "automation_runs", "automation_id", "new_name", "test_restore_automation", "members", "automations", "package_id", "package", "upload_id", "packages", "test_remove_member", "automation_run", "test_get_members", "test_archive_package", "test_get_runs", "inputs", "test_save_member", "upload", "test_restore_package", "log_file", "test_query_runs", "test_get_run_state", "total", "temp_file", "member_username", "test_get_automation", "member", "settings", "secret_settings", "automation", "test_code_package_upload_stop", "test_modify_package", "test_query_automations", "file_name", "new_custom_url", "test_create_automation", "test_rerun", "permissions", "state", "name", "test_stop_run", "test_archive_automation", "test_create_run", "id", "test_create_project_based_automation", "runs", "expected_state", "test_update", "test_modify_automation", "billing_group", "new_billing_group", "test_get_package", "generator", "test_get_packages", "test_add_member", "username"]}, {"author": "Stevan Pejak", "path": "sevenbridges/models/volume.py", "imports": ["sevenbridges.models.member", "sevenbridges.errors", "logging", "CompoundField", "sevenbridges.meta.fields", "sevenbridges.decorators", "HrefField", "Member", "sevenbridges.models.link", "sevenbridges.meta.transformer", "sevenbridges.models.compound.volumes.service", "isinstance", "VolumeObject", "type", "ResourceNotModified", "VolumeType", "VolumePrefix", "sevenbridges.models.compound.volumes.volume_object", "inplace_reload", "Resource", "sevenbridges.models.enums", "Transform", "super", "DateTimeField", "VolumeService", "VolumeCollection", "StringField", "Volume", "BooleanField", "Collection", "sevenbridges.models.compound.volumes.volume_prefix", "sevenbridges.meta.resource", "VolumeLink", "sevenbridges.meta.collection", "Link"], "variables": ["add_member", "remove_member", "user", "response", "description", "access_mode", "save", "offset", "create_s3_volume", "members", "member_data", "logger", "modified_on", "__eq__", "modified_data", "create_oss_volume", "get_member", "client_email", "cls", "project", "limit", "list", "team", "_URL", "created_on", "query", "param", "self", "private_key", "total", "get_volume_object_info", "configuration", "role_arn", "prefix", "bucket", "links", "properties", "state", "inplace", "objects", "add_member_team", "create_google_iam_volume", "active", "name", "service", "volume", "add_member_division", "Volume", "create_s3_volume_role_auth", "division", "id", "__str__", "create_google_volume", "secret_access_key", "prefixes", "endpoint", "access_key_id", "get_members", "get_exports", "get_imports", "data", "api", "extra", "href", "params", "external_id", "username"]}, {"author": "perica.prokic", "path": "sevenbridges/__init__.py", "imports": ["DRSImportBulk", "ServiceUnavailable", "Task", "Conflict", "Member", "AsyncJob", "Import", "MethodNotAllowed", "sevenbridges.models.async_jobs", "ExecutionDetailsInvalidTaskType", "ServerError", "ResourceNotModified", "VolumeType", "sevenbridges.models.user", "AutomationStatus", "sevenbridges.models.compound.volumes.volume_object", "Project", "Invoice", "BillingGroup", "sevenbridges.models.bulk", "sevenbridges.models.app", "AutomationPackage", "sevenbridges.models.dataset", "ImportExportState", "PartSize", "DivisionRole", "ValidationError", "Endpoints", "sevenbridges.models.automation", "Marker", "Dataset", "NotFound", "sevenbridges.errors", "logging", "sevenbridges.models.drs_import", "Division", "TaskValidationError", "AutomationRun", "sevenbridges.models.endpoints", "VolumeObject", "Config", "sevenbridges.models.storage_export", "TaskStatus", "sevenbridges.models.team", "__version__", "TeamMember", "SbgError", "Volume", "TransferState", "App", "sevenbridges.api", "AsyncFileOperations", "AsyncJobStates", "Export", "BulkRecord", "AppRawFormat", "sevenbridges.version", "BadRequest", "sevenbridges.models.project", "sevenbridges.models.volume", "Permissions", "sevenbridges.models.task", "Unauthorized", "VolumeAccessMode", "File", "Forbidden", "Team", "AutomationMember", "LocalFileAlreadyExists", "sevenbridges.models.file", "User", "sevenbridges.models.member", "sevenbridges.config", "RequestTimeout", "Automation", "sevenbridges.models.division", "sevenbridges.models.storage_import", "PaginationError", "ReadOnlyPropertyError", "sevenbridges.models.enums", "FileStorageType", "AutomationRunActions", "AppCopyStrategy", "TooManyRequests", "sevenbridges.models.invoice", "Api", "sevenbridges.models.marker", "ssl", "sevenbridges.models.billing_group"], "variables": ["required_ssl_version", "__all__"]}, {"author": "perica.prokic", "path": "sevenbridges/models/compound/import_result.py", "imports": ["CompoundField", "File", "sevenbridges.meta.fields", "sevenbridges.meta.resource", "sevenbridges.models.file", "Resource", "str", "Error", "sevenbridges.models.compound.error"], "variables": ["resource", "FileImportResult", "error", "__str__"]}, {"author": "perica.prokic", "path": "sevenbridges/models/drs_import.py", "imports": ["DRSImportBulk", "sevenbridges.errors", "logging", "sevenbridges.meta.fields", "HrefField", "sevenbridges.meta.transformer", "sevenbridges.models.compound.import_result", "FileImportResult", "isinstance", "type", "Resource", "CompoundListField", "Transform", "File", "DateTimeField", "StringField", "SbgError", "set", "sevenbridges.meta.resource", "sevenbridges.models.file"], "variables": ["DRSImportBulk", "response", "files", "logger", "__eq__", "parent", "conflict_resolution", "project", "cls", "items", "cached_file_ids", "_URL", "result", "finished_on", "imports", "import_job_id", "tags", "state", "_result_files", "result_files", "id", "__str__", "bulk_submit", "bulk_get", "file_ids_to_retrieve", "data", "api", "href", "imported_file_ids", "started_on"]}, {"author": "Perica Prokic", "path": "sevenbridges/api.py", "imports": ["Actions", "DRSImportBulk", "sevenbridges.errors", "sevenbridges.models.drs_import", "Task", "Automation", "Export", "AsyncJob", "Import", "RateLimit", "sevenbridges.models.division", "RequestParameters", "sevenbridges.models.async_jobs", "Division", "requests.adapters", "AutomationRun", "sevenbridges.models.actions", "sevenbridges.models.endpoints", "ThreadPoolExecutor", "sevenbridges.models.user", "sevenbridges.models.storage_import", "sevenbridges.models.project", "Project", "Invoice", "BillingGroup", "sevenbridges.models.volume", "sevenbridges.models.app", "sevenbridges.models.enums", "AutomationPackage", "sevenbridges.models.dataset", "Dataset", "sevenbridges.models.storage_export", "sevenbridges.models.task", "concurrent.futures", "sevenbridges.models.team", "sevenbridges.models.invoice", "File", "super", "sevenbridges.models.marker", "HttpClient", "sevenbridges.http.client", "Team", "SbgError", "Volume", "Endpoints", "sevenbridges.models.automation", "Marker", "App", "sevenbridges.models.billing_group", "sevenbridges.models.file", "sevenbridges.models.rate_limit", "DEFAULT_POOLSIZE", "User"], "variables": ["drs_imports", "billing_groups", "files", "automation_runs", "proxies", "rate_limit", "teams", "tasks", "automations", "pool_connections", "max_parallel_requests", "backoff_factor", "datasets", "projects", "self", "__init__", "endpoints", "exports", "timeout", "automation_packages", "divisions", "markers", "imports", "actions", "Api", "invoices", "advance_access", "pool_block", "token", "users", "error_handlers", "debug", "apps", "volumes", "oauth_token", "url", "upload_max_workers", "retry_count", "download_max_workers", "pool_maxsize", "async_jobs", "config"]}, {"author": "Perica Prokic", "path": "sevenbridges/models/drs_import.py", "imports": ["DRSImportBulk", "sevenbridges.errors", "logging", "sevenbridges.meta.fields", "HrefField", "sevenbridges.meta.transformer", "sevenbridges.models.compound.import_result", "FileImportResult", "isinstance", "type", "Resource", "CompoundListField", "Transform", "File", "DateTimeField", "StringField", "SbgError", "set", "sevenbridges.meta.resource", "sevenbridges.models.file"], "variables": ["DRSImportBulk", "response", "files", "logger", "__eq__", "parent", "conflict_resolution", "project", "cls", "items", "cached_file_ids", "_URL", "result", "finished_on", "imports", "import_job_id", "tags", "state", "_result_files", "result_files", "id", "__str__", "bulk_submit", "bulk_get", "file_ids_to_retrieve", "data", "api", "href", "imported_file_ids", "started_on"]}, {"author": "Perica Prokic", "path": "sevenbridges/models/task.py", "imports": ["sevenbridges.errors", "logging", "CompoundField", "Task", "sevenbridges.meta.fields", "sevenbridges.decorators", "HrefField", "callback", "sevenbridges.meta.transformer", "BulkRecord", "DictField", "TaskValidationError", "isinstance", "type", "FileApiFormats", "sevenbridges.models.execution_details", "sevenbridges.models.compound.tasks.output", "Input", "BatchGroup", "inplace_reload", "sevenbridges.models.bulk", "Resource", "sevenbridges.models.app", "sevenbridges.models.enums", "sevenbridges.models.compound.tasks.execution_status", "time", "Transform", "TaskStatus", "BatchBy", "File", "ExecutionStatus", "super", "UuidField", "DateTimeField", "dict", "StringField", "SbgError", "ExecutionDetails", "sevenbridges.models.compound.tasks.batch_by", "Output", "sevenbridges.models.compound.price", "Price", "BooleanField", "sevenbridges.meta.resource", "sevenbridges.models.compound.tasks.input", "App", "sevenbridges.models.file", "sevenbridges.models.compound.tasks.batch_group"], "variables": ["task_data", "started_from", "Task", "batch", "abort", "project", "limit", "created_time", "inputs", "query", "self", "task_meta", "serialized_es_mapping", "execution_settings", "name", "created_to", "id", "task_request_data", "resource", "created_from", "instance_type", "api", "task_ids", "response", "description", "batch_by", "offset", "interruptible", "use_interruptible_instances", "logger", "ended_from", "tasks", "get_batch_children", "wait", "started_to", "_URL", "end_time", "order_by", "task", "app_id", "_to_api_file_format", "start_time", "order", "_serialize_inputs", "use_memoization", "outputs", "revision", "created_task", "return_value", "origin", "params", "data", "href", "save", "batch_group", "type", "app", "ended_to", "use_elastic_disc", "serialized_es", "get_execution_details", "__str__", "batch_input", "bulk_get", "status", "task_inputs", "max_parallel_instances", "warnings", "run", "modified_data", "clone", "__eq__", "parent", "price", "errors", "cls", "executed_by", "_serialize_execution_settings", "create", "inplace", "disable_batch", "execution_status", "TaskBulkRecord", "created_by", "extra"]}, {"author": "Perica Prokic", "path": "tests/test_drs_import.py", "imports": ["range", "faker", "len"], "variables": ["_import", "file_ids", "response", "test_imports_bulk_submit", "imports", "tags", "test_imports_bulk_get", "total", "generator"]}, {"author": "Perica Prokic", "path": "sevenbridges/models/drs_import.py", "imports": ["DRSImportBulk", "sevenbridges.errors", "logging", "sevenbridges.meta.fields", "HrefField", "sevenbridges.meta.transformer", "sevenbridges.models.compound.import_result", "FileImportResult", "isinstance", "type", "Resource", "CompoundListField", "Transform", "File", "DateTimeField", "StringField", "SbgError", "set", "sevenbridges.meta.resource", "sevenbridges.models.file"], "variables": ["DRSImportBulk", "response", "files", "logger", "__eq__", "parent", "conflict_resolution", "project", "cls", "items", "cached_file_ids", "_URL", "result", "finished_on", "imports", "import_job_id", "tags", "state", "_result_files", "result_files", "id", "__str__", "bulk_submit", "bulk_get", "file_ids_to_retrieve", "data", "api", "href", "imported_file_ids", "started_on"]}, {"author": "Perica Prokic", "path": "tests/conftest.py", "imports": ["sevenbridges", "faker", "Verifier", "ConfigParser", "tests", "dict", "pytest", "Api", "Precondition", "providers", "verifiers", "requests_mock"], "variables": ["ConfigParser", "get", "Verifier", "api", "config_parser", "read", "request_mocker", "base_url", "__call__", "m", "given", "Mock", "__init__", "verifier", "data", "Precondition", "generator"]}, {"author": "Perica Prokic", "path": "tests/providers.py", "imports": ["faker", "int", "len", "range", "re", "FileProvider", "str", "AutomationMemberProvider", "AutomationPackageProvider", "AutomationRunProvider", "time", "MemberProvider"], "variables": ["default_task", "href_no_parent", "can_be_retrieved_in_bulk", "task_can_be_run", "CodePackageUploadProvider", "location", "all_files", "tasks_in_project_for_parent", "DatasetProvider", "package_id", "automation_id", "upload_id", "files_exist_for_file_origin", "can_be_edited_in_bulk", "project", "prev_url", "can_create_folder", "task_execution_details_exist", "task_exists", "team", "query", "dataset", "ImportsProvider", "self", "default_async_job", "MarkerProvider", "result", "list_data", "id_", "created", "copy_result", "imports", "has_runs", "AutomationProvider", "permissions", "can_copy_files", "can_be_copied", "default_member", "name", "VolumeProvider", "volume_created", "all_tasks", "headers", "division", "modified", "finalized_upload", "id", "got_file_part", "default_export", "failed", "paginated_projects", "permissions_can_be_modified", "default_file", "AutomationPackageProvider", "default_automation_package", "exist", "schema", "response", "files_exist_for_file_metadata", "ActionProvider", "default_division", "import_", "version", "apps_exist_for_project", "tasks_exist_for_parent", "has_members", "can_be_modified", "apps_exist", "regx", "new_id", "files_exist_for_folder", "ProjectProvider", "items", "can_delete_files", "status_code", "rate", "AsyncJobProvider", "download_info_defined", "default_project", "EndpointProvider", "default_team", "task_can_be_clone", "part_size", "all_links", "default_marker", "json", "endpoints", "exports", "authenticated", "member", "file_id", "can_be_submitted", "default_user", "has_member", "links", "tags_can_be_saved", "file_", "can_copy_to_folder", "task", "prev", "tasks_exists_for_project", "TeamMemberProvider", "default_automation", "RateLimitProvider", "can_be_archived", "exists", "can_remove_member", "can_be_deleted_in_bulk", "has_rerun", "data", "href", "automation", "can_be_restored", "username", "user", "next_url", "has_packages", "marker", "package", "files_exist_for_project", "UserProvider", "teams_exist", "got_etag", "MemberProvider", "ExportsProvider", "async_job", "app_exists", "app", "can_add_member", "default_automation_member", "has_state", "app_can_be_copied", "execution_details", "feedback_set", "default_copy_result", "__init__", "total", "can_be_removed", "download_info", "list_url", "can_be_saved", "sub_items", "files_exist_for_file_tag", "app_with_revision_exists", "queried", "task_can_be_saved", "matcher", "state", "all_items", "default_import", "paginated_file_list", "initialized_upload", "limit_available", "revision_can_be_created", "default_volume", "status", "task_can_be_aborted", "members_exist", "can_be_stopped", "default_automation_run", "owned_by", "TeamProvider", "member_exist", "tasks_in_project", "list_file_jobs", "can_move_to_folder", "can_be_queried", "can_be_submitted_in_bulk", "num_of_files", "scroll", "FileProvider", "AutomationRunProvider", "parent", "email", "AppProvider", "automation_run", "folder_id", "can_be_updated_in_bulk", "automation_member", "can_move_files", "next_page_link", "default_state", "suffix", "defined", "can_add_package", "created_with_errors", "default_dataset", "owner", "DivisionProvider", "DRSImportProvider", "export", "app_can_be_installed", "deleted", "FileUploadProvider", "AutomationMemberProvider", "TaskProvider", "volume", "default_app", "can_bulk_copy", "files_in_folder", "default_rate", "can_be_created", "metadata_can_be_saved", "url", "files_exist_for_file_name", "reported_part", "app_exist_non_json", "has_package", "generator"]}, {"author": "Perica Prokic", "path": "tests/test_drs_import.py", "imports": ["range", "faker", "len"], "variables": ["_import", "file_ids", "response", "test_imports_bulk_submit", "imports", "tags", "test_imports_bulk_get", "total", "generator"]}, {"author": "Perica Prokic", "path": "tests/verifiers.py", "imports": ["print", "Assert", "str"], "variables": ["members_fetched", "Assert", "queried_with_token", "task_children_fetched", "copy_only", "apps_fetched", "limit", "teams_fetched", "query", "check_query", "queried_with_file_tags", "file_saved", "self", "copied_to_folder", "file_copy_job_fetched", "category", "divisions_fetched", "ProjectVerifier", "members_retrieved", "revision_created", "AutomationPackageVerifier", "check_post_data", "query_owner", "name", "moved_to_folder", "include_archived", "folder_created", "modified", "ExportsVerifier", "queried_with_file_metadata", "task_fetched", "member_retrieved", "authenticated_user_fetched", "ImportsVerifier", "task_saved", "AutomationMemberVerifier", "TeamVerifier", "tasks_for_project_fetched", "action_restore_performed", "offset", "updated", "file_copied", "ActionVerifier", "queried_with_file_name", "bulk_deleted", "bulk_submitted", "AsyncJobVerifier", "action_performed", "team_fetched", "AppVerifier", "app_fetched", "file_saved_tags", "folder_files_listed_scroll", "state_fetched", "UserVerifier", "tasks_with_dates_fetched", "file_delete_job_fetched", "submitted", "queried_with_parent", "check_url", "member_permissions_modified", "app_installed", "division_fetched", "package_retrieved", "file_move_job_fetched", "visibility", "reran", "VolumeVerifier", "runs_retrieved", "saved", "__init__", "files_for_project_fetched", "bulk_updated", "bulk_copy_done", "packages_retrieved", "FileVerifier", "folder_files_listed", "log_fetched", "queried", "download_info_fetched", "EndpointVerifier", "fetched", "AutomationRunVerifier", "DRSImportsVerifier", "listed", "feedback_received", "app_copied", "MarkerVerifier", "owned_by", "TaskVerifier", "queried_with_file_origin", "execution_details_fetched", "MemberVerifier", "task_created", "DatasetVerifier", "bulk_edited", "member_added", "DivisionVerifier", "AutomationVerifier", "owner", "member_removed", "bulk_retrieved", "tags", "check_header_present", "stopped", "qs", "action_archive_performed", "async_files_deleted", "apps_for_project_fetched", "url", "async_files_moved", "async_files_copied", "created"]}, {"author": "Perica Prokic", "path": "tests/test_automations.py", "imports": ["faker", "CodePackageUpload", "sevenbridges.errors", "set", "len", "pytest", "sevenbridges.transfer.upload", "tempfile", "SbgError", "os"], "variables": ["test_get_member", "automation_description", "test_get_run_log", "test_get_run", "run", "file_part_url", "automation_runs", "automation_id", "new_name", "test_restore_automation", "members", "automations", "package_id", "package", "upload_id", "packages", "test_remove_member", "automation_run", "test_get_members", "test_archive_package", "test_get_runs", "inputs", "test_save_member", "upload", "test_restore_package", "log_file", "test_query_runs", "test_get_run_state", "total", "temp_file", "member_username", "test_get_automation", "member", "settings", "secret_settings", "automation", "test_code_package_upload_stop", "test_modify_package", "test_query_automations", "file_name", "new_custom_url", "test_create_automation", "test_rerun", "permissions", "state", "name", "test_stop_run", "test_archive_automation", "test_create_run", "id", "test_create_project_based_automation", "runs", "expected_state", "test_update", "test_modify_automation", "billing_group", "new_billing_group", "test_get_package", "generator", "test_get_packages", "test_add_member", "username"]}, {"author": "Perica Prokic", "path": "sevenbridges/__init__.py", "imports": ["DRSImportBulk", "ServiceUnavailable", "Task", "Conflict", "Member", "AsyncJob", "Import", "MethodNotAllowed", "sevenbridges.models.async_jobs", "ExecutionDetailsInvalidTaskType", "ServerError", "ResourceNotModified", "VolumeType", "sevenbridges.models.user", "AutomationStatus", "sevenbridges.models.compound.volumes.volume_object", "Project", "Invoice", "BillingGroup", "sevenbridges.models.bulk", "sevenbridges.models.app", "AutomationPackage", "sevenbridges.models.dataset", "ImportExportState", "PartSize", "DivisionRole", "ValidationError", "Endpoints", "sevenbridges.models.automation", "Marker", "Dataset", "NotFound", "sevenbridges.errors", "logging", "sevenbridges.models.drs_import", "Division", "TaskValidationError", "AutomationRun", "sevenbridges.models.endpoints", "VolumeObject", "Config", "sevenbridges.models.storage_export", "TaskStatus", "sevenbridges.models.team", "__version__", "TeamMember", "SbgError", "Volume", "TransferState", "App", "sevenbridges.api", "AsyncFileOperations", "AsyncJobStates", "Export", "BulkRecord", "AppRawFormat", "sevenbridges.version", "BadRequest", "sevenbridges.models.project", "sevenbridges.models.volume", "Permissions", "sevenbridges.models.task", "Unauthorized", "VolumeAccessMode", "File", "Forbidden", "Team", "AutomationMember", "LocalFileAlreadyExists", "sevenbridges.models.file", "User", "sevenbridges.models.member", "sevenbridges.config", "RequestTimeout", "Automation", "sevenbridges.models.division", "sevenbridges.models.storage_import", "PaginationError", "ReadOnlyPropertyError", "sevenbridges.models.enums", "FileStorageType", "AutomationRunActions", "AppCopyStrategy", "TooManyRequests", "sevenbridges.models.invoice", "Api", "sevenbridges.models.marker", "ssl", "sevenbridges.models.billing_group"], "variables": ["required_ssl_version", "__all__"]}, {"author": "Perica Prokic", "path": "sevenbridges/api.py", "imports": ["Actions", "DRSImportBulk", "sevenbridges.errors", "sevenbridges.models.drs_import", "Task", "Automation", "Export", "AsyncJob", "Import", "RateLimit", "sevenbridges.models.division", "RequestParameters", "sevenbridges.models.async_jobs", "Division", "requests.adapters", "AutomationRun", "sevenbridges.models.actions", "sevenbridges.models.endpoints", "ThreadPoolExecutor", "sevenbridges.models.user", "sevenbridges.models.storage_import", "sevenbridges.models.project", "Project", "Invoice", "BillingGroup", "sevenbridges.models.volume", "sevenbridges.models.app", "sevenbridges.models.enums", "AutomationPackage", "sevenbridges.models.dataset", "Dataset", "sevenbridges.models.storage_export", "sevenbridges.models.task", "concurrent.futures", "sevenbridges.models.team", "sevenbridges.models.invoice", "File", "super", "sevenbridges.models.marker", "HttpClient", "sevenbridges.http.client", "Team", "SbgError", "Volume", "Endpoints", "sevenbridges.models.automation", "Marker", "App", "sevenbridges.models.billing_group", "sevenbridges.models.file", "sevenbridges.models.rate_limit", "DEFAULT_POOLSIZE", "User"], "variables": ["drs_imports", "billing_groups", "files", "automation_runs", "proxies", "rate_limit", "teams", "tasks", "automations", "pool_connections", "max_parallel_requests", "backoff_factor", "datasets", "projects", "self", "__init__", "endpoints", "exports", "timeout", "automation_packages", "divisions", "markers", "imports", "actions", "Api", "invoices", "advance_access", "pool_block", "token", "users", "error_handlers", "debug", "apps", "volumes", "oauth_token", "url", "upload_max_workers", "retry_count", "download_max_workers", "pool_maxsize", "async_jobs", "config"]}, {"author": "Perica Prokic", "path": "sevenbridges/models/drs_import.py", "imports": ["DRSImportBulk", "sevenbridges.errors", "logging", "sevenbridges.meta.fields", "HrefField", "sevenbridges.meta.transformer", "sevenbridges.models.compound.import_result", "FileImportResult", "isinstance", "type", "Resource", "CompoundListField", "Transform", "File", "DateTimeField", "StringField", "SbgError", "set", "sevenbridges.meta.resource", "sevenbridges.models.file"], "variables": ["DRSImportBulk", "response", "files", "logger", "__eq__", "parent", "conflict_resolution", "project", "cls", "items", "cached_file_ids", "_URL", "result", "finished_on", "imports", "import_job_id", "tags", "state", "_result_files", "result_files", "id", "__str__", "bulk_submit", "bulk_get", "file_ids_to_retrieve", "data", "api", "href", "imported_file_ids", "started_on"]}, {"author": "Perica Prokic", "path": "sevenbridges/__init__.py", "imports": ["DRSImportBulk", "ServiceUnavailable", "Task", "Conflict", "Member", "AsyncJob", "Import", "MethodNotAllowed", "sevenbridges.models.async_jobs", "ExecutionDetailsInvalidTaskType", "ServerError", "ResourceNotModified", "VolumeType", "sevenbridges.models.user", "AutomationStatus", "sevenbridges.models.compound.volumes.volume_object", "Project", "Invoice", "BillingGroup", "sevenbridges.models.bulk", "sevenbridges.models.app", "AutomationPackage", "sevenbridges.models.dataset", "ImportExportState", "PartSize", "DivisionRole", "ValidationError", "Endpoints", "sevenbridges.models.automation", "Marker", "Dataset", "NotFound", "sevenbridges.errors", "logging", "sevenbridges.models.drs_import", "Division", "TaskValidationError", "AutomationRun", "sevenbridges.models.endpoints", "VolumeObject", "Config", "sevenbridges.models.storage_export", "TaskStatus", "sevenbridges.models.team", "__version__", "TeamMember", "SbgError", "Volume", "TransferState", "App", "sevenbridges.api", "AsyncFileOperations", "AsyncJobStates", "Export", "BulkRecord", "AppRawFormat", "sevenbridges.version", "BadRequest", "sevenbridges.models.project", "sevenbridges.models.volume", "Permissions", "sevenbridges.models.task", "Unauthorized", "VolumeAccessMode", "File", "Forbidden", "Team", "AutomationMember", "LocalFileAlreadyExists", "sevenbridges.models.file", "User", "sevenbridges.models.member", "sevenbridges.config", "RequestTimeout", "Automation", "sevenbridges.models.division", "sevenbridges.models.storage_import", "PaginationError", "ReadOnlyPropertyError", "sevenbridges.models.enums", "FileStorageType", "AutomationRunActions", "AppCopyStrategy", "TooManyRequests", "sevenbridges.models.invoice", "Api", "sevenbridges.models.marker", "ssl", "sevenbridges.models.billing_group"], "variables": ["required_ssl_version", "__all__"]}, {"author": "Perica Prokic", "path": "sevenbridges/api.py", "imports": ["Actions", "DRSImportBulk", "sevenbridges.errors", "sevenbridges.models.drs_import", "Task", "Automation", "Export", "AsyncJob", "Import", "RateLimit", "sevenbridges.models.division", "RequestParameters", "sevenbridges.models.async_jobs", "Division", "requests.adapters", "AutomationRun", "sevenbridges.models.actions", "sevenbridges.models.endpoints", "ThreadPoolExecutor", "sevenbridges.models.user", "sevenbridges.models.storage_import", "sevenbridges.models.project", "Project", "Invoice", "BillingGroup", "sevenbridges.models.volume", "sevenbridges.models.app", "sevenbridges.models.enums", "AutomationPackage", "sevenbridges.models.dataset", "Dataset", "sevenbridges.models.storage_export", "sevenbridges.models.task", "concurrent.futures", "sevenbridges.models.team", "sevenbridges.models.invoice", "File", "super", "sevenbridges.models.marker", "HttpClient", "sevenbridges.http.client", "Team", "SbgError", "Volume", "Endpoints", "sevenbridges.models.automation", "Marker", "App", "sevenbridges.models.billing_group", "sevenbridges.models.file", "sevenbridges.models.rate_limit", "DEFAULT_POOLSIZE", "User"], "variables": ["drs_imports", "billing_groups", "files", "automation_runs", "proxies", "rate_limit", "teams", "tasks", "automations", "pool_connections", "max_parallel_requests", "backoff_factor", "datasets", "projects", "self", "__init__", "endpoints", "exports", "timeout", "automation_packages", "divisions", "markers", "imports", "actions", "Api", "invoices", "advance_access", "pool_block", "token", "users", "error_handlers", "debug", "apps", "volumes", "oauth_token", "url", "upload_max_workers", "retry_count", "download_max_workers", "pool_maxsize", "async_jobs", "config"]}, {"author": "Perica Prokic", "path": "sevenbridges/models/drs_import.py", "imports": ["DRSImportBulk", "sevenbridges.errors", "logging", "sevenbridges.meta.fields", "HrefField", "sevenbridges.meta.transformer", "sevenbridges.models.compound.import_result", "FileImportResult", "isinstance", "type", "Resource", "CompoundListField", "Transform", "File", "DateTimeField", "StringField", "SbgError", "set", "sevenbridges.meta.resource", "sevenbridges.models.file"], "variables": ["DRSImportBulk", "response", "files", "logger", "__eq__", "parent", "conflict_resolution", "project", "cls", "items", "cached_file_ids", "_URL", "result", "finished_on", "imports", "import_job_id", "tags", "state", "_result_files", "result_files", "id", "__str__", "bulk_submit", "bulk_get", "file_ids_to_retrieve", "data", "api", "href", "imported_file_ids", "started_on"]}, {"author": "Borislav Dugosija", "path": "sevenbridges/models/task.py", "imports": ["sevenbridges.errors", "logging", "CompoundField", "Task", "sevenbridges.meta.fields", "sevenbridges.decorators", "HrefField", "callback", "sevenbridges.meta.transformer", "BulkRecord", "DictField", "TaskValidationError", "isinstance", "type", "FileApiFormats", "sevenbridges.models.execution_details", "sevenbridges.models.compound.tasks.output", "Input", "BatchGroup", "inplace_reload", "sevenbridges.models.bulk", "Resource", "sevenbridges.models.app", "sevenbridges.models.enums", "sevenbridges.models.compound.tasks.execution_status", "time", "Transform", "TaskStatus", "BatchBy", "File", "ExecutionStatus", "super", "UuidField", "DateTimeField", "dict", "StringField", "SbgError", "ExecutionDetails", "sevenbridges.models.compound.tasks.batch_by", "Output", "sevenbridges.models.compound.price", "Price", "BooleanField", "sevenbridges.meta.resource", "sevenbridges.models.compound.tasks.input", "App", "sevenbridges.models.file", "sevenbridges.models.compound.tasks.batch_group"], "variables": ["task_data", "started_from", "Task", "batch", "abort", "project", "limit", "created_time", "inputs", "query", "self", "task_meta", "serialized_es_mapping", "execution_settings", "name", "created_to", "id", "task_request_data", "resource", "created_from", "instance_type", "api", "task_ids", "response", "description", "batch_by", "offset", "interruptible", "use_interruptible_instances", "logger", "ended_from", "tasks", "get_batch_children", "wait", "started_to", "_URL", "end_time", "order_by", "task", "app_id", "_to_api_file_format", "start_time", "order", "_serialize_inputs", "use_memoization", "outputs", "revision", "created_task", "return_value", "origin", "params", "data", "href", "save", "batch_group", "type", "app", "ended_to", "use_elastic_disc", "serialized_es", "get_execution_details", "__str__", "batch_input", "bulk_get", "status", "task_inputs", "max_parallel_instances", "warnings", "run", "modified_data", "clone", "__eq__", "parent", "price", "errors", "cls", "executed_by", "_serialize_execution_settings", "create", "inplace", "disable_batch", "execution_status", "TaskBulkRecord", "created_by", "extra"]}, {"author": "Borislav Dugosija", "path": "tests/test_tasks.py", "imports": ["faker", "sevenbridges.errors", "repr", "len", "datetime", "pytest", "range", "SbgError"], "variables": ["project_id", "test_save_task", "task_ids", "response", "project_short_name", "files", "test_tasks_bulk_get", "batch_by", "children", "output_id", "tasks", "test_tasks_query_dates", "test_tasks_query", "test_abort_task", "project", "test_create_task_with_errors", "items", "test_create_task", "output", "inputs", "test_datestring", "projects", "total", "test_modify_inputs", "file_ids", "parent_id", "test_secondary_files", "owner", "task", "task_id", "secondary_files", "app_id", "execution_settings", "test_clone_task", "test_task_get_batch_children", "id", "test_date", "status", "test_run_task", "test_get_execution_details", "generator"]}, {"author": "Perica Prokic", "path": "sevenbridges/meta/transformer.py", "imports": ["sevenbridges.models.member", "sevenbridges.errors", "Task", "Automation", "Export", "Member", "AsyncJob", "Import", "sevenbridges.models.division", "sevenbridges.models.async_jobs", "Division", "AutomationRun", "isinstance", "sevenbridges.models.user", "sevenbridges.models.storage_import", "sevenbridges.models.project", "Project", "BillingGroup", "sevenbridges.models.volume", "Resource", "sevenbridges.models.app", "AutomationPackage", "sevenbridges.models.dataset", "sevenbridges.models.storage_export", "sevenbridges.models.task", "sevenbridges.models.team", "File", "datetime", "sevenbridges.models.marker", "hasattr", "Team", "SbgError", "Volume", "AutomationMember", "sevenbridges.models.automation", "Marker", "sevenbridges.meta.resource", "App", "sevenbridges.models.billing_group", "sevenbridges.models.file", "Dataset", "User"], "variables": ["to_tags", "to_dataset", "to_team", "tag_list", "to_automation_run", "to_automation", "to_task", "to_export", "to_import", "to_automation_package", "to_member", "to_datestring", "to_file", "to_user", "to_location", "Transform", "to_automation_member", "to_billing_group", "to_volume", "to_division", "to_project", "to_marker", "to_resource", "to_async_job", "to_app"]}, {"author": "Perica Prokic", "path": "sevenbridges/models/task.py", "imports": ["sevenbridges.errors", "logging", "CompoundField", "Task", "sevenbridges.meta.fields", "sevenbridges.decorators", "HrefField", "callback", "sevenbridges.meta.transformer", "BulkRecord", "DictField", "TaskValidationError", "isinstance", "type", "FileApiFormats", "sevenbridges.models.execution_details", "sevenbridges.models.compound.tasks.output", "Input", "BatchGroup", "inplace_reload", "sevenbridges.models.bulk", "Resource", "sevenbridges.models.app", "sevenbridges.models.enums", "sevenbridges.models.compound.tasks.execution_status", "time", "Transform", "TaskStatus", "BatchBy", "File", "ExecutionStatus", "super", "UuidField", "DateTimeField", "dict", "StringField", "SbgError", "ExecutionDetails", "sevenbridges.models.compound.tasks.batch_by", "Output", "sevenbridges.models.compound.price", "Price", "BooleanField", "sevenbridges.meta.resource", "sevenbridges.models.compound.tasks.input", "App", "sevenbridges.models.file", "sevenbridges.models.compound.tasks.batch_group"], "variables": ["task_data", "started_from", "Task", "batch", "abort", "project", "limit", "created_time", "inputs", "query", "self", "task_meta", "serialized_es_mapping", "execution_settings", "name", "created_to", "id", "task_request_data", "resource", "created_from", "instance_type", "api", "task_ids", "response", "description", "batch_by", "offset", "interruptible", "use_interruptible_instances", "logger", "ended_from", "tasks", "get_batch_children", "wait", "started_to", "_URL", "end_time", "order_by", "task", "app_id", "_to_api_file_format", "start_time", "order", "_serialize_inputs", "use_memoization", "outputs", "revision", "created_task", "return_value", "origin", "params", "data", "href", "save", "batch_group", "type", "app", "ended_to", "use_elastic_disc", "serialized_es", "get_execution_details", "__str__", "batch_input", "bulk_get", "status", "task_inputs", "max_parallel_instances", "warnings", "run", "modified_data", "clone", "__eq__", "parent", "price", "errors", "cls", "executed_by", "_serialize_execution_settings", "create", "inplace", "disable_batch", "execution_status", "TaskBulkRecord", "created_by", "extra"]}, {"author": "Perica Prokic", "path": "tests/test_automations.py", "imports": ["faker", "CodePackageUpload", "sevenbridges.errors", "set", "len", "pytest", "sevenbridges.transfer.upload", "tempfile", "SbgError", "os"], "variables": ["test_get_member", "automation_description", "test_get_run_log", "test_get_run", "run", "file_part_url", "automation_runs", "automation_id", "new_name", "test_restore_automation", "members", "automations", "package_id", "package", "upload_id", "packages", "test_remove_member", "automation_run", "test_get_members", "test_archive_package", "test_get_runs", "inputs", "test_save_member", "upload", "test_restore_package", "log_file", "test_query_runs", "test_get_run_state", "total", "temp_file", "member_username", "test_get_automation", "member", "settings", "secret_settings", "automation", "test_code_package_upload_stop", "test_modify_package", "test_query_automations", "file_name", "new_custom_url", "test_create_automation", "test_rerun", "permissions", "state", "name", "test_stop_run", "test_archive_automation", "test_create_run", "id", "test_create_project_based_automation", "runs", "expected_state", "test_update", "test_modify_automation", "billing_group", "new_billing_group", "test_get_package", "generator", "test_get_packages", "test_add_member", "username"]}, {"author": "Borislav Dugosija", "path": "sevenbridges/transfer/upload.py", "imports": ["sevenbridges.errors", "logging", "_report_part", "Progress", "CodePackageUPartedFile", "RequestParameters", "generate_session", "sevenbridges.transfer.utils", "_get_part_url", "sevenbridges.models.enums", "float", "time", "os", "_submit_part", "File", "super", "UPartedFile", "PartSize", "threading", "sevenbridges.http.client", "SbgError", "open", "TransferState", "range", "sevenbridges.models.file", "str", "total_parts"], "variables": ["_abort_upload", "_finalize_upload", "_report_part", "response", "duration", "run", "__iter__", "partition_file", "file_path", "e_tag", "CodePackageUPartedFile", "automation_id", "_create_init_data", "callback", "logger", "parent", "submit", "start", "start_byte", "project", "errorback", "resume", "CodePackageUpload", "_get_part_url", "get_parts", "part_read_limit", "_initialize_upload", "part_data", "end_byte", "wait", "stop", "_URL", "part_size", "self", "__init__", "timeout", "__repr__", "result", "parted_file", "Upload", "_submit_part", "file_name", "add_progress_callback", "part_url", "etag", "part", "UPartedFile", "init_params", "init_data", "part_number", "future", "futures", "_upload_part", "done", "start_time", "add_callback", "pause", "_validate_project_parent", "parts", "status", "retry_count", "_verify_file_size", "data", "api", "overwrite", "part_read_offset", "progress"]}, {"author": "Borislav Dugosija", "path": "sevenbridges/transfer/upload.py", "imports": ["sevenbridges.errors", "logging", "_report_part", "Progress", "CodePackageUPartedFile", "RequestParameters", "generate_session", "sevenbridges.transfer.utils", "_get_part_url", "sevenbridges.models.enums", "float", "time", "os", "_submit_part", "File", "super", "UPartedFile", "PartSize", "threading", "sevenbridges.http.client", "SbgError", "open", "TransferState", "range", "sevenbridges.models.file", "str", "total_parts"], "variables": ["_abort_upload", "_finalize_upload", "_report_part", "response", "duration", "run", "__iter__", "partition_file", "file_path", "e_tag", "CodePackageUPartedFile", "automation_id", "_create_init_data", "callback", "logger", "parent", "submit", "start", "start_byte", "project", "errorback", "resume", "CodePackageUpload", "_get_part_url", "get_parts", "part_read_limit", "_initialize_upload", "part_data", "end_byte", "wait", "stop", "_URL", "part_size", "self", "__init__", "timeout", "__repr__", "result", "parted_file", "Upload", "_submit_part", "file_name", "add_progress_callback", "part_url", "etag", "part", "UPartedFile", "init_params", "init_data", "part_number", "future", "futures", "_upload_part", "done", "start_time", "add_callback", "pause", "_validate_project_parent", "parts", "status", "retry_count", "_verify_file_size", "data", "api", "overwrite", "part_read_offset", "progress"]}, {"author": "Borislav Dugosija", "path": "sevenbridges/transfer/upload.py", "imports": ["sevenbridges.errors", "logging", "_report_part", "Progress", "CodePackageUPartedFile", "RequestParameters", "generate_session", "sevenbridges.transfer.utils", "_get_part_url", "sevenbridges.models.enums", "float", "time", "os", "_submit_part", "File", "super", "UPartedFile", "PartSize", "threading", "sevenbridges.http.client", "SbgError", "open", "TransferState", "range", "sevenbridges.models.file", "str", "total_parts"], "variables": ["_abort_upload", "_finalize_upload", "_report_part", "response", "duration", "run", "__iter__", "partition_file", "file_path", "e_tag", "CodePackageUPartedFile", "automation_id", "_create_init_data", "callback", "logger", "parent", "submit", "start", "start_byte", "project", "errorback", "resume", "CodePackageUpload", "_get_part_url", "get_parts", "part_read_limit", "_initialize_upload", "part_data", "end_byte", "wait", "stop", "_URL", "part_size", "self", "__init__", "timeout", "__repr__", "result", "parted_file", "Upload", "_submit_part", "file_name", "add_progress_callback", "part_url", "etag", "part", "UPartedFile", "init_params", "init_data", "part_number", "future", "futures", "_upload_part", "done", "start_time", "add_callback", "pause", "_validate_project_parent", "parts", "status", "retry_count", "_verify_file_size", "data", "api", "overwrite", "part_read_offset", "progress"]}, {"author": "Borislav Dugosija", "path": "sevenbridges/transfer/upload.py", "imports": ["sevenbridges.errors", "logging", "_report_part", "Progress", "CodePackageUPartedFile", "RequestParameters", "generate_session", "sevenbridges.transfer.utils", "_get_part_url", "sevenbridges.models.enums", "float", "time", "os", "_submit_part", "File", "super", "UPartedFile", "PartSize", "threading", "sevenbridges.http.client", "SbgError", "open", "TransferState", "range", "sevenbridges.models.file", "str", "total_parts"], "variables": ["_abort_upload", "_finalize_upload", "_report_part", "response", "duration", "run", "__iter__", "partition_file", "file_path", "e_tag", "CodePackageUPartedFile", "automation_id", "_create_init_data", "callback", "logger", "parent", "submit", "start", "start_byte", "project", "errorback", "resume", "CodePackageUpload", "_get_part_url", "get_parts", "part_read_limit", "_initialize_upload", "part_data", "end_byte", "wait", "stop", "_URL", "part_size", "self", "__init__", "timeout", "__repr__", "result", "parted_file", "Upload", "_submit_part", "file_name", "add_progress_callback", "part_url", "etag", "part", "UPartedFile", "init_params", "init_data", "part_number", "future", "futures", "_upload_part", "done", "start_time", "add_callback", "pause", "_validate_project_parent", "parts", "status", "retry_count", "_verify_file_size", "data", "api", "overwrite", "part_read_offset", "progress"]}, {"author": "Milos Zivkovic", "path": "sevenbridges/models/volume.py", "imports": ["sevenbridges.models.member", "sevenbridges.errors", "logging", "CompoundField", "sevenbridges.meta.fields", "sevenbridges.decorators", "HrefField", "Member", "sevenbridges.models.link", "sevenbridges.meta.transformer", "sevenbridges.models.compound.volumes.service", "isinstance", "VolumeObject", "type", "ResourceNotModified", "VolumeType", "VolumePrefix", "sevenbridges.models.compound.volumes.volume_object", "inplace_reload", "Resource", "sevenbridges.models.enums", "Transform", "super", "DateTimeField", "VolumeService", "VolumeCollection", "StringField", "Volume", "BooleanField", "Collection", "sevenbridges.models.compound.volumes.volume_prefix", "sevenbridges.meta.resource", "VolumeLink", "sevenbridges.meta.collection", "Link"], "variables": ["add_member", "remove_member", "user", "response", "description", "access_mode", "save", "offset", "create_s3_volume", "members", "member_data", "logger", "modified_on", "__eq__", "modified_data", "create_oss_volume", "get_member", "client_email", "cls", "project", "limit", "list", "team", "_URL", "created_on", "query", "param", "self", "private_key", "total", "get_volume_object_info", "configuration", "role_arn", "prefix", "bucket", "links", "properties", "state", "inplace", "objects", "add_member_team", "create_google_iam_volume", "active", "name", "service", "volume", "add_member_division", "Volume", "create_s3_volume_role_auth", "division", "id", "__str__", "create_google_volume", "secret_access_key", "prefixes", "endpoint", "access_key_id", "get_members", "get_exports", "get_imports", "data", "api", "extra", "href", "params", "external_id", "username"]}, {"author": "Milos Zivkovic", "path": "tests/test_volumes.py", "imports": ["faker", "len"], "variables": ["description", "access_mode", "access_key_secret", "_id", "items", "limit", "test_create_oss_volume", "test_modify_volume", "test_create_s3_volume_role_auth", "test_create_s3_volume", "total", "member_username", "role_arn", "member", "volume_data", "test_volumes_query", "bucket", "name", "volume", "volume_id", "item_list", "id", "test_create_google_volume", "secret_access_key", "generator", "volumes", "endpoint", "test_volume_get_member", "access_key_id", "external_id", "test_volume_pagination"]}, {"author": "Stevan Pejak", "path": "sevenbridges/transfer/upload.py", "imports": ["sevenbridges.errors", "logging", "_report_part", "Progress", "CodePackageUPartedFile", "RequestParameters", "generate_session", "sevenbridges.transfer.utils", "_get_part_url", "sevenbridges.models.enums", "float", "time", "os", "_submit_part", "File", "super", "UPartedFile", "PartSize", "threading", "sevenbridges.http.client", "SbgError", "open", "TransferState", "range", "sevenbridges.models.file", "str", "total_parts"], "variables": ["_abort_upload", "_finalize_upload", "_report_part", "response", "duration", "run", "__iter__", "partition_file", "file_path", "e_tag", "CodePackageUPartedFile", "automation_id", "_create_init_data", "callback", "logger", "parent", "submit", "start", "start_byte", "project", "errorback", "resume", "CodePackageUpload", "_get_part_url", "get_parts", "part_read_limit", "_initialize_upload", "part_data", "end_byte", "wait", "stop", "_URL", "part_size", "self", "__init__", "timeout", "__repr__", "result", "parted_file", "Upload", "_submit_part", "file_name", "add_progress_callback", "part_url", "etag", "part", "UPartedFile", "init_params", "init_data", "part_number", "future", "futures", "_upload_part", "done", "start_time", "add_callback", "pause", "_validate_project_parent", "parts", "status", "retry_count", "_verify_file_size", "data", "api", "overwrite", "part_read_offset", "progress"]}, {"author": "Marija Sevkovic", "path": "sevenbridges/transfer/upload.py", "imports": ["sevenbridges.errors", "logging", "_report_part", "Progress", "CodePackageUPartedFile", "RequestParameters", "generate_session", "sevenbridges.transfer.utils", "_get_part_url", "sevenbridges.models.enums", "float", "time", "os", "_submit_part", "File", "super", "UPartedFile", "PartSize", "threading", "sevenbridges.http.client", "SbgError", "open", "TransferState", "range", "sevenbridges.models.file", "str", "total_parts"], "variables": ["_abort_upload", "_finalize_upload", "_report_part", "response", "duration", "run", "__iter__", "partition_file", "file_path", "e_tag", "CodePackageUPartedFile", "automation_id", "_create_init_data", "callback", "logger", "parent", "submit", "start", "start_byte", "project", "errorback", "resume", "CodePackageUpload", "_get_part_url", "get_parts", "part_read_limit", "_initialize_upload", "part_data", "end_byte", "wait", "stop", "_URL", "part_size", "self", "__init__", "timeout", "__repr__", "result", "parted_file", "Upload", "_submit_part", "file_name", "add_progress_callback", "part_url", "etag", "part", "UPartedFile", "init_params", "init_data", "part_number", "future", "futures", "_upload_part", "done", "start_time", "add_callback", "pause", "_validate_project_parent", "parts", "status", "retry_count", "_verify_file_size", "data", "api", "overwrite", "part_read_offset", "progress"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/models/billing_group.py", "imports": ["BillingGroupAnalysisBreakdown", "type", "sevenbridges.models.compound.price", "CompoundField", "Price", "BooleanField", "sevenbridges.meta.fields", "HrefField", "sevenbridges.meta.resource", "super", "BillingGroupEgressBreakdown", "Resource", "UuidField", "sevenbridges.models.billing_storage_breakdown", "StringField", "sevenbridges.models.billing_analysis_breakdown", "BillingGroupStorageBreakdown", "sevenbridges.models.billing_egress_breakdown"], "variables": ["date_from", "offset", "analysis_breakdown", "__eq__", "cls", "type", "limit", "date_to", "_URL", "query", "BillingGroup", "invoice_id", "self", "egress_breakdown", "storage_breakdown", "owner", "name", "pending", "fields", "id", "disabled", "__str__", "balance", "api", "href"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/models/billing_group.py", "imports": ["BillingGroupAnalysisBreakdown", "type", "sevenbridges.models.compound.price", "CompoundField", "Price", "BooleanField", "sevenbridges.meta.fields", "HrefField", "sevenbridges.meta.resource", "super", "BillingGroupEgressBreakdown", "Resource", "UuidField", "sevenbridges.models.billing_storage_breakdown", "StringField", "sevenbridges.models.billing_analysis_breakdown", "BillingGroupStorageBreakdown", "sevenbridges.models.billing_egress_breakdown"], "variables": ["date_from", "offset", "analysis_breakdown", "__eq__", "cls", "type", "limit", "date_to", "_URL", "query", "BillingGroup", "invoice_id", "self", "egress_breakdown", "storage_breakdown", "owner", "name", "pending", "fields", "id", "disabled", "__str__", "balance", "api", "href"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/models/project.py", "imports": ["sevenbridges.models.member", "sevenbridges.errors", "logging", "CompoundField", "sevenbridges.meta.fields", "sevenbridges.decorators", "HrefField", "Member", "sevenbridges.models.link", "sevenbridges.meta.transformer", "isinstance", "type", "ResourceNotModified", "inplace_reload", "Project", "sevenbridges.models.compound.projects.settings", "Resource", "Transform", "Settings", "super", "UuidField", "DateTimeField", "StringField", "SbgError", "Collection", "sevenbridges.meta.resource", "sevenbridges.meta.collection", "BasicListField", "Link"], "variables": ["add_member", "remove_member", "user", "response", "run", "description", "save", "batch_by", "offset", "member_data", "members", "interruptible", "logger", "modified_on", "__eq__", "modified_data", "get_member", "email", "project", "cls", "type", "limit", "team", "app", "inputs", "_URL", "Project", "created_on", "query", "self", "get_tasks", "total", "create_task", "settings", "category", "get_apps", "links", "create", "owner", "tags", "permissions", "state", "inplace", "add_member_team", "disable_batch", "query_params", "name", "add_member_division", "volume", "execution_settings", "division", "revision", "id", "project_data", "__str__", "add_files", "batch_input", "root_folder", "add_member_email", "status", "url", "created_by", "billing_group", "get_members", "get_files", "data", "api", "extra", "href", "params", "get_imports", "get_exports", "username"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/models/project.py", "imports": ["sevenbridges.models.member", "sevenbridges.errors", "logging", "CompoundField", "sevenbridges.meta.fields", "sevenbridges.decorators", "HrefField", "Member", "sevenbridges.models.link", "sevenbridges.meta.transformer", "isinstance", "type", "ResourceNotModified", "inplace_reload", "Project", "sevenbridges.models.compound.projects.settings", "Resource", "Transform", "Settings", "super", "UuidField", "DateTimeField", "StringField", "SbgError", "Collection", "sevenbridges.meta.resource", "sevenbridges.meta.collection", "BasicListField", "Link"], "variables": ["add_member", "remove_member", "user", "response", "run", "description", "save", "batch_by", "offset", "member_data", "members", "interruptible", "logger", "modified_on", "__eq__", "modified_data", "get_member", "email", "project", "cls", "type", "limit", "team", "app", "inputs", "_URL", "Project", "created_on", "query", "self", "get_tasks", "total", "create_task", "settings", "category", "get_apps", "links", "create", "owner", "tags", "permissions", "state", "inplace", "add_member_team", "disable_batch", "query_params", "name", "add_member_division", "volume", "execution_settings", "division", "revision", "id", "project_data", "__str__", "add_files", "batch_input", "root_folder", "add_member_email", "status", "url", "created_by", "billing_group", "get_members", "get_files", "data", "api", "extra", "href", "params", "get_imports", "get_exports", "username"]}, {"author": "Nemanja Boskovic", "path": "sevenbridges/meta/transformer.py", "imports": ["sevenbridges.models.member", "sevenbridges.errors", "Task", "Automation", "Export", "Member", "AsyncJob", "Import", "sevenbridges.models.division", "sevenbridges.models.async_jobs", "Division", "AutomationRun", "isinstance", "sevenbridges.models.user", "sevenbridges.models.storage_import", "sevenbridges.models.project", "Project", "BillingGroup", "sevenbridges.models.volume", "Resource", "sevenbridges.models.app", "AutomationPackage", "sevenbridges.models.dataset", "sevenbridges.models.storage_export", "sevenbridges.models.task", "sevenbridges.models.team", "File", "datetime", "sevenbridges.models.marker", "hasattr", "Team", "SbgError", "Volume", "AutomationMember", "sevenbridges.models.automation", "Marker", "sevenbridges.meta.resource", "App", "sevenbridges.models.billing_group", "sevenbridges.models.file", "Dataset", "User"], "variables": ["to_tags", "to_dataset", "to_team", "tag_list", "to_automation_run", "to_automation", "to_task", "to_export", "to_import", "to_automation_package", "to_member", "to_datestring", "to_file", "to_user", "to_location", "Transform", "to_automation_member", "to_billing_group", "to_volume", "to_division", "to_project", "to_marker", "to_resource", "to_async_job", "to_app"]}, {"author": "Nemanja Boskovic", "path": "sevenbridges/models/project.py", "imports": ["sevenbridges.models.member", "sevenbridges.errors", "logging", "CompoundField", "sevenbridges.meta.fields", "sevenbridges.decorators", "HrefField", "Member", "sevenbridges.models.link", "sevenbridges.meta.transformer", "isinstance", "type", "ResourceNotModified", "inplace_reload", "Project", "sevenbridges.models.compound.projects.settings", "Resource", "Transform", "Settings", "super", "UuidField", "DateTimeField", "StringField", "SbgError", "Collection", "sevenbridges.meta.resource", "sevenbridges.meta.collection", "BasicListField", "Link"], "variables": ["add_member", "remove_member", "user", "response", "run", "description", "save", "batch_by", "offset", "member_data", "members", "interruptible", "logger", "modified_on", "__eq__", "modified_data", "get_member", "email", "project", "cls", "type", "limit", "team", "app", "inputs", "_URL", "Project", "created_on", "query", "self", "get_tasks", "total", "create_task", "settings", "category", "get_apps", "links", "create", "owner", "tags", "permissions", "state", "inplace", "add_member_team", "disable_batch", "query_params", "name", "add_member_division", "volume", "execution_settings", "division", "revision", "id", "project_data", "__str__", "add_files", "batch_input", "root_folder", "add_member_email", "status", "url", "created_by", "billing_group", "get_members", "get_files", "data", "api", "extra", "href", "params", "get_imports", "get_exports", "username"]}, {"author": "Nemanja Boskovic", "path": "tests/test_projects.py", "imports": ["faker", "ResourceNotModified", "sevenbridges.errors", "repr", "set", "len", "pytest", "SbgError"], "variables": ["project_description", "test_projects_get_tasks", "project_short_name", "files", "mocked_member", "members", "new_name", "test_project_get_files", "new_category", "test_get_project", "test_project_get_members", "test_create_project", "project", "email", "test_project_remove_member", "test_projects_get_apps", "test_member_permissions_save_no_changes", "test_query_projects_with_tags", "test_modify_project", "tag1", "projects", "test_query_projects_with_name_owner", "member_username", "member", "settings", "project_name", "category", "test_member_permissions_save", "owner", "tags", "test_project_get_member", "test_project_add_member", "name", "test_project_add_member_email", "id", "tag2", "billing_group", "test_query_projects_with_category", "test_query_projects_with_name", "generator", "test_query_projects_with_owner", "username"]}, {"author": "Nemanja Boskovic", "path": "tests/verifiers.py", "imports": ["print", "Assert", "str"], "variables": ["members_fetched", "Assert", "queried_with_token", "task_children_fetched", "copy_only", "apps_fetched", "limit", "teams_fetched", "query", "check_query", "queried_with_file_tags", "file_saved", "self", "copied_to_folder", "file_copy_job_fetched", "category", "divisions_fetched", "ProjectVerifier", "members_retrieved", "revision_created", "AutomationPackageVerifier", "check_post_data", "query_owner", "name", "moved_to_folder", "include_archived", "folder_created", "modified", "ExportsVerifier", "queried_with_file_metadata", "task_fetched", "member_retrieved", "authenticated_user_fetched", "ImportsVerifier", "task_saved", "AutomationMemberVerifier", "TeamVerifier", "tasks_for_project_fetched", "action_restore_performed", "offset", "updated", "file_copied", "ActionVerifier", "queried_with_file_name", "bulk_deleted", "bulk_submitted", "AsyncJobVerifier", "action_performed", "team_fetched", "AppVerifier", "app_fetched", "file_saved_tags", "folder_files_listed_scroll", "state_fetched", "UserVerifier", "tasks_with_dates_fetched", "file_delete_job_fetched", "submitted", "queried_with_parent", "check_url", "member_permissions_modified", "app_installed", "division_fetched", "package_retrieved", "file_move_job_fetched", "visibility", "reran", "VolumeVerifier", "runs_retrieved", "saved", "__init__", "files_for_project_fetched", "bulk_updated", "bulk_copy_done", "packages_retrieved", "FileVerifier", "folder_files_listed", "log_fetched", "queried", "download_info_fetched", "EndpointVerifier", "fetched", "AutomationRunVerifier", "DRSImportsVerifier", "listed", "feedback_received", "app_copied", "MarkerVerifier", "owned_by", "TaskVerifier", "queried_with_file_origin", "execution_details_fetched", "MemberVerifier", "task_created", "DatasetVerifier", "bulk_edited", "member_added", "DivisionVerifier", "AutomationVerifier", "owner", "member_removed", "bulk_retrieved", "tags", "check_header_present", "stopped", "qs", "action_archive_performed", "async_files_deleted", "apps_for_project_fetched", "url", "async_files_moved", "async_files_copied", "created"]}, {"author": "Nemanja Boskovic", "path": "sevenbridges/models/project.py", "imports": ["sevenbridges.models.member", "sevenbridges.errors", "logging", "CompoundField", "sevenbridges.meta.fields", "sevenbridges.decorators", "HrefField", "Member", "sevenbridges.models.link", "sevenbridges.meta.transformer", "isinstance", "type", "ResourceNotModified", "inplace_reload", "Project", "sevenbridges.models.compound.projects.settings", "Resource", "Transform", "Settings", "super", "UuidField", "DateTimeField", "StringField", "SbgError", "Collection", "sevenbridges.meta.resource", "sevenbridges.meta.collection", "BasicListField", "Link"], "variables": ["add_member", "remove_member", "user", "response", "run", "description", "save", "batch_by", "offset", "member_data", "members", "interruptible", "logger", "modified_on", "__eq__", "modified_data", "get_member", "email", "project", "cls", "type", "limit", "team", "app", "inputs", "_URL", "Project", "created_on", "query", "self", "get_tasks", "total", "create_task", "settings", "category", "get_apps", "links", "create", "owner", "tags", "permissions", "state", "inplace", "add_member_team", "disable_batch", "query_params", "name", "add_member_division", "volume", "execution_settings", "division", "revision", "id", "project_data", "__str__", "add_files", "batch_input", "root_folder", "add_member_email", "status", "url", "created_by", "billing_group", "get_members", "get_files", "data", "api", "extra", "href", "params", "get_imports", "get_exports", "username"]}, {"author": "Nemanja Boskovic", "path": "tests/providers.py", "imports": ["faker", "int", "len", "range", "re", "FileProvider", "str", "AutomationMemberProvider", "AutomationPackageProvider", "AutomationRunProvider", "time", "MemberProvider"], "variables": ["default_task", "href_no_parent", "can_be_retrieved_in_bulk", "task_can_be_run", "CodePackageUploadProvider", "location", "all_files", "tasks_in_project_for_parent", "DatasetProvider", "package_id", "automation_id", "upload_id", "files_exist_for_file_origin", "can_be_edited_in_bulk", "project", "prev_url", "can_create_folder", "task_execution_details_exist", "task_exists", "team", "query", "dataset", "ImportsProvider", "self", "default_async_job", "MarkerProvider", "result", "list_data", "id_", "created", "copy_result", "imports", "has_runs", "AutomationProvider", "permissions", "can_copy_files", "can_be_copied", "default_member", "name", "VolumeProvider", "volume_created", "all_tasks", "headers", "division", "modified", "finalized_upload", "id", "got_file_part", "default_export", "failed", "paginated_projects", "permissions_can_be_modified", "default_file", "AutomationPackageProvider", "default_automation_package", "exist", "schema", "response", "files_exist_for_file_metadata", "ActionProvider", "default_division", "import_", "version", "apps_exist_for_project", "tasks_exist_for_parent", "has_members", "can_be_modified", "apps_exist", "regx", "new_id", "files_exist_for_folder", "ProjectProvider", "items", "can_delete_files", "status_code", "rate", "AsyncJobProvider", "download_info_defined", "default_project", "EndpointProvider", "default_team", "task_can_be_clone", "part_size", "all_links", "default_marker", "json", "endpoints", "exports", "authenticated", "member", "file_id", "can_be_submitted", "default_user", "has_member", "links", "tags_can_be_saved", "file_", "can_copy_to_folder", "task", "prev", "tasks_exists_for_project", "TeamMemberProvider", "default_automation", "RateLimitProvider", "can_be_archived", "exists", "can_remove_member", "can_be_deleted_in_bulk", "has_rerun", "data", "href", "automation", "can_be_restored", "username", "user", "next_url", "has_packages", "marker", "package", "files_exist_for_project", "UserProvider", "teams_exist", "got_etag", "MemberProvider", "ExportsProvider", "async_job", "app_exists", "app", "can_add_member", "default_automation_member", "has_state", "app_can_be_copied", "execution_details", "feedback_set", "default_copy_result", "__init__", "total", "can_be_removed", "download_info", "list_url", "can_be_saved", "sub_items", "files_exist_for_file_tag", "app_with_revision_exists", "queried", "task_can_be_saved", "matcher", "state", "all_items", "default_import", "paginated_file_list", "initialized_upload", "limit_available", "revision_can_be_created", "default_volume", "status", "task_can_be_aborted", "members_exist", "can_be_stopped", "default_automation_run", "owned_by", "TeamProvider", "member_exist", "tasks_in_project", "list_file_jobs", "can_move_to_folder", "can_be_queried", "can_be_submitted_in_bulk", "num_of_files", "scroll", "FileProvider", "AutomationRunProvider", "parent", "email", "AppProvider", "automation_run", "folder_id", "can_be_updated_in_bulk", "automation_member", "can_move_files", "next_page_link", "default_state", "suffix", "defined", "can_add_package", "created_with_errors", "default_dataset", "owner", "DivisionProvider", "DRSImportProvider", "export", "app_can_be_installed", "deleted", "FileUploadProvider", "AutomationMemberProvider", "TaskProvider", "volume", "default_app", "can_bulk_copy", "files_in_folder", "default_rate", "can_be_created", "metadata_can_be_saved", "url", "files_exist_for_file_name", "reported_part", "app_exist_non_json", "has_package", "generator"]}, {"author": "Nemanja Boskovic", "path": "tests/test_projects.py", "imports": ["faker", "ResourceNotModified", "sevenbridges.errors", "repr", "set", "len", "pytest", "SbgError"], "variables": ["project_description", "test_projects_get_tasks", "project_short_name", "files", "mocked_member", "members", "new_name", "test_project_get_files", "new_category", "test_get_project", "test_project_get_members", "test_create_project", "project", "email", "test_project_remove_member", "test_projects_get_apps", "test_member_permissions_save_no_changes", "test_query_projects_with_tags", "test_modify_project", "tag1", "projects", "test_query_projects_with_name_owner", "member_username", "member", "settings", "project_name", "category", "test_member_permissions_save", "owner", "tags", "test_project_get_member", "test_project_add_member", "name", "test_project_add_member_email", "id", "tag2", "billing_group", "test_query_projects_with_category", "test_query_projects_with_name", "generator", "test_query_projects_with_owner", "username"]}, {"author": "Nemanja Boskovic", "path": "tests/verifiers.py", "imports": ["print", "Assert", "str"], "variables": ["members_fetched", "Assert", "queried_with_token", "task_children_fetched", "copy_only", "apps_fetched", "limit", "teams_fetched", "query", "check_query", "queried_with_file_tags", "file_saved", "self", "copied_to_folder", "file_copy_job_fetched", "category", "divisions_fetched", "ProjectVerifier", "members_retrieved", "revision_created", "AutomationPackageVerifier", "check_post_data", "query_owner", "name", "moved_to_folder", "include_archived", "folder_created", "modified", "ExportsVerifier", "queried_with_file_metadata", "task_fetched", "member_retrieved", "authenticated_user_fetched", "ImportsVerifier", "task_saved", "AutomationMemberVerifier", "TeamVerifier", "tasks_for_project_fetched", "action_restore_performed", "offset", "updated", "file_copied", "ActionVerifier", "queried_with_file_name", "bulk_deleted", "bulk_submitted", "AsyncJobVerifier", "action_performed", "team_fetched", "AppVerifier", "app_fetched", "file_saved_tags", "folder_files_listed_scroll", "state_fetched", "UserVerifier", "tasks_with_dates_fetched", "file_delete_job_fetched", "submitted", "queried_with_parent", "check_url", "member_permissions_modified", "app_installed", "division_fetched", "package_retrieved", "file_move_job_fetched", "visibility", "reran", "VolumeVerifier", "runs_retrieved", "saved", "__init__", "files_for_project_fetched", "bulk_updated", "bulk_copy_done", "packages_retrieved", "FileVerifier", "folder_files_listed", "log_fetched", "queried", "download_info_fetched", "EndpointVerifier", "fetched", "AutomationRunVerifier", "DRSImportsVerifier", "listed", "feedback_received", "app_copied", "MarkerVerifier", "owned_by", "TaskVerifier", "queried_with_file_origin", "execution_details_fetched", "MemberVerifier", "task_created", "DatasetVerifier", "bulk_edited", "member_added", "DivisionVerifier", "AutomationVerifier", "owner", "member_removed", "bulk_retrieved", "tags", "check_header_present", "stopped", "qs", "action_archive_performed", "async_files_deleted", "apps_for_project_fetched", "url", "async_files_moved", "async_files_copied", "created"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/decorators.py", "imports": ["NotFound", "ServiceUnavailable", "sevenbridges.errors", "logging", "RequestTimeout", "Conflict", "MethodNotAllowed", "NonJSONResponseError", "ServerError", "JSONDecodeError", "BadRequest", "requests", "json", "TooManyRequests", "Unauthorized", "copy", "func", "Forbidden", "SbgError", "functools", "method", "range", "str"], "variables": ["status_code", "throttle", "e", "response", "wrapped", "api_object", "wrapper", "inplace_reload", "logger", "check_for_error", "in_place", "data"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/meta/fields.py", "imports": ["type", "uuid", "sevenbridges.errors", "object", "len", "ReadOnlyPropertyError", "datetime", "super", "isinstance", "UUID", "float", "ValidationError"], "variables": ["CompoundField", "HrefField", "FloatField", "datetime_format", "read_only", "ObjectIdField", "DictField", "cls", "EMPTY", "current_value", "value", "self", "__init__", "max_length", "CompoundListField", "IntegerField", "UuidField", "DateTimeField", "name", "StringField", "__get__", "Field", "BooleanField", "validate", "__set__", "validator", "BasicListField", "data"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/meta/resource.py", "imports": ["sevenbridges.errors", "logging", "sevenbridges.meta.fields", "RequestParameters", "sevenbridges.models.link", "sevenbridges.meta.transformer", "isinstance", "NonJSONResponseError", "cls", "type", "JSONDecodeError", "json", "sevenbridges.models.enums", "Transform", "copy", "hasattr", "SbgError", "Field", "Collection", "_data_diff", "getattr", "sevenbridges.meta.data", "sevenbridges.meta.collection", "str", "Link", "DataContainer"], "variables": ["deepcopy", "_set", "response", "field", "urls", "old_keys", "update_read_only", "logger", "modified_data", "__new__", "update_old", "equals", "cls", "items", "read_only_fields", "metadata", "inner_diff", "_URL", "query", "objtype", "Resource", "__init__", "total", "reload", "get", "links", "difference", "validated_value", "fields", "new_keys", "delete", "__get__", "ResourceMeta", "id", "_API", "_data_diff", "_query", "resource", "init", "url", "obj", "data", "api", "extra", "href"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/models/app.py", "imports": ["sevenbridges.errors", "logging", "sevenbridges.meta.fields", "HrefField", "re", "sevenbridges.meta.transformer", "DictField", "AppRawFormat", "type", "Resource", "sevenbridges.models.enums", "AppCopyStrategy", "Transform", "IntegerField", "super", "StringField", "SbgError", "sevenbridges.meta.resource", "App"], "variables": ["install_app", "raw", "offset", "logger", "_id", "__eq__", "raw_format", "app_wrapper", "_CONTENT_TYPE", "visibility", "project", "cls", "sync", "limit", "app", "_URL", "query", "self", "strategy", "use_revision", "copy", "create_revision", "app_id", "name", "q", "headers", "revision", "id", "__str__", "get_revision", "App", "data", "api", "extra", "href"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/models/automation.py", "imports": ["sevenbridges.models.member", "sevenbridges.errors", "logging", "CompoundField", "sevenbridges.meta.fields", "sevenbridges.decorators", "HrefField", "Automation", "RequestParameters", "sevenbridges.transfer.upload", "sevenbridges.meta.transformer", "DictField", "AutomationRun", "isinstance", "type", "ResourceNotModified", "CodePackageUpload", "inplace_reload", "Resource", "Permissions", "sevenbridges.models.enums", "AutomationRunActions", "AutomationPackage", "Transform", "IntegerField", "File", "super", "UuidField", "DateTimeField", "dict", "StringField", "SbgError", "AutomationMember", "BooleanField", "sevenbridges.meta.resource", "sevenbridges.models.file"], "variables": ["add_member", "location", "get_log_file", "automation_id", "package_id", "modified_on", "get_member", "limit", "inputs", "query", "self", "AutomationPackage", "custom_url", "permissions", "name", "created_to", "message", "include_archived", "modified", "id", "restore", "package_data", "created_from", "get_package", "get_members", "api", "schema", "remove_member", "resumed_from", "package_file", "description", "version", "file_path", "remove", "offset", "get_state", "logger", "AutomationRun", "resume_from", "stop", "_URL", "part_size", "end_time", "rerun", "timeout", "member", "order_by", "secret_settings", "get", "add_package", "start_time", "order", "outputs", "data", "href", "automation", "username", "project_id", "user", "merge", "save", "package", "type", "archive", "upload", "created_on", "execution_details", "project_based", "settings", "get_packages", "AutomationMember", "__str__", "status", "archived", "billing_group", "retry_count", "log_file_data", "automation_data", "get_runs", "Automation", "member_data", "new_data", "modified_data", "__eq__", "email", "automation_run", "modified_by", "cls", "add", "file_name", "create", "owner", "inplace", "memory_limit", "url", "created_by", "extra"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/models/billing_breakdown.py", "imports": ["Price", "sevenbridges.models.compound.price", "CompoundField", "sevenbridges.models.compound.billing.project_breakdown", "sevenbridges.meta.fields", "sevenbridges.meta.resource", "HrefField", "Resource", "ProjectBreakdown", "CompoundListField"], "variables": ["BillingGroupBreakdown", "__str__", "project_breakdown", "_URL", "total_spending", "href"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/models/billing_group.py", "imports": ["BillingGroupAnalysisBreakdown", "type", "sevenbridges.models.compound.price", "CompoundField", "Price", "BooleanField", "sevenbridges.meta.fields", "HrefField", "sevenbridges.meta.resource", "super", "BillingGroupEgressBreakdown", "Resource", "UuidField", "sevenbridges.models.billing_storage_breakdown", "StringField", "sevenbridges.models.billing_analysis_breakdown", "BillingGroupStorageBreakdown", "sevenbridges.models.billing_egress_breakdown"], "variables": ["date_from", "offset", "analysis_breakdown", "__eq__", "cls", "type", "limit", "date_to", "_URL", "query", "BillingGroup", "invoice_id", "self", "egress_breakdown", "storage_breakdown", "owner", "name", "pending", "fields", "id", "disabled", "__str__", "balance", "api", "href"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/models/bulk.py", "imports": ["CompoundField", "sevenbridges.meta.fields", "sevenbridges.meta.resource", "Resource", "Error", "sevenbridges.models.compound.error", "cls"], "variables": ["__str__", "response", "api", "resource", "record", "records", "parse_records", "cls", "BulkRecord", "data", "error", "valid"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/models/compound/billing/project_breakdown.py", "imports": ["Price", "sevenbridges.models.compound.price", "CompoundField", "TaskBreakdown", "sevenbridges.meta.fields", "sevenbridges.meta.resource", "sevenbridges.models.compound.billing.task_breakdown", "HrefField", "Resource", "CompoundListField"], "variables": ["__str__", "analysis_spending", "ProjectBreakdown", "task_breakdown", "href"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/models/compound/billing/task_breakdown.py", "imports": ["Price", "sevenbridges.models.compound.price", "CompoundField", "sevenbridges.meta.fields", "sevenbridges.meta.resource", "HrefField", "Resource", "DateTimeField", "StringField"], "variables": ["__str__", "TaskBreakdown", "runner_username", "time_finished", "time_started", "task_cost", "href"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/models/compound/files/download_info.py", "imports": ["sevenbridges.meta.fields", "Resource", "sevenbridges.meta.resource", "HrefField"], "variables": ["url", "__str__", "DownloadInfo"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/models/compound/limits/rate.py", "imports": ["IntegerField", "sevenbridges.meta.fields", "sevenbridges.meta.resource", "Resource", "DateTimeField"], "variables": ["Rate", "limit", "__str__", "reset", "remaining"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/models/dataset.py", "imports": ["sevenbridges.models.member", "logging", "sevenbridges.meta.fields", "sevenbridges.decorators", "HrefField", "Member", "sevenbridges.models.link", "sevenbridges.meta.transformer", "type", "inplace_reload", "Resource", "Transform", "super", "StringField", "Collection", "sevenbridges.meta.resource", "sevenbridges.meta.collection", "Link", "Dataset"], "variables": ["add_member", "remove_member", "response", "description", "save", "members", "logger", "modified_data", "__eq__", "get_member", "visibility", "cls", "_URL", "query", "dataset", "self", "total", "member", "links", "permissions", "inplace", "name", "id", "__str__", "dataset_request_data", "get_members", "get_owned_by", "data", "api", "Dataset", "href", "username"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/models/division.py", "imports": ["type", "sevenbridges.meta.fields", "HrefField", "sevenbridges.meta.resource", "super", "Resource", "StringField"], "variables": ["id", "limit", "__str__", "__eq__", "role", "_URL", "query", "offset", "self", "get_members", "name", "api", "Division", "href", "get_teams", "cls"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/models/endpoints.py", "imports": ["logging", "sevenbridges.meta.fields", "sevenbridges.meta.resource", "HrefField", "Resource", "Endpoints"], "variables": ["tasks_url", "upload_url", "action_url", "projects_url", "logger", "billing_url", "cls", "_URL", "endpoints", "files_url", "get", "user_url", "Endpoints", "apps_url", "__str__", "rate_limit_url", "users_url", "api", "extra"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/models/execution_details.py", "imports": ["sevenbridges.meta.fields", "sevenbridges.meta.resource", "HrefField", "sevenbridges.models.compound.jobs.job", "Resource", "DateTimeField", "StringField", "CompoundListField", "Job"], "variables": ["message", "__str__", "status", "end_time", "start_time", "href", "ExecutionDetails", "jobs"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/models/file.py", "imports": ["Download", "FileOrigin", "sevenbridges.errors", "logging", "CompoundField", "sevenbridges.meta.fields", "HrefField", "sevenbridges.decorators", "len", "sevenbridges.transfer.upload", "RequestParameters", "sevenbridges.models.compound.files.file_origin", "sevenbridges.meta.transformer", "BulkRecord", "sevenbridges.models.compound.files.file_storage", "isinstance", "cls", "type", "ResourceNotModified", "inplace_reload", "sevenbridges.models.bulk", "Metadata", "Resource", "sevenbridges.models.enums", "os", "Transform", "Upload", "IntegerField", "File", "sevenbridges.models.compound.files.metadata", "super", "DownloadInfo", "delattr", "DateTimeField", "PartSize", "hasattr", "sevenbridges.transfer.download", "StringField", "SbgError", "open", "FileStorage", "sevenbridges.meta.resource", "LocalFileAlreadyExists", "sevenbridges.models.compound.files.download_info", "BasicListField", "tempfile"], "variables": ["origin_params", "metadata_params", "retry", "response", "files", "save", "offset", "FOLDER_TYPE", "logger", "modified_on", "__eq__", "parent", "storage", "names", "path", "modified_data", "project", "cls", "type", "metadata", "limit", "info", "content", "wait", "upload", "_URL", "created_on", "query", "dataset", "part_size", "self", "chunk_size", "stream", "bulk_delete", "move_to_folder", "download_info", "size", "timeout", "reload", "create_folder", "cont_token", "file_ids", "encoding", "file_name", "File", "copy", "FileBulkRecord", "tags", "bulk_edit", "inplace", "_secondary_files", "secondary_files", "query_params", "name", "silent", "list_files", "id", "__str__", "resource", "bulk_update", "bulk_get", "url", "is_folder", "origin", "new_file", "copy_to_folder", "data", "api", "extra", "href", "overwrite", "download"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/models/invoice.py", "imports": ["type", "sevenbridges.models.compound.price", "CompoundField", "Price", "BooleanField", "sevenbridges.meta.fields", "HrefField", "sevenbridges.meta.resource", "sevenbridges.models.compound.billing.invoice_period", "InvoicePeriod", "super", "Resource", "StringField"], "variables": ["id", "limit", "__str__", "api", "storage_costs", "invoice_period", "_URL", "query", "Invoice", "offset", "total", "pending", "__eq__", "href", "analysis_costs", "cls"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/models/link.py", "imports": ["sevenbridges.meta.fields", "HrefField", "sevenbridges.meta.resource", "Resource", "StringField"], "variables": ["next", "__str__", "method", "VolumeLink", "rel", "Link", "href"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/models/marker.py", "imports": ["sevenbridges.errors", "logging", "CompoundField", "sevenbridges.meta.fields", "sevenbridges.decorators", "HrefField", "sevenbridges.meta.transformer", "type", "ResourceNotModified", "sevenbridges.models.compound.markers.position", "inplace_reload", "MarkerPosition", "Resource", "Transform", "super", "DateTimeField", "StringField", "Marker", "sevenbridges.meta.resource"], "variables": ["save", "offset", "marker", "position", "logger", "modified_data", "__eq__", "cls", "limit", "created_time", "_URL", "query", "self", "chromosome", "marker_data", "extra", "create", "inplace", "private", "name", "id", "__str__", "Marker", "created_by", "file", "api", "data", "href"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/models/member.py", "imports": ["sevenbridges.models.compound.projects.permissions", "type", "ResourceNotModified", "sevenbridges.errors", "logging", "CompoundField", "sevenbridges.meta.fields", "sevenbridges.decorators", "HrefField", "sevenbridges.meta.resource", "inplace_reload", "Resource", "Permissions", "StringField"], "variables": ["id", "type", "__str__", "extra", "Member", "_URL", "permissions", "save", "inplace", "self", "url", "logger", "data", "__eq__", "href", "email", "username"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/models/project.py", "imports": ["sevenbridges.models.member", "sevenbridges.errors", "logging", "CompoundField", "sevenbridges.meta.fields", "sevenbridges.decorators", "HrefField", "Member", "sevenbridges.models.link", "sevenbridges.meta.transformer", "isinstance", "type", "ResourceNotModified", "inplace_reload", "Project", "sevenbridges.models.compound.projects.settings", "Resource", "Transform", "Settings", "super", "UuidField", "DateTimeField", "StringField", "SbgError", "Collection", "sevenbridges.meta.resource", "sevenbridges.meta.collection", "BasicListField", "Link"], "variables": ["add_member", "remove_member", "user", "response", "run", "description", "save", "batch_by", "offset", "member_data", "members", "interruptible", "logger", "modified_on", "__eq__", "modified_data", "get_member", "email", "project", "cls", "type", "limit", "team", "app", "inputs", "_URL", "Project", "created_on", "query", "self", "get_tasks", "total", "create_task", "settings", "category", "get_apps", "links", "create", "owner", "tags", "permissions", "state", "inplace", "add_member_team", "disable_batch", "query_params", "name", "add_member_division", "volume", "execution_settings", "division", "revision", "id", "project_data", "__str__", "add_files", "batch_input", "root_folder", "add_member_email", "status", "url", "created_by", "billing_group", "get_members", "get_files", "data", "api", "extra", "href", "params", "get_imports", "get_exports", "username"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/models/storage_export.py", "imports": ["sevenbridges.errors", "logging", "CompoundField", "sevenbridges.meta.fields", "HrefField", "Export", "VolumeFile", "sevenbridges.meta.transformer", "BulkRecord", "DictField", "type", "VolumeProperties", "sevenbridges.models.compound.volumes.volume_file", "sevenbridges.models.compound.volumes.properties", "sevenbridges.models.bulk", "Resource", "Transform", "File", "super", "DateTimeField", "Error", "sevenbridges.models.compound.error", "StringField", "SbgError", "BooleanField", "sevenbridges.meta.resource", "sevenbridges.models.file"], "variables": ["source", "response", "Export", "location", "_source", "item", "offset", "logger", "__eq__", "cls", "copy_only", "limit", "items", "_URL", "query", "exports", "result", "finished_on", "_result", "extra", "submit_export", "file_", "properties", "ExportBulkRecord", "state", "volume", "error", "id", "__str__", "destination", "export_ids", "bulk_submit", "resource", "bulk_get", "_export", "file", "api", "data", "href", "params", "overwrite", "started_on"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/models/storage_import.py", "imports": ["sevenbridges.errors", "logging", "CompoundField", "sevenbridges.meta.fields", "HrefField", "VolumeFile", "Import", "sevenbridges.meta.transformer", "BulkRecord", "DictField", "type", "sevenbridges.models.compound.volumes.volume_file", "sevenbridges.models.bulk", "Resource", "Transform", "File", "super", "DateTimeField", "sevenbridges.models.compound.volumes.import_destination", "Error", "sevenbridges.models.compound.error", "StringField", "SbgError", "ImportDestination", "BooleanField", "sevenbridges.meta.resource", "sevenbridges.models.file"], "variables": ["_import", "source", "response", "location", "Import", "offset", "logger", "__eq__", "parent", "project", "cls", "items", "limit", "import_ids", "_URL", "preserve_folder_structure", "query", "submit_import", "result", "finished_on", "_result", "ImportBulkRecord", "imports", "import_config", "properties", "autorename", "state", "name", "volume", "error", "id", "__str__", "destination", "bulk_submit", "resource", "bulk_get", "data", "api", "extra", "href", "overwrite", "started_on"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/models/task.py", "imports": ["sevenbridges.errors", "logging", "CompoundField", "Task", "sevenbridges.meta.fields", "sevenbridges.decorators", "HrefField", "callback", "sevenbridges.meta.transformer", "BulkRecord", "DictField", "TaskValidationError", "isinstance", "type", "FileApiFormats", "sevenbridges.models.execution_details", "sevenbridges.models.compound.tasks.output", "Input", "BatchGroup", "inplace_reload", "sevenbridges.models.bulk", "Resource", "sevenbridges.models.app", "sevenbridges.models.enums", "sevenbridges.models.compound.tasks.execution_status", "time", "Transform", "TaskStatus", "BatchBy", "File", "ExecutionStatus", "super", "UuidField", "DateTimeField", "dict", "StringField", "SbgError", "ExecutionDetails", "sevenbridges.models.compound.tasks.batch_by", "Output", "sevenbridges.models.compound.price", "Price", "BooleanField", "sevenbridges.meta.resource", "sevenbridges.models.compound.tasks.input", "App", "sevenbridges.models.file", "sevenbridges.models.compound.tasks.batch_group"], "variables": ["task_data", "started_from", "Task", "batch", "abort", "project", "limit", "created_time", "inputs", "query", "self", "task_meta", "serialized_es_mapping", "execution_settings", "name", "created_to", "id", "task_request_data", "resource", "created_from", "instance_type", "api", "task_ids", "response", "description", "batch_by", "offset", "interruptible", "use_interruptible_instances", "logger", "ended_from", "tasks", "get_batch_children", "wait", "started_to", "_URL", "end_time", "order_by", "task", "app_id", "_to_api_file_format", "start_time", "order", "_serialize_inputs", "use_memoization", "outputs", "revision", "created_task", "return_value", "origin", "params", "data", "href", "save", "batch_group", "type", "app", "ended_to", "use_elastic_disc", "serialized_es", "get_execution_details", "__str__", "batch_input", "bulk_get", "status", "task_inputs", "max_parallel_instances", "warnings", "run", "modified_data", "clone", "__eq__", "parent", "price", "errors", "cls", "executed_by", "_serialize_execution_settings", "create", "inplace", "disable_batch", "execution_status", "TaskBulkRecord", "created_by", "extra"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/models/team.py", "imports": ["sevenbridges.errors", "logging", "sevenbridges.meta.fields", "sevenbridges.decorators", "HrefField", "sevenbridges.models.link", "sevenbridges.meta.transformer", "type", "ResourceNotModified", "inplace_reload", "Resource", "Transform", "super", "TeamMember", "StringField", "sevenbridges.models.team_member", "Team", "Collection", "sevenbridges.meta.resource", "sevenbridges.meta.collection", "Link"], "variables": ["add_member", "remove_member", "user", "response", "save", "offset", "member_data", "members", "logger", "modified_data", "__eq__", "cls", "limit", "team", "_URL", "query", "list_all", "self", "total", "member", "links", "create", "inplace", "name", "Team", "division", "id", "__str__", "created_team", "get_members", "data", "api", "extra", "href"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/models/team_member.py", "imports": ["type", "logging", "sevenbridges.meta.fields", "HrefField", "sevenbridges.meta.resource", "Resource", "StringField"], "variables": ["id", "__str__", "role", "logger", "TeamMember", "__eq__", "href", "username"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/models/user.py", "imports": ["type", "logging", "sevenbridges.meta.fields", "sevenbridges.meta.resource", "HrefField", "super", "Resource", "sevenbridges.meta.transformer", "StringField", "Transform", "User"], "variables": ["user", "phone", "offset", "disable", "logger", "__eq__", "email", "last_name", "country", "cls", "limit", "username", "User", "role", "_URL", "address", "query", "zip_code", "self", "affiliation", "get", "user_data", "api", "state", "me", "division", "__str__", "params", "first_name", "extra", "href", "city"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/models/volume.py", "imports": ["sevenbridges.models.member", "sevenbridges.errors", "logging", "CompoundField", "sevenbridges.meta.fields", "sevenbridges.decorators", "HrefField", "Member", "sevenbridges.models.link", "sevenbridges.meta.transformer", "sevenbridges.models.compound.volumes.service", "isinstance", "VolumeObject", "type", "ResourceNotModified", "VolumeType", "VolumePrefix", "sevenbridges.models.compound.volumes.volume_object", "inplace_reload", "Resource", "sevenbridges.models.enums", "Transform", "super", "DateTimeField", "VolumeService", "VolumeCollection", "StringField", "Volume", "BooleanField", "Collection", "sevenbridges.models.compound.volumes.volume_prefix", "sevenbridges.meta.resource", "VolumeLink", "sevenbridges.meta.collection", "Link"], "variables": ["add_member", "remove_member", "user", "response", "description", "access_mode", "save", "offset", "create_s3_volume", "members", "member_data", "logger", "modified_on", "__eq__", "modified_data", "create_oss_volume", "get_member", "client_email", "cls", "project", "limit", "list", "team", "_URL", "created_on", "query", "param", "self", "private_key", "total", "get_volume_object_info", "configuration", "role_arn", "prefix", "bucket", "links", "properties", "state", "inplace", "objects", "add_member_team", "create_google_iam_volume", "active", "name", "service", "volume", "add_member_division", "Volume", "create_s3_volume_role_auth", "division", "id", "__str__", "create_google_volume", "secret_access_key", "prefixes", "endpoint", "access_key_id", "get_members", "get_exports", "get_imports", "data", "api", "extra", "href", "params", "external_id", "username"]}, {"author": "Aleksandar Pavlovic", "path": "sevenbridges/http/client.py", "imports": ["sevenbridges", "sevenbridges.config", "maintenance_sleeper", "sevenbridges.errors", "logging", "mask_secrets", "sevenbridges.decorators", "len", "platform", "RequestParameters", "isinstance", "generate_session", "throttle", "requests", "Config", "json", "sevenbridges.models.enums", "float", "config_vars", "callable", "copy", "int", "datetime", "super", "URITooLong", "hasattr", "threading", "check_for_error", "RequestSession", "SbgError", "urllib3", "format_proxies", "getattr", "error_handler", "sevenbridges.http.error_handlers"], "variables": ["key", "verb", "retries", "response", "mask_secrets", "add_error_handler", "proxies", "send", "logger", "pool_connections", "AAHeader", "backoff_factor", "max_parallel_requests", "remaining", "generate_session", "limit", "handled_response", "request_id", "value", "client_info", "self", "stream", "__init__", "timeout", "_rate_limit", "__repr__", "config_vars", "reset_time", "append_base", "get", "post", "_request", "advance_access", "pool_block", "RequestSession", "aa", "HttpClient", "headers", "token", "delete", "masked_request_data", "error_handlers", "__str__", "put", "request_data", "adapter", "masked", "remove_error_handler", "oauth_token", "url", "retry_count", "pool_maxsize", "params", "data", "patch", "session", "config"]}, {"author": "Aleksandar Pavlovic", "path": "sevenbridges/meta/data.py", "imports": ["logging", "dict"], "variables": ["__setitem__", "__getitem__", "item", "self", "fetch", "__init__", "logger", "DataContainer", "headers", "href", "resource_id"]}, {"author": "Aleksandar Pavlovic", "path": "sevenbridges/models/billing_analysis_breakdown.py", "imports": ["CompoundField", "sevenbridges.models.compound.analysis_cost", "BooleanField", "sevenbridges.meta.fields", "sevenbridges.meta.resource", "super", "FloatField", "Resource", "UuidField", "DateTimeField", "StringField", "AnalysisCost"], "variables": ["analysis_status", "analysis_type", "date_from", "offset", "project_locked", "cls", "limit", "date_to", "analysis_id", "analysis_cost", "refunded_amount", "_URL", "query", "analysis_app_name", "invoice_id", "project_name", "BillingGroupAnalysisBreakdown", "ran_by", "time_started", "analysis_name", "fields", "__str__", "bg_id", "time_finished", "api"]}, {"author": "Aleksandar Pavlovic", "path": "sevenbridges/models/billing_egress_breakdown.py", "imports": ["CompoundField", "BooleanField", "Measurement", "sevenbridges.meta.fields", "sevenbridges.meta.resource", "super", "sevenbridges.models.compound.egress_cost", "Resource", "sevenbridges.models.compound.measurement", "StringField", "EgressCost"], "variables": ["limit", "date_to", "__str__", "bg_id", "date_from", "_URL", "query", "BillingGroupEgressBreakdown", "egress_cost", "invoice_id", "downloaded_by", "offset", "downloaded", "project_locked", "api", "fields", "project_name", "cls"]}, {"author": "Aleksandar Pavlovic", "path": "sevenbridges/models/billing_group.py", "imports": ["BillingGroupAnalysisBreakdown", "type", "sevenbridges.models.compound.price", "CompoundField", "Price", "BooleanField", "sevenbridges.meta.fields", "HrefField", "sevenbridges.meta.resource", "super", "BillingGroupEgressBreakdown", "Resource", "UuidField", "sevenbridges.models.billing_storage_breakdown", "StringField", "sevenbridges.models.billing_analysis_breakdown", "BillingGroupStorageBreakdown", "sevenbridges.models.billing_egress_breakdown"], "variables": ["date_from", "offset", "analysis_breakdown", "__eq__", "cls", "type", "limit", "date_to", "_URL", "query", "BillingGroup", "invoice_id", "self", "egress_breakdown", "storage_breakdown", "owner", "name", "pending", "fields", "id", "disabled", "__str__", "balance", "api", "href"]}, {"author": "Aleksandar Pavlovic", "path": "sevenbridges/models/billing_storage_breakdown.py", "imports": ["CompoundField", "BooleanField", "Measurement", "sevenbridges.meta.fields", "sevenbridges.meta.resource", "super", "Resource", "sevenbridges.models.compound.measurement", "StringField"], "variables": ["date_from", "location", "offset", "project_created_by", "project_locked", "cls", "limit", "date_to", "_URL", "query", "invoice_id", "project_name", "BillingGroupStorageBreakdown", "active", "fields", "__str__", "bg_id", "archived", "api"]}, {"author": "Aleksandar Pavlovic", "path": "sevenbridges/models/compound/analysis_cost.py", "imports": ["AnalysisCostBreakdown", "CompoundField", "sevenbridges.meta.fields", "sevenbridges.meta.resource", "Resource", "StringField", "sevenbridges.models.compound.analysis_cost_breakdown"], "variables": ["__str__", "amount", "breakdown", "AnalysisCost", "currency"]}, {"author": "Aleksandar Pavlovic", "path": "sevenbridges/models/compound/analysis_cost_breakdown.py", "imports": ["sevenbridges.meta.fields", "FloatField", "Resource", "sevenbridges.meta.resource"], "variables": ["AnalysisCostBreakdown", "__str__", "computation", "storage", "data_transfer_in"]}, {"author": "Aleksandar Pavlovic", "path": "sevenbridges/models/compound/egress_cost.py", "imports": ["sevenbridges.meta.fields", "StringField", "Resource", "sevenbridges.meta.resource"], "variables": ["EgressCost", "__str__", "currency", "amount"]}, {"author": "Aleksandar Pavlovic", "path": "sevenbridges/models/compound/measurement.py", "imports": ["sevenbridges.meta.fields", "sevenbridges.meta.resource", "FloatField", "Resource", "StringField"], "variables": ["size", "Measurement", "__str__", "unit"]}, {"author": "Danilo Jovanovic", "path": "sevenbridges/models/project.py", "imports": ["sevenbridges.models.member", "sevenbridges.errors", "logging", "CompoundField", "sevenbridges.meta.fields", "sevenbridges.decorators", "HrefField", "Member", "sevenbridges.models.link", "sevenbridges.meta.transformer", "isinstance", "type", "ResourceNotModified", "inplace_reload", "Project", "sevenbridges.models.compound.projects.settings", "Resource", "Transform", "Settings", "super", "UuidField", "DateTimeField", "StringField", "SbgError", "Collection", "sevenbridges.meta.resource", "sevenbridges.meta.collection", "BasicListField", "Link"], "variables": ["add_member", "remove_member", "user", "response", "run", "description", "save", "batch_by", "offset", "member_data", "members", "interruptible", "logger", "modified_on", "__eq__", "modified_data", "get_member", "email", "project", "cls", "type", "limit", "team", "app", "inputs", "_URL", "Project", "created_on", "query", "self", "get_tasks", "total", "create_task", "settings", "category", "get_apps", "links", "create", "owner", "tags", "permissions", "state", "inplace", "add_member_team", "disable_batch", "query_params", "name", "add_member_division", "volume", "execution_settings", "division", "revision", "id", "project_data", "__str__", "add_files", "batch_input", "root_folder", "add_member_email", "status", "url", "created_by", "billing_group", "get_members", "get_files", "data", "api", "extra", "href", "params", "get_imports", "get_exports", "username"]}, {"author": "Danilo Jovanovic", "path": "tests/providers.py", "imports": ["faker", "int", "len", "range", "re", "FileProvider", "str", "AutomationMemberProvider", "AutomationPackageProvider", "AutomationRunProvider", "time", "MemberProvider"], "variables": ["default_task", "href_no_parent", "can_be_retrieved_in_bulk", "task_can_be_run", "CodePackageUploadProvider", "location", "all_files", "tasks_in_project_for_parent", "DatasetProvider", "package_id", "automation_id", "upload_id", "files_exist_for_file_origin", "can_be_edited_in_bulk", "project", "prev_url", "can_create_folder", "task_execution_details_exist", "task_exists", "team", "query", "dataset", "ImportsProvider", "self", "default_async_job", "MarkerProvider", "result", "list_data", "id_", "created", "copy_result", "imports", "has_runs", "AutomationProvider", "permissions", "can_copy_files", "can_be_copied", "default_member", "name", "VolumeProvider", "volume_created", "all_tasks", "headers", "division", "modified", "finalized_upload", "id", "got_file_part", "default_export", "failed", "paginated_projects", "permissions_can_be_modified", "default_file", "AutomationPackageProvider", "default_automation_package", "exist", "schema", "response", "files_exist_for_file_metadata", "ActionProvider", "default_division", "import_", "version", "apps_exist_for_project", "tasks_exist_for_parent", "has_members", "can_be_modified", "apps_exist", "regx", "new_id", "files_exist_for_folder", "ProjectProvider", "items", "can_delete_files", "status_code", "rate", "AsyncJobProvider", "download_info_defined", "default_project", "EndpointProvider", "default_team", "task_can_be_clone", "part_size", "all_links", "default_marker", "json", "endpoints", "exports", "authenticated", "member", "file_id", "can_be_submitted", "default_user", "has_member", "links", "tags_can_be_saved", "file_", "can_copy_to_folder", "task", "prev", "tasks_exists_for_project", "TeamMemberProvider", "default_automation", "RateLimitProvider", "can_be_archived", "exists", "can_remove_member", "can_be_deleted_in_bulk", "has_rerun", "data", "href", "automation", "can_be_restored", "username", "user", "next_url", "has_packages", "marker", "package", "files_exist_for_project", "UserProvider", "teams_exist", "got_etag", "MemberProvider", "ExportsProvider", "async_job", "app_exists", "app", "can_add_member", "default_automation_member", "has_state", "app_can_be_copied", "execution_details", "feedback_set", "default_copy_result", "__init__", "total", "can_be_removed", "download_info", "list_url", "can_be_saved", "sub_items", "files_exist_for_file_tag", "app_with_revision_exists", "queried", "task_can_be_saved", "matcher", "state", "all_items", "default_import", "paginated_file_list", "initialized_upload", "limit_available", "revision_can_be_created", "default_volume", "status", "task_can_be_aborted", "members_exist", "can_be_stopped", "default_automation_run", "owned_by", "TeamProvider", "member_exist", "tasks_in_project", "list_file_jobs", "can_move_to_folder", "can_be_queried", "can_be_submitted_in_bulk", "num_of_files", "scroll", "FileProvider", "AutomationRunProvider", "parent", "email", "AppProvider", "automation_run", "folder_id", "can_be_updated_in_bulk", "automation_member", "can_move_files", "next_page_link", "default_state", "suffix", "defined", "can_add_package", "created_with_errors", "default_dataset", "owner", "DivisionProvider", "DRSImportProvider", "export", "app_can_be_installed", "deleted", "FileUploadProvider", "AutomationMemberProvider", "TaskProvider", "volume", "default_app", "can_bulk_copy", "files_in_folder", "default_rate", "can_be_created", "metadata_can_be_saved", "url", "files_exist_for_file_name", "reported_part", "app_exist_non_json", "has_package", "generator"]}, {"author": "Danilo Jovanovic", "path": "tests/test_projects.py", "imports": ["faker", "ResourceNotModified", "sevenbridges.errors", "repr", "set", "len", "pytest", "SbgError"], "variables": ["project_description", "test_projects_get_tasks", "project_short_name", "files", "mocked_member", "members", "new_name", "test_project_get_files", "new_category", "test_get_project", "test_project_get_members", "test_create_project", "project", "email", "test_project_remove_member", "test_projects_get_apps", "test_member_permissions_save_no_changes", "test_query_projects_with_tags", "test_modify_project", "tag1", "projects", "test_query_projects_with_name_owner", "member_username", "member", "settings", "project_name", "category", "test_member_permissions_save", "owner", "tags", "test_project_get_member", "test_project_add_member", "name", "test_project_add_member_email", "id", "tag2", "billing_group", "test_query_projects_with_category", "test_query_projects_with_name", "generator", "test_query_projects_with_owner", "username"]}, {"author": "Danilo Jovanovic", "path": "tests/verifiers.py", "imports": ["print", "Assert", "str"], "variables": ["members_fetched", "Assert", "queried_with_token", "task_children_fetched", "copy_only", "apps_fetched", "limit", "teams_fetched", "query", "check_query", "queried_with_file_tags", "file_saved", "self", "copied_to_folder", "file_copy_job_fetched", "category", "divisions_fetched", "ProjectVerifier", "members_retrieved", "revision_created", "AutomationPackageVerifier", "check_post_data", "query_owner", "name", "moved_to_folder", "include_archived", "folder_created", "modified", "ExportsVerifier", "queried_with_file_metadata", "task_fetched", "member_retrieved", "authenticated_user_fetched", "ImportsVerifier", "task_saved", "AutomationMemberVerifier", "TeamVerifier", "tasks_for_project_fetched", "action_restore_performed", "offset", "updated", "file_copied", "ActionVerifier", "queried_with_file_name", "bulk_deleted", "bulk_submitted", "AsyncJobVerifier", "action_performed", "team_fetched", "AppVerifier", "app_fetched", "file_saved_tags", "folder_files_listed_scroll", "state_fetched", "UserVerifier", "tasks_with_dates_fetched", "file_delete_job_fetched", "submitted", "queried_with_parent", "check_url", "member_permissions_modified", "app_installed", "division_fetched", "package_retrieved", "file_move_job_fetched", "visibility", "reran", "VolumeVerifier", "runs_retrieved", "saved", "__init__", "files_for_project_fetched", "bulk_updated", "bulk_copy_done", "packages_retrieved", "FileVerifier", "folder_files_listed", "log_fetched", "queried", "download_info_fetched", "EndpointVerifier", "fetched", "AutomationRunVerifier", "DRSImportsVerifier", "listed", "feedback_received", "app_copied", "MarkerVerifier", "owned_by", "TaskVerifier", "queried_with_file_origin", "execution_details_fetched", "MemberVerifier", "task_created", "DatasetVerifier", "bulk_edited", "member_added", "DivisionVerifier", "AutomationVerifier", "owner", "member_removed", "bulk_retrieved", "tags", "check_header_present", "stopped", "qs", "action_archive_performed", "async_files_deleted", "apps_for_project_fetched", "url", "async_files_moved", "async_files_copied", "created"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/__init__.py", "imports": ["DRSImportBulk", "ServiceUnavailable", "Task", "Conflict", "Member", "AsyncJob", "Import", "MethodNotAllowed", "sevenbridges.models.async_jobs", "ExecutionDetailsInvalidTaskType", "ServerError", "ResourceNotModified", "VolumeType", "sevenbridges.models.user", "AutomationStatus", "sevenbridges.models.compound.volumes.volume_object", "Project", "Invoice", "BillingGroup", "sevenbridges.models.bulk", "sevenbridges.models.app", "AutomationPackage", "sevenbridges.models.dataset", "ImportExportState", "PartSize", "DivisionRole", "ValidationError", "Endpoints", "sevenbridges.models.automation", "Marker", "Dataset", "NotFound", "sevenbridges.errors", "logging", "sevenbridges.models.drs_import", "Division", "TaskValidationError", "AutomationRun", "sevenbridges.models.endpoints", "VolumeObject", "Config", "sevenbridges.models.storage_export", "TaskStatus", "sevenbridges.models.team", "__version__", "TeamMember", "SbgError", "Volume", "TransferState", "App", "sevenbridges.api", "AsyncFileOperations", "AsyncJobStates", "Export", "BulkRecord", "AppRawFormat", "sevenbridges.version", "BadRequest", "sevenbridges.models.project", "sevenbridges.models.volume", "Permissions", "sevenbridges.models.task", "Unauthorized", "VolumeAccessMode", "File", "Forbidden", "Team", "AutomationMember", "LocalFileAlreadyExists", "sevenbridges.models.file", "User", "sevenbridges.models.member", "sevenbridges.config", "RequestTimeout", "Automation", "sevenbridges.models.division", "sevenbridges.models.storage_import", "PaginationError", "ReadOnlyPropertyError", "sevenbridges.models.enums", "FileStorageType", "AutomationRunActions", "AppCopyStrategy", "TooManyRequests", "sevenbridges.models.invoice", "Api", "sevenbridges.models.marker", "ssl", "sevenbridges.models.billing_group"], "variables": ["required_ssl_version", "__all__"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/api.py", "imports": ["Actions", "DRSImportBulk", "sevenbridges.errors", "sevenbridges.models.drs_import", "Task", "Automation", "Export", "AsyncJob", "Import", "RateLimit", "sevenbridges.models.division", "RequestParameters", "sevenbridges.models.async_jobs", "Division", "requests.adapters", "AutomationRun", "sevenbridges.models.actions", "sevenbridges.models.endpoints", "ThreadPoolExecutor", "sevenbridges.models.user", "sevenbridges.models.storage_import", "sevenbridges.models.project", "Project", "Invoice", "BillingGroup", "sevenbridges.models.volume", "sevenbridges.models.app", "sevenbridges.models.enums", "AutomationPackage", "sevenbridges.models.dataset", "Dataset", "sevenbridges.models.storage_export", "sevenbridges.models.task", "concurrent.futures", "sevenbridges.models.team", "sevenbridges.models.invoice", "File", "super", "sevenbridges.models.marker", "HttpClient", "sevenbridges.http.client", "Team", "SbgError", "Volume", "Endpoints", "sevenbridges.models.automation", "Marker", "App", "sevenbridges.models.billing_group", "sevenbridges.models.file", "sevenbridges.models.rate_limit", "DEFAULT_POOLSIZE", "User"], "variables": ["drs_imports", "billing_groups", "files", "automation_runs", "proxies", "rate_limit", "teams", "tasks", "automations", "pool_connections", "max_parallel_requests", "backoff_factor", "datasets", "projects", "self", "__init__", "endpoints", "exports", "timeout", "automation_packages", "divisions", "markers", "imports", "actions", "Api", "invoices", "advance_access", "pool_block", "token", "users", "error_handlers", "debug", "apps", "volumes", "oauth_token", "url", "upload_max_workers", "retry_count", "download_max_workers", "pool_maxsize", "async_jobs", "config"]}, {"author": "Dejan Knezevic", "path": "tests/conftest.py", "imports": ["sevenbridges", "faker", "Verifier", "ConfigParser", "tests", "dict", "pytest", "Api", "Precondition", "providers", "verifiers", "requests_mock"], "variables": ["ConfigParser", "get", "Verifier", "api", "config_parser", "read", "request_mocker", "base_url", "__call__", "m", "given", "Mock", "__init__", "verifier", "data", "Precondition", "generator"]}, {"author": "Dejan Knezevic", "path": "docs/conf.py", "imports": ["sevenbridges", "__version__", "sys", "datetime", "os"], "variables": ["extra_path", "version", "htmlhelp_basename", "templates_path", "project", "epub_author", "master_doc", "author", "exclude_patterns", "epub_copyright", "html_show_sphinx", "extensions", "html_short_title", "man_pages", "source_suffix", "pygments_style", "latex_documents", "html_theme", "epub_title", "epub_exclude_files", "html_logo", "todo_include_todos", "language", "html_show_sourcelink", "copyright", "texinfo_documents", "epub_publisher", "latex_elements"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/__init__.py", "imports": ["DRSImportBulk", "ServiceUnavailable", "Task", "Conflict", "Member", "AsyncJob", "Import", "MethodNotAllowed", "sevenbridges.models.async_jobs", "ExecutionDetailsInvalidTaskType", "ServerError", "ResourceNotModified", "VolumeType", "sevenbridges.models.user", "AutomationStatus", "sevenbridges.models.compound.volumes.volume_object", "Project", "Invoice", "BillingGroup", "sevenbridges.models.bulk", "sevenbridges.models.app", "AutomationPackage", "sevenbridges.models.dataset", "ImportExportState", "PartSize", "DivisionRole", "ValidationError", "Endpoints", "sevenbridges.models.automation", "Marker", "Dataset", "NotFound", "sevenbridges.errors", "logging", "sevenbridges.models.drs_import", "Division", "TaskValidationError", "AutomationRun", "sevenbridges.models.endpoints", "VolumeObject", "Config", "sevenbridges.models.storage_export", "TaskStatus", "sevenbridges.models.team", "__version__", "TeamMember", "SbgError", "Volume", "TransferState", "App", "sevenbridges.api", "AsyncFileOperations", "AsyncJobStates", "Export", "BulkRecord", "AppRawFormat", "sevenbridges.version", "BadRequest", "sevenbridges.models.project", "sevenbridges.models.volume", "Permissions", "sevenbridges.models.task", "Unauthorized", "VolumeAccessMode", "File", "Forbidden", "Team", "AutomationMember", "LocalFileAlreadyExists", "sevenbridges.models.file", "User", "sevenbridges.models.member", "sevenbridges.config", "RequestTimeout", "Automation", "sevenbridges.models.division", "sevenbridges.models.storage_import", "PaginationError", "ReadOnlyPropertyError", "sevenbridges.models.enums", "FileStorageType", "AutomationRunActions", "AppCopyStrategy", "TooManyRequests", "sevenbridges.models.invoice", "Api", "sevenbridges.models.marker", "ssl", "sevenbridges.models.billing_group"], "variables": ["required_ssl_version", "__all__"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/api.py", "imports": ["Actions", "DRSImportBulk", "sevenbridges.errors", "sevenbridges.models.drs_import", "Task", "Automation", "Export", "AsyncJob", "Import", "RateLimit", "sevenbridges.models.division", "RequestParameters", "sevenbridges.models.async_jobs", "Division", "requests.adapters", "AutomationRun", "sevenbridges.models.actions", "sevenbridges.models.endpoints", "ThreadPoolExecutor", "sevenbridges.models.user", "sevenbridges.models.storage_import", "sevenbridges.models.project", "Project", "Invoice", "BillingGroup", "sevenbridges.models.volume", "sevenbridges.models.app", "sevenbridges.models.enums", "AutomationPackage", "sevenbridges.models.dataset", "Dataset", "sevenbridges.models.storage_export", "sevenbridges.models.task", "concurrent.futures", "sevenbridges.models.team", "sevenbridges.models.invoice", "File", "super", "sevenbridges.models.marker", "HttpClient", "sevenbridges.http.client", "Team", "SbgError", "Volume", "Endpoints", "sevenbridges.models.automation", "Marker", "App", "sevenbridges.models.billing_group", "sevenbridges.models.file", "sevenbridges.models.rate_limit", "DEFAULT_POOLSIZE", "User"], "variables": ["drs_imports", "billing_groups", "files", "automation_runs", "proxies", "rate_limit", "teams", "tasks", "automations", "pool_connections", "max_parallel_requests", "backoff_factor", "datasets", "projects", "self", "__init__", "endpoints", "exports", "timeout", "automation_packages", "divisions", "markers", "imports", "actions", "Api", "invoices", "advance_access", "pool_block", "token", "users", "error_handlers", "debug", "apps", "volumes", "oauth_token", "url", "upload_max_workers", "retry_count", "download_max_workers", "pool_maxsize", "async_jobs", "config"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/config.py", "imports": ["format_proxies", "UserProfile", "sevenbridges.errors", "logging", "configparser", "SbgError", "os"], "variables": ["format_proxies", "UserProfile", "api_endpoint", "profile", "CONFIG", "Config", "CREDENTIALS", "proxies", "cfg_profile", "self", "advance_access", "__init__", "logger", "auth_token"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/decorators.py", "imports": ["NotFound", "ServiceUnavailable", "sevenbridges.errors", "logging", "RequestTimeout", "Conflict", "MethodNotAllowed", "NonJSONResponseError", "ServerError", "JSONDecodeError", "BadRequest", "requests", "json", "TooManyRequests", "Unauthorized", "copy", "func", "Forbidden", "SbgError", "functools", "method", "range", "str"], "variables": ["status_code", "throttle", "e", "response", "wrapped", "api_object", "wrapper", "inplace_reload", "logger", "check_for_error", "in_place", "data"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/errors.py", "imports": ["super", "str"], "variables": ["NotFound", "ServiceUnavailable", "RequestTimeout", "AdvanceAccessError", "Conflict", "MethodNotAllowed", "more_info", "ExecutionDetailsInvalidTaskType", "TaskValidationError", "NonJSONResponseError", "ServerError", "ResourceNotModified", "BadRequest", "PaginationError", "ReadOnlyPropertyError", "self", "__init__", "TooManyRequests", "Unauthorized", "task", "Forbidden", "URITooLong", "code", "message", "SbgError", "ValidationError", "__str__", "status", "LocalFileAlreadyExists"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/http/client.py", "imports": ["sevenbridges", "sevenbridges.config", "maintenance_sleeper", "sevenbridges.errors", "logging", "mask_secrets", "sevenbridges.decorators", "len", "platform", "RequestParameters", "isinstance", "generate_session", "throttle", "requests", "Config", "json", "sevenbridges.models.enums", "float", "config_vars", "callable", "copy", "int", "datetime", "super", "URITooLong", "hasattr", "threading", "check_for_error", "RequestSession", "SbgError", "urllib3", "format_proxies", "getattr", "error_handler", "sevenbridges.http.error_handlers"], "variables": ["key", "verb", "retries", "response", "mask_secrets", "add_error_handler", "proxies", "send", "logger", "pool_connections", "AAHeader", "backoff_factor", "max_parallel_requests", "remaining", "generate_session", "limit", "handled_response", "request_id", "value", "client_info", "self", "stream", "__init__", "timeout", "_rate_limit", "__repr__", "config_vars", "reset_time", "append_base", "get", "post", "_request", "advance_access", "pool_block", "RequestSession", "aa", "HttpClient", "headers", "token", "delete", "masked_request_data", "error_handlers", "__str__", "put", "request_data", "adapter", "masked", "remove_error_handler", "oauth_token", "url", "retry_count", "pool_maxsize", "params", "data", "patch", "session", "config"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/http/error_handlers.py", "imports": ["int", "max", "time", "logging"], "variables": ["maintenance_sleeper", "general_error_sleeper", "repeatable_handler", "response", "response_body", "sleep", "remaining_time", "logger", "api", "headers", "rate_limit_sleeper"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/meta/collection.py", "imports": ["VolumeObject", "sevenbridges.errors", "VolumePrefix", "Collection", "sevenbridges.models.compound.volumes.volume_object", "PaginationError", "sevenbridges.models.compound.volumes.volume_prefix", "super", "VolumeLink", "int", "len", "sevenbridges.models.link", "Link", "VolumeCollection", "SbgError"], "variables": ["items", "page", "links", "response", "Collection", "resource", "prefixes", "next_page", "__repr__", "all", "__init__", "total", "_load", "data", "VolumeCollection", "href", "previous_page"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/meta/comp_mutable_dict.py", "imports": ["type", "super", "str"], "variables": ["CompoundMutableDict", "items", "__str__", "other", "e", "__setitem__", "values", "self", "__init__", "update", "__repr__", "equals"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/meta/data.py", "imports": ["logging", "dict"], "variables": ["__setitem__", "__getitem__", "item", "self", "fetch", "__init__", "logger", "DataContainer", "headers", "href", "resource_id"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/meta/fields.py", "imports": ["type", "uuid", "sevenbridges.errors", "object", "len", "ReadOnlyPropertyError", "datetime", "super", "isinstance", "UUID", "float", "ValidationError"], "variables": ["CompoundField", "HrefField", "FloatField", "datetime_format", "read_only", "ObjectIdField", "DictField", "cls", "EMPTY", "current_value", "value", "self", "__init__", "max_length", "CompoundListField", "IntegerField", "UuidField", "DateTimeField", "name", "StringField", "__get__", "Field", "BooleanField", "validate", "__set__", "validator", "BasicListField", "data"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/meta/resource.py", "imports": ["sevenbridges.errors", "logging", "sevenbridges.meta.fields", "RequestParameters", "sevenbridges.models.link", "sevenbridges.meta.transformer", "isinstance", "NonJSONResponseError", "cls", "type", "JSONDecodeError", "json", "sevenbridges.models.enums", "Transform", "copy", "hasattr", "SbgError", "Field", "Collection", "_data_diff", "getattr", "sevenbridges.meta.data", "sevenbridges.meta.collection", "str", "Link", "DataContainer"], "variables": ["deepcopy", "_set", "response", "field", "urls", "old_keys", "update_read_only", "logger", "modified_data", "__new__", "update_old", "equals", "cls", "items", "read_only_fields", "metadata", "inner_diff", "_URL", "query", "objtype", "Resource", "__init__", "total", "reload", "get", "links", "difference", "validated_value", "fields", "new_keys", "delete", "__get__", "ResourceMeta", "id", "_API", "_data_diff", "_query", "resource", "init", "url", "obj", "data", "api", "extra", "href"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/meta/transformer.py", "imports": ["sevenbridges.models.member", "sevenbridges.errors", "Task", "Automation", "Export", "Member", "AsyncJob", "Import", "sevenbridges.models.division", "sevenbridges.models.async_jobs", "Division", "AutomationRun", "isinstance", "sevenbridges.models.user", "sevenbridges.models.storage_import", "sevenbridges.models.project", "Project", "BillingGroup", "sevenbridges.models.volume", "Resource", "sevenbridges.models.app", "AutomationPackage", "sevenbridges.models.dataset", "sevenbridges.models.storage_export", "sevenbridges.models.task", "sevenbridges.models.team", "File", "datetime", "sevenbridges.models.marker", "hasattr", "Team", "SbgError", "Volume", "AutomationMember", "sevenbridges.models.automation", "Marker", "sevenbridges.meta.resource", "App", "sevenbridges.models.billing_group", "sevenbridges.models.file", "Dataset", "User"], "variables": ["to_tags", "to_dataset", "to_team", "tag_list", "to_automation_run", "to_automation", "to_task", "to_export", "to_import", "to_automation_package", "to_member", "to_datestring", "to_file", "to_user", "to_location", "Transform", "to_automation_member", "to_billing_group", "to_volume", "to_division", "to_project", "to_marker", "to_resource", "to_async_job", "to_app"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/models/actions.py", "imports": ["FeedbackType", "logging", "sevenbridges.meta.resource", "client_info", "Resource", "sevenbridges.models.enums", "str", "sevenbridges.meta.transformer", "sevenbridges.http.client", "Transform"], "variables": ["Actions", "type", "referrer", "__str__", "extra", "api", "files", "bulk_copy_files", "_URL", "send_feedback", "logger", "data", "text", "destination_project", "cls"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/models/app.py", "imports": ["sevenbridges.errors", "logging", "sevenbridges.meta.fields", "HrefField", "re", "sevenbridges.meta.transformer", "DictField", "AppRawFormat", "type", "Resource", "sevenbridges.models.enums", "AppCopyStrategy", "Transform", "IntegerField", "super", "StringField", "SbgError", "sevenbridges.meta.resource", "App"], "variables": ["install_app", "raw", "offset", "logger", "_id", "__eq__", "raw_format", "app_wrapper", "_CONTENT_TYPE", "visibility", "project", "cls", "sync", "limit", "app", "_URL", "query", "self", "strategy", "use_revision", "copy", "create_revision", "app_id", "name", "q", "headers", "revision", "id", "__str__", "get_revision", "App", "data", "api", "extra", "href"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/models/async_jobs.py", "imports": ["type", "IntegerField", "logging", "sevenbridges.meta.fields", "sevenbridges.meta.resource", "FileBulkRecord", "AsyncJob", "super", "sevenbridges.models.file", "Resource", "BasicListField", "DateTimeField", "sevenbridges.meta.transformer", "StringField", "Transform", "cls"], "variables": ["file_bulk_copy", "get_file_delete_job", "get_result", "list_file_jobs", "response", "get_file_copy_job", "files", "AsyncJob", "offset", "parse_records", "logger", "failed_files", "__eq__", "cls", "type", "async_job", "limit", "file_bulk_delete", "_URL", "self", "get_file_move_job", "result", "finished_on", "total_files", "state", "completed_files", "record", "id", "__str__", "AsyncFileBulkRecord", "records", "file_bulk_move", "data", "api", "started_on"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/models/automation.py", "imports": ["sevenbridges.models.member", "sevenbridges.errors", "logging", "CompoundField", "sevenbridges.meta.fields", "sevenbridges.decorators", "HrefField", "Automation", "RequestParameters", "sevenbridges.transfer.upload", "sevenbridges.meta.transformer", "DictField", "AutomationRun", "isinstance", "type", "ResourceNotModified", "CodePackageUpload", "inplace_reload", "Resource", "Permissions", "sevenbridges.models.enums", "AutomationRunActions", "AutomationPackage", "Transform", "IntegerField", "File", "super", "UuidField", "DateTimeField", "dict", "StringField", "SbgError", "AutomationMember", "BooleanField", "sevenbridges.meta.resource", "sevenbridges.models.file"], "variables": ["add_member", "location", "get_log_file", "automation_id", "package_id", "modified_on", "get_member", "limit", "inputs", "query", "self", "AutomationPackage", "custom_url", "permissions", "name", "created_to", "message", "include_archived", "modified", "id", "restore", "package_data", "created_from", "get_package", "get_members", "api", "schema", "remove_member", "resumed_from", "package_file", "description", "version", "file_path", "remove", "offset", "get_state", "logger", "AutomationRun", "resume_from", "stop", "_URL", "part_size", "end_time", "rerun", "timeout", "member", "order_by", "secret_settings", "get", "add_package", "start_time", "order", "outputs", "data", "href", "automation", "username", "project_id", "user", "merge", "save", "package", "type", "archive", "upload", "created_on", "execution_details", "project_based", "settings", "get_packages", "AutomationMember", "__str__", "status", "archived", "billing_group", "retry_count", "log_file_data", "automation_data", "get_runs", "Automation", "member_data", "new_data", "modified_data", "__eq__", "email", "automation_run", "modified_by", "cls", "add", "file_name", "create", "owner", "inplace", "memory_limit", "url", "created_by", "extra"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/models/billing_breakdown.py", "imports": ["Price", "sevenbridges.models.compound.price", "CompoundField", "sevenbridges.models.compound.billing.project_breakdown", "sevenbridges.meta.fields", "sevenbridges.meta.resource", "HrefField", "Resource", "ProjectBreakdown", "CompoundListField"], "variables": ["BillingGroupBreakdown", "__str__", "project_breakdown", "_URL", "total_spending", "href"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/models/billing_group.py", "imports": ["BillingGroupAnalysisBreakdown", "type", "sevenbridges.models.compound.price", "CompoundField", "Price", "BooleanField", "sevenbridges.meta.fields", "HrefField", "sevenbridges.meta.resource", "super", "BillingGroupEgressBreakdown", "Resource", "UuidField", "sevenbridges.models.billing_storage_breakdown", "StringField", "sevenbridges.models.billing_analysis_breakdown", "BillingGroupStorageBreakdown", "sevenbridges.models.billing_egress_breakdown"], "variables": ["date_from", "offset", "analysis_breakdown", "__eq__", "cls", "type", "limit", "date_to", "_URL", "query", "BillingGroup", "invoice_id", "self", "egress_breakdown", "storage_breakdown", "owner", "name", "pending", "fields", "id", "disabled", "__str__", "balance", "api", "href"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/models/bulk.py", "imports": ["CompoundField", "sevenbridges.meta.fields", "sevenbridges.meta.resource", "Resource", "Error", "sevenbridges.models.compound.error", "cls"], "variables": ["__str__", "response", "api", "resource", "record", "records", "parse_records", "cls", "BulkRecord", "data", "error", "valid"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/models/compound/billing/invoice_period.py", "imports": ["sevenbridges.meta.fields", "Resource", "sevenbridges.meta.resource", "DateTimeField"], "variables": ["from_", "to", "__str__", "InvoicePeriod"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/models/compound/billing/project_breakdown.py", "imports": ["Price", "sevenbridges.models.compound.price", "CompoundField", "TaskBreakdown", "sevenbridges.meta.fields", "sevenbridges.meta.resource", "sevenbridges.models.compound.billing.task_breakdown", "HrefField", "Resource", "CompoundListField"], "variables": ["__str__", "analysis_spending", "ProjectBreakdown", "task_breakdown", "href"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/models/compound/billing/task_breakdown.py", "imports": ["Price", "sevenbridges.models.compound.price", "CompoundField", "sevenbridges.meta.fields", "sevenbridges.meta.resource", "HrefField", "Resource", "DateTimeField", "StringField"], "variables": ["__str__", "TaskBreakdown", "runner_username", "time_finished", "time_started", "task_cost", "href"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/models/compound/error.py", "imports": ["IntegerField", "sevenbridges.meta.fields", "sevenbridges.meta.resource", "Resource", "StringField"], "variables": ["__str__", "status", "more_info", "code", "Error", "message"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/models/compound/files/download_info.py", "imports": ["sevenbridges.meta.fields", "Resource", "sevenbridges.meta.resource", "HrefField"], "variables": ["url", "__str__", "DownloadInfo"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/models/compound/files/file_origin.py", "imports": ["sevenbridges.meta.fields", "StringField", "Resource", "sevenbridges.meta.resource"], "variables": ["FileOrigin", "task", "__str__"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/models/compound/files/file_storage.py", "imports": ["sevenbridges.meta.fields", "StringField", "Resource", "sevenbridges.meta.resource"], "variables": ["type", "__str__", "FileStorage", "location", "volume"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/models/compound/files/metadata.py", "imports": ["CompoundMutableDict", "type", "sevenbridges.meta.comp_mutable_dict", "sevenbridges.meta.resource", "super", "Resource", "dict"], "variables": ["__getitem__", "Metadata", "__init__", "_name", "__eq__"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/models/compound/jobs/job.py", "imports": ["Logs", "CompoundField", "sevenbridges.models.compound.jobs.job_log", "BooleanField", "sevenbridges.meta.fields", "sevenbridges.meta.resource", "sevenbridges.models.compound.jobs.job_docker", "Instance", "Resource", "DateTimeField", "sevenbridges.models.compound.jobs.job_instance", "StringField", "JobDocker"], "variables": ["__str__", "logs", "retried", "status", "instance", "docker", "end_time", "name", "start_time", "command_line", "Job"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/models/compound/jobs/job_docker.py", "imports": ["sevenbridges.meta.fields", "StringField", "Resource", "sevenbridges.meta.resource"], "variables": ["checksum", "JobDocker", "__str__"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/models/compound/jobs/job_instance.py", "imports": ["sevenbridges.models.compound.jobs.job_instance_disk", "Disk", "CompoundField", "sevenbridges.meta.fields", "sevenbridges.meta.resource", "Resource", "StringField"], "variables": ["id", "type", "__str__", "Instance", "disk", "provider"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/models/compound/jobs/job_instance_disk.py", "imports": ["IntegerField", "sevenbridges.meta.fields", "sevenbridges.meta.resource", "Resource", "StringField"], "variables": ["Disk", "type", "__str__", "size", "unit"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/models/compound/jobs/job_log.py", "imports": ["CompoundMutableDict", "sevenbridges.errors", "logging", "File", "sevenbridges.meta.comp_mutable_dict", "sevenbridges.meta.resource", "ReadOnlyPropertyError", "super", "sevenbridges.models.file", "Resource", "re", "str", "SbgError"], "variables": ["Logs", "__setitem__", "__getitem__", "match", "__init__", "log", "_name", "logger", "file_id"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/models/compound/limits/rate.py", "imports": ["IntegerField", "sevenbridges.meta.fields", "sevenbridges.meta.resource", "Resource", "DateTimeField"], "variables": ["Rate", "limit", "__str__", "reset", "remaining"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/models/compound/markers/position.py", "imports": ["CompoundMutableDict", "sevenbridges.meta.comp_mutable_dict", "sevenbridges.meta.resource", "super", "Resource"], "variables": ["__getitem__", "_name", "__init__", "MarkerPosition"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/models/compound/price.py", "imports": ["CompoundField", "Breakdown", "sevenbridges.meta.fields", "sevenbridges.meta.resource", "sevenbridges.models.compound.price_breakdown", "FloatField", "Resource", "StringField"], "variables": ["__str__", "Price", "amount", "breakdown", "currency"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/models/compound/price_breakdown.py", "imports": ["sevenbridges.meta.fields", "StringField", "Resource", "sevenbridges.meta.resource"], "variables": ["__str__", "Breakdown", "computation", "data_transfer", "storage"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/models/compound/projects/permissions.py", "imports": ["CompoundMutableDict", "sevenbridges.meta.comp_mutable_dict", "sevenbridges.meta.resource", "super", "Resource"], "variables": ["__getitem__", "Permissions", "__init__", "_name"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/models/compound/projects/settings.py", "imports": ["CompoundMutableDict", "sevenbridges.meta.comp_mutable_dict", "sevenbridges.meta.resource", "super", "Resource"], "variables": ["__getitem__", "__init__", "_name", "Settings"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/models/compound/tasks/batch_by.py", "imports": ["type", "sevenbridges.meta.resource", "super", "Resource", "str"], "variables": ["__str__", "other", "BatchBy", "e", "__setitem__", "__getitem__", "values", "self", "__init__", "update", "_name", "__repr__", "equals"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/models/compound/tasks/batch_group.py", "imports": ["sevenbridges.meta.fields", "sevenbridges.meta.resource", "DictField", "Resource", "StringField"], "variables": ["fields", "__str__", "BatchGroup", "value"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/models/compound/tasks/execution_status.py", "imports": ["IntegerField", "BooleanField", "sevenbridges.meta.fields", "sevenbridges.meta.resource", "Resource", "StringField"], "variables": ["completed", "running", "running_duration", "__str__", "steps_total", "account_limit", "failed", "ExecutionStatus", "queued_duration", "duration", "system_limit", "aborted", "execution_duration", "queued", "message_code", "message", "instance_init", "steps_completed"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/models/compound/tasks/input.py", "imports": ["CompoundMutableDict", "map_input_output", "sevenbridges.meta.comp_mutable_dict", "sevenbridges.meta.resource", "super", "Resource", "sevenbridges.models.compound.tasks"], "variables": ["inputs", "__getitem__", "Input", "__init__", "_name"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/models/compound/tasks/output.py", "imports": ["CompoundMutableDict", "sevenbridges.errors", "map_input_output", "sevenbridges.meta.comp_mutable_dict", "sevenbridges.meta.resource", "ReadOnlyPropertyError", "super", "Resource", "sevenbridges.models.compound.tasks"], "variables": ["Output", "output", "__setitem__", "__getitem__", "__init__", "_name"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/models/compound/volumes/import_destination.py", "imports": ["sevenbridges.meta.fields", "StringField", "Resource", "sevenbridges.meta.resource"], "variables": ["__str__", "project", "name", "parent", "ImportDestination"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/models/compound/volumes/properties.py", "imports": ["CompoundMutableDict", "sevenbridges.meta.comp_mutable_dict", "sevenbridges.meta.resource", "super", "Resource"], "variables": ["__init__", "__getitem__", "VolumeProperties", "_name"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/models/compound/volumes/service.py", "imports": ["CompoundMutableDict", "sevenbridges.meta.comp_mutable_dict", "sevenbridges.meta.resource", "super", "Resource"], "variables": ["__init__", "__getitem__", "VolumeService", "_name"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/models/compound/volumes/volume_file.py", "imports": ["type", "sevenbridges.meta.fields", "sevenbridges.meta.resource", "Resource", "StringField"], "variables": ["__str__", "__eq__", "location", "VolumeFile", "volume"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/models/compound/volumes/volume_object.py", "imports": ["sevenbridges.meta.fields", "sevenbridges.meta.resource", "DictField", "Resource", "StringField"], "variables": ["VolumeObject", "type", "metadata", "__str__", "location", "volume", "href"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/models/compound/volumes/volume_prefix.py", "imports": ["Resource", "StringField", "sevenbridges.meta.fields", "sevenbridges.meta.resource"], "variables": ["__str__", "VolumePrefix", "volume", "href", "prefix"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/models/dataset.py", "imports": ["sevenbridges.models.member", "logging", "sevenbridges.meta.fields", "sevenbridges.decorators", "HrefField", "Member", "sevenbridges.models.link", "sevenbridges.meta.transformer", "type", "inplace_reload", "Resource", "Transform", "super", "StringField", "Collection", "sevenbridges.meta.resource", "sevenbridges.meta.collection", "Link", "Dataset"], "variables": ["add_member", "remove_member", "response", "description", "save", "members", "logger", "modified_data", "__eq__", "get_member", "visibility", "cls", "_URL", "query", "dataset", "self", "total", "member", "links", "permissions", "inplace", "name", "id", "__str__", "dataset_request_data", "get_members", "get_owned_by", "data", "api", "Dataset", "href", "username"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/models/division.py", "imports": ["type", "sevenbridges.meta.fields", "HrefField", "sevenbridges.meta.resource", "super", "Resource", "StringField"], "variables": ["id", "limit", "__str__", "__eq__", "role", "_URL", "query", "offset", "self", "get_members", "name", "api", "Division", "href", "get_teams", "cls"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/models/endpoints.py", "imports": ["logging", "sevenbridges.meta.fields", "sevenbridges.meta.resource", "HrefField", "Resource", "Endpoints"], "variables": ["tasks_url", "upload_url", "action_url", "projects_url", "logger", "billing_url", "cls", "_URL", "endpoints", "files_url", "get", "user_url", "Endpoints", "apps_url", "__str__", "rate_limit_url", "users_url", "api", "extra"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/models/execution_details.py", "imports": ["sevenbridges.meta.fields", "sevenbridges.meta.resource", "HrefField", "sevenbridges.models.compound.jobs.job", "Resource", "DateTimeField", "StringField", "CompoundListField", "Job"], "variables": ["message", "__str__", "status", "end_time", "start_time", "href", "ExecutionDetails", "jobs"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/models/file.py", "imports": ["Download", "FileOrigin", "sevenbridges.errors", "logging", "CompoundField", "sevenbridges.meta.fields", "HrefField", "sevenbridges.decorators", "len", "sevenbridges.transfer.upload", "RequestParameters", "sevenbridges.models.compound.files.file_origin", "sevenbridges.meta.transformer", "BulkRecord", "sevenbridges.models.compound.files.file_storage", "isinstance", "cls", "type", "ResourceNotModified", "inplace_reload", "sevenbridges.models.bulk", "Metadata", "Resource", "sevenbridges.models.enums", "os", "Transform", "Upload", "IntegerField", "File", "sevenbridges.models.compound.files.metadata", "super", "DownloadInfo", "delattr", "DateTimeField", "PartSize", "hasattr", "sevenbridges.transfer.download", "StringField", "SbgError", "open", "FileStorage", "sevenbridges.meta.resource", "LocalFileAlreadyExists", "sevenbridges.models.compound.files.download_info", "BasicListField", "tempfile"], "variables": ["origin_params", "metadata_params", "retry", "response", "files", "save", "offset", "FOLDER_TYPE", "logger", "modified_on", "__eq__", "parent", "storage", "names", "path", "modified_data", "project", "cls", "type", "metadata", "limit", "info", "content", "wait", "upload", "_URL", "created_on", "query", "dataset", "part_size", "self", "chunk_size", "stream", "bulk_delete", "move_to_folder", "download_info", "size", "timeout", "reload", "create_folder", "cont_token", "file_ids", "encoding", "file_name", "File", "copy", "FileBulkRecord", "tags", "bulk_edit", "inplace", "_secondary_files", "secondary_files", "query_params", "name", "silent", "list_files", "id", "__str__", "resource", "bulk_update", "bulk_get", "url", "is_folder", "origin", "new_file", "copy_to_folder", "data", "api", "extra", "href", "overwrite", "download"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/models/invoice.py", "imports": ["type", "sevenbridges.models.compound.price", "CompoundField", "Price", "BooleanField", "sevenbridges.meta.fields", "HrefField", "sevenbridges.meta.resource", "sevenbridges.models.compound.billing.invoice_period", "InvoicePeriod", "super", "Resource", "StringField"], "variables": ["id", "limit", "__str__", "api", "storage_costs", "invoice_period", "_URL", "query", "Invoice", "offset", "total", "pending", "__eq__", "href", "analysis_costs", "cls"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/models/link.py", "imports": ["sevenbridges.meta.fields", "HrefField", "sevenbridges.meta.resource", "Resource", "StringField"], "variables": ["next", "__str__", "method", "VolumeLink", "rel", "Link", "href"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/models/marker.py", "imports": ["sevenbridges.errors", "logging", "CompoundField", "sevenbridges.meta.fields", "sevenbridges.decorators", "HrefField", "sevenbridges.meta.transformer", "type", "ResourceNotModified", "sevenbridges.models.compound.markers.position", "inplace_reload", "MarkerPosition", "Resource", "Transform", "super", "DateTimeField", "StringField", "Marker", "sevenbridges.meta.resource"], "variables": ["save", "offset", "marker", "position", "logger", "modified_data", "__eq__", "cls", "limit", "created_time", "_URL", "query", "self", "chromosome", "marker_data", "extra", "create", "inplace", "private", "name", "id", "__str__", "Marker", "created_by", "file", "api", "data", "href"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/models/member.py", "imports": ["sevenbridges.models.compound.projects.permissions", "type", "ResourceNotModified", "sevenbridges.errors", "logging", "CompoundField", "sevenbridges.meta.fields", "sevenbridges.decorators", "HrefField", "sevenbridges.meta.resource", "inplace_reload", "Resource", "Permissions", "StringField"], "variables": ["id", "type", "__str__", "extra", "Member", "_URL", "permissions", "save", "inplace", "self", "url", "logger", "data", "__eq__", "href", "email", "username"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/models/project.py", "imports": ["sevenbridges.models.member", "sevenbridges.errors", "logging", "CompoundField", "sevenbridges.meta.fields", "sevenbridges.decorators", "HrefField", "Member", "sevenbridges.models.link", "sevenbridges.meta.transformer", "isinstance", "type", "ResourceNotModified", "inplace_reload", "Project", "sevenbridges.models.compound.projects.settings", "Resource", "Transform", "Settings", "super", "UuidField", "DateTimeField", "StringField", "SbgError", "Collection", "sevenbridges.meta.resource", "sevenbridges.meta.collection", "BasicListField", "Link"], "variables": ["add_member", "remove_member", "user", "response", "run", "description", "save", "batch_by", "offset", "member_data", "members", "interruptible", "logger", "modified_on", "__eq__", "modified_data", "get_member", "email", "project", "cls", "type", "limit", "team", "app", "inputs", "_URL", "Project", "created_on", "query", "self", "get_tasks", "total", "create_task", "settings", "category", "get_apps", "links", "create", "owner", "tags", "permissions", "state", "inplace", "add_member_team", "disable_batch", "query_params", "name", "add_member_division", "volume", "execution_settings", "division", "revision", "id", "project_data", "__str__", "add_files", "batch_input", "root_folder", "add_member_email", "status", "url", "created_by", "billing_group", "get_members", "get_files", "data", "api", "extra", "href", "params", "get_imports", "get_exports", "username"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/models/storage_export.py", "imports": ["sevenbridges.errors", "logging", "CompoundField", "sevenbridges.meta.fields", "HrefField", "Export", "VolumeFile", "sevenbridges.meta.transformer", "BulkRecord", "DictField", "type", "VolumeProperties", "sevenbridges.models.compound.volumes.volume_file", "sevenbridges.models.compound.volumes.properties", "sevenbridges.models.bulk", "Resource", "Transform", "File", "super", "DateTimeField", "Error", "sevenbridges.models.compound.error", "StringField", "SbgError", "BooleanField", "sevenbridges.meta.resource", "sevenbridges.models.file"], "variables": ["source", "response", "Export", "location", "_source", "item", "offset", "logger", "__eq__", "cls", "copy_only", "limit", "items", "_URL", "query", "exports", "result", "finished_on", "_result", "extra", "submit_export", "file_", "properties", "ExportBulkRecord", "state", "volume", "error", "id", "__str__", "destination", "export_ids", "bulk_submit", "resource", "bulk_get", "_export", "file", "api", "data", "href", "params", "overwrite", "started_on"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/models/storage_import.py", "imports": ["sevenbridges.errors", "logging", "CompoundField", "sevenbridges.meta.fields", "HrefField", "VolumeFile", "Import", "sevenbridges.meta.transformer", "BulkRecord", "DictField", "type", "sevenbridges.models.compound.volumes.volume_file", "sevenbridges.models.bulk", "Resource", "Transform", "File", "super", "DateTimeField", "sevenbridges.models.compound.volumes.import_destination", "Error", "sevenbridges.models.compound.error", "StringField", "SbgError", "ImportDestination", "BooleanField", "sevenbridges.meta.resource", "sevenbridges.models.file"], "variables": ["_import", "source", "response", "location", "Import", "offset", "logger", "__eq__", "parent", "project", "cls", "items", "limit", "import_ids", "_URL", "preserve_folder_structure", "query", "submit_import", "result", "finished_on", "_result", "ImportBulkRecord", "imports", "import_config", "properties", "autorename", "state", "name", "volume", "error", "id", "__str__", "destination", "bulk_submit", "resource", "bulk_get", "data", "api", "extra", "href", "overwrite", "started_on"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/models/task.py", "imports": ["sevenbridges.errors", "logging", "CompoundField", "Task", "sevenbridges.meta.fields", "sevenbridges.decorators", "HrefField", "callback", "sevenbridges.meta.transformer", "BulkRecord", "DictField", "TaskValidationError", "isinstance", "type", "FileApiFormats", "sevenbridges.models.execution_details", "sevenbridges.models.compound.tasks.output", "Input", "BatchGroup", "inplace_reload", "sevenbridges.models.bulk", "Resource", "sevenbridges.models.app", "sevenbridges.models.enums", "sevenbridges.models.compound.tasks.execution_status", "time", "Transform", "TaskStatus", "BatchBy", "File", "ExecutionStatus", "super", "UuidField", "DateTimeField", "dict", "StringField", "SbgError", "ExecutionDetails", "sevenbridges.models.compound.tasks.batch_by", "Output", "sevenbridges.models.compound.price", "Price", "BooleanField", "sevenbridges.meta.resource", "sevenbridges.models.compound.tasks.input", "App", "sevenbridges.models.file", "sevenbridges.models.compound.tasks.batch_group"], "variables": ["task_data", "started_from", "Task", "batch", "abort", "project", "limit", "created_time", "inputs", "query", "self", "task_meta", "serialized_es_mapping", "execution_settings", "name", "created_to", "id", "task_request_data", "resource", "created_from", "instance_type", "api", "task_ids", "response", "description", "batch_by", "offset", "interruptible", "use_interruptible_instances", "logger", "ended_from", "tasks", "get_batch_children", "wait", "started_to", "_URL", "end_time", "order_by", "task", "app_id", "_to_api_file_format", "start_time", "order", "_serialize_inputs", "use_memoization", "outputs", "revision", "created_task", "return_value", "origin", "params", "data", "href", "save", "batch_group", "type", "app", "ended_to", "use_elastic_disc", "serialized_es", "get_execution_details", "__str__", "batch_input", "bulk_get", "status", "task_inputs", "max_parallel_instances", "warnings", "run", "modified_data", "clone", "__eq__", "parent", "price", "errors", "cls", "executed_by", "_serialize_execution_settings", "create", "inplace", "disable_batch", "execution_status", "TaskBulkRecord", "created_by", "extra"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/models/team.py", "imports": ["sevenbridges.errors", "logging", "sevenbridges.meta.fields", "sevenbridges.decorators", "HrefField", "sevenbridges.models.link", "sevenbridges.meta.transformer", "type", "ResourceNotModified", "inplace_reload", "Resource", "Transform", "super", "TeamMember", "StringField", "sevenbridges.models.team_member", "Team", "Collection", "sevenbridges.meta.resource", "sevenbridges.meta.collection", "Link"], "variables": ["add_member", "remove_member", "user", "response", "save", "offset", "member_data", "members", "logger", "modified_data", "__eq__", "cls", "limit", "team", "_URL", "query", "list_all", "self", "total", "member", "links", "create", "inplace", "name", "Team", "division", "id", "__str__", "created_team", "get_members", "data", "api", "extra", "href"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/models/team_member.py", "imports": ["type", "logging", "sevenbridges.meta.fields", "HrefField", "sevenbridges.meta.resource", "Resource", "StringField"], "variables": ["id", "__str__", "role", "logger", "TeamMember", "__eq__", "href", "username"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/models/user.py", "imports": ["type", "logging", "sevenbridges.meta.fields", "sevenbridges.meta.resource", "HrefField", "super", "Resource", "sevenbridges.meta.transformer", "StringField", "Transform", "User"], "variables": ["user", "phone", "offset", "disable", "logger", "__eq__", "email", "last_name", "country", "cls", "limit", "username", "User", "role", "_URL", "address", "query", "zip_code", "self", "affiliation", "get", "user_data", "api", "state", "me", "division", "__str__", "params", "first_name", "extra", "href", "city"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/models/volume.py", "imports": ["sevenbridges.models.member", "sevenbridges.errors", "logging", "CompoundField", "sevenbridges.meta.fields", "sevenbridges.decorators", "HrefField", "Member", "sevenbridges.models.link", "sevenbridges.meta.transformer", "sevenbridges.models.compound.volumes.service", "isinstance", "VolumeObject", "type", "ResourceNotModified", "VolumeType", "VolumePrefix", "sevenbridges.models.compound.volumes.volume_object", "inplace_reload", "Resource", "sevenbridges.models.enums", "Transform", "super", "DateTimeField", "VolumeService", "VolumeCollection", "StringField", "Volume", "BooleanField", "Collection", "sevenbridges.models.compound.volumes.volume_prefix", "sevenbridges.meta.resource", "VolumeLink", "sevenbridges.meta.collection", "Link"], "variables": ["add_member", "remove_member", "user", "response", "description", "access_mode", "save", "offset", "create_s3_volume", "members", "member_data", "logger", "modified_on", "__eq__", "modified_data", "create_oss_volume", "get_member", "client_email", "cls", "project", "limit", "list", "team", "_URL", "created_on", "query", "param", "self", "private_key", "total", "get_volume_object_info", "configuration", "role_arn", "prefix", "bucket", "links", "properties", "state", "inplace", "objects", "add_member_team", "create_google_iam_volume", "active", "name", "service", "volume", "add_member_division", "Volume", "create_s3_volume_role_auth", "division", "id", "__str__", "create_google_volume", "secret_access_key", "prefixes", "endpoint", "access_key_id", "get_members", "get_exports", "get_imports", "data", "api", "extra", "href", "params", "external_id", "username"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/transfer/download.py", "imports": ["DPartedFile", "sevenbridges.errors", "logging", "Part", "Progress", "_get_content_length", "RequestParameters", "generate_session", "sevenbridges.transfer.utils", "requests", "sevenbridges.models.enums", "float", "time", "os", "int", "super", "PartSize", "threading", "sevenbridges.http.client", "SbgError", "open", "TransferState", "range", "str", "total_parts", "hashlib"], "variables": ["Download", "DPartedFile", "response", "fp", "duration", "run", "_get_content_length", "__iter__", "file_path", "callback", "logger", "path", "submit", "start", "errorback", "resume", "get_parts", "wait", "end_byte", "stop", "part_size", "self", "__init__", "_download_part", "timeout", "__repr__", "suffix", "parted_file", "file_size", "add_progress_callback", "part", "_get_file_size", "future", "headers", "futures", "done", "start_time", "add_callback", "pause", "start_b", "parts", "status", "url", "retry_count", "api", "progress"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/transfer/upload.py", "imports": ["sevenbridges.errors", "logging", "_report_part", "Progress", "CodePackageUPartedFile", "RequestParameters", "generate_session", "sevenbridges.transfer.utils", "_get_part_url", "sevenbridges.models.enums", "float", "time", "os", "_submit_part", "File", "super", "UPartedFile", "PartSize", "threading", "sevenbridges.http.client", "SbgError", "open", "TransferState", "range", "sevenbridges.models.file", "str", "total_parts"], "variables": ["_abort_upload", "_finalize_upload", "_report_part", "response", "duration", "run", "__iter__", "partition_file", "file_path", "e_tag", "CodePackageUPartedFile", "automation_id", "_create_init_data", "callback", "logger", "parent", "submit", "start", "start_byte", "project", "errorback", "resume", "CodePackageUpload", "_get_part_url", "get_parts", "part_read_limit", "_initialize_upload", "part_data", "end_byte", "wait", "stop", "_URL", "part_size", "self", "__init__", "timeout", "__repr__", "result", "parted_file", "Upload", "_submit_part", "file_name", "add_progress_callback", "part_url", "etag", "part", "UPartedFile", "init_params", "init_data", "part_number", "future", "futures", "_upload_part", "done", "start_time", "add_callback", "pause", "_validate_project_parent", "parts", "status", "retry_count", "_verify_file_size", "data", "api", "overwrite", "part_read_offset", "progress"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/transfer/utils.py", "imports": ["int", "float", "math", "sys"], "variables": ["file_size", "Part", "bytes_done", "duration", "Progress", "bandwidth", "parts_done", "self", "__init__", "total_parts", "num_of_parts", "size", "start", "simple_progress_bar", "progress"]}, {"author": "Dejan Knezevic", "path": "tests/conftest.py", "imports": ["sevenbridges", "faker", "Verifier", "ConfigParser", "tests", "dict", "pytest", "Api", "Precondition", "providers", "verifiers", "requests_mock"], "variables": ["ConfigParser", "get", "Verifier", "api", "config_parser", "read", "request_mocker", "base_url", "__call__", "m", "given", "Mock", "__init__", "verifier", "data", "Precondition", "generator"]}, {"author": "Dejan Knezevic", "path": "tests/providers.py", "imports": ["faker", "int", "len", "range", "re", "FileProvider", "str", "AutomationMemberProvider", "AutomationPackageProvider", "AutomationRunProvider", "time", "MemberProvider"], "variables": ["default_task", "href_no_parent", "can_be_retrieved_in_bulk", "task_can_be_run", "CodePackageUploadProvider", "location", "all_files", "tasks_in_project_for_parent", "DatasetProvider", "package_id", "automation_id", "upload_id", "files_exist_for_file_origin", "can_be_edited_in_bulk", "project", "prev_url", "can_create_folder", "task_execution_details_exist", "task_exists", "team", "query", "dataset", "ImportsProvider", "self", "default_async_job", "MarkerProvider", "result", "list_data", "id_", "created", "copy_result", "imports", "has_runs", "AutomationProvider", "permissions", "can_copy_files", "can_be_copied", "default_member", "name", "VolumeProvider", "volume_created", "all_tasks", "headers", "division", "modified", "finalized_upload", "id", "got_file_part", "default_export", "failed", "paginated_projects", "permissions_can_be_modified", "default_file", "AutomationPackageProvider", "default_automation_package", "exist", "schema", "response", "files_exist_for_file_metadata", "ActionProvider", "default_division", "import_", "version", "apps_exist_for_project", "tasks_exist_for_parent", "has_members", "can_be_modified", "apps_exist", "regx", "new_id", "files_exist_for_folder", "ProjectProvider", "items", "can_delete_files", "status_code", "rate", "AsyncJobProvider", "download_info_defined", "default_project", "EndpointProvider", "default_team", "task_can_be_clone", "part_size", "all_links", "default_marker", "json", "endpoints", "exports", "authenticated", "member", "file_id", "can_be_submitted", "default_user", "has_member", "links", "tags_can_be_saved", "file_", "can_copy_to_folder", "task", "prev", "tasks_exists_for_project", "TeamMemberProvider", "default_automation", "RateLimitProvider", "can_be_archived", "exists", "can_remove_member", "can_be_deleted_in_bulk", "has_rerun", "data", "href", "automation", "can_be_restored", "username", "user", "next_url", "has_packages", "marker", "package", "files_exist_for_project", "UserProvider", "teams_exist", "got_etag", "MemberProvider", "ExportsProvider", "async_job", "app_exists", "app", "can_add_member", "default_automation_member", "has_state", "app_can_be_copied", "execution_details", "feedback_set", "default_copy_result", "__init__", "total", "can_be_removed", "download_info", "list_url", "can_be_saved", "sub_items", "files_exist_for_file_tag", "app_with_revision_exists", "queried", "task_can_be_saved", "matcher", "state", "all_items", "default_import", "paginated_file_list", "initialized_upload", "limit_available", "revision_can_be_created", "default_volume", "status", "task_can_be_aborted", "members_exist", "can_be_stopped", "default_automation_run", "owned_by", "TeamProvider", "member_exist", "tasks_in_project", "list_file_jobs", "can_move_to_folder", "can_be_queried", "can_be_submitted_in_bulk", "num_of_files", "scroll", "FileProvider", "AutomationRunProvider", "parent", "email", "AppProvider", "automation_run", "folder_id", "can_be_updated_in_bulk", "automation_member", "can_move_files", "next_page_link", "default_state", "suffix", "defined", "can_add_package", "created_with_errors", "default_dataset", "owner", "DivisionProvider", "DRSImportProvider", "export", "app_can_be_installed", "deleted", "FileUploadProvider", "AutomationMemberProvider", "TaskProvider", "volume", "default_app", "can_bulk_copy", "files_in_folder", "default_rate", "can_be_created", "metadata_can_be_saved", "url", "files_exist_for_file_name", "reported_part", "app_exist_non_json", "has_package", "generator"]}, {"author": "Dejan Knezevic", "path": "tests/test_apps.py", "imports": ["faker", "sevenbridges.errors", "repr", "len", "pytest", "SbgError"], "variables": ["test_install_app_formats", "test_create_app_revision", "raw", "copied_name", "app", "app_yaml_id", "app_invalid_id", "raw_invalid", "total", "app_json_id", "app_json", "app_yaml", "raw_yaml", "app_id", "test_apps_query", "test_app_copy", "app_revision", "raw_json", "test_apps_get_revision", "revision", "apps", "test_install_app", "app_copy", "generator"]}, {"author": "Dejan Knezevic", "path": "tests/test_config.py", "imports": ["sevenbridges", "faker", "sevenbridges.config", "UserProfile", "Config", "configparser", "config_parser", "Api", "os"], "variables": ["test_default_config", "test_os_environ_config_with_api", "parser", "test_config_explicit_advance_access", "test_config_profile", "test_os_environ_config", "test_config_advance_access", "proxies", "test_config_profile_no_proxy", "test_config_profile_explicit_proxy", "data", "api", "is_file", "generator", "mock_env", "config"]}, {"author": "Dejan Knezevic", "path": "tests/test_datasets.py", "imports": ["faker", "len"], "variables": ["test_get_member", "member_permissions", "members", "test_remove_member", "test_get_members", "datasets", "dataset", "test_save", "total", "member_username", "dataset_name", "member", "test_get", "test_query", "id", "generator", "test_query_by_owner", "test_add_member", "username"]}, {"author": "Dejan Knezevic", "path": "tests/test_error_handlers.py", "imports": ["faker", "maintenance_sleeper", "JSONDecodeError", "general_error_sleeper", "requests", "pytest", "sevenbridges.http.error_handlers", "json", "MockSession", "rate_limit_sleeper", "time"], "variables": ["resp200", "send", "test_maintenance_sleeper_invalid_json", "resp", "test_maintenance_sleeper", "resp500", "__init__", "MockSession", "test_general_error_sleeper", "resp503", "generator", "resp429", "test_rate_limit_sleeper"]}, {"author": "Dejan Knezevic", "path": "tests/test_exports.py", "imports": ["range", "faker", "len", "pytest"], "variables": ["id", "export_ids", "response", "test_exports_submit", "location", "test_exports_bulk_get", "test_exports_bulk_submit", "total", "file", "exports", "volume", "generator", "test_exports_query"]}, {"author": "Dejan Knezevic", "path": "tests/test_files.py", "imports": ["faker", "sevenbridges.errors", "repr", "len", "pytest", "range", "str", "SbgError"], "variables": ["project_id", "key", "test_files_bulk_update", "new_sample_value", "response", "test_copy_to_folder", "project_short_name", "files", "test_list_files", "test_move_to_folder", "test_files_query", "test_list_files_with_token_and_offset", "parent", "test_files_query_file_metadata", "new_id", "project", "items", "info", "folder_id", "value", "projects", "total", "file_id", "test_files_query_file_metadata_with_token", "test_files_bulk_get", "folder", "test_files_query_tags", "test_files_bulk_edit", "file_ids", "parent_id", "file_name", "owner", "test_files_query_with_token", "test_files_query_folder", "tags", "file_", "test_files_copy", "test_list_files_with_token", "test_files_save", "test_create_folder", "name", "test_files_query_file_origin", "test_files_download_info", "id", "test_files_save_tags", "test_files_query_with_token_and_offset", "new_file", "test_files_query_file_name", "file", "generator", "test_files_bulk_delete"]}, {"author": "Dejan Knezevic", "path": "tests/test_imports.py", "imports": ["range", "faker", "len"], "variables": ["test_import_to_folder_submit", "id", "volume", "imports", "project", "import_ids", "response", "location", "test_imports_bulk_submit", "preserve_folder_structure", "test_imports_bulk_get", "total", "test_import_submit", "parent", "generator", "test_imports_query"]}, {"author": "Dejan Knezevic", "path": "tests/test_marker.py", "imports": ["faker", "len"], "variables": ["test_markers_query", "markers", "test_modify_marker", "marker", "chromosome", "position", "total", "file", "test_marker_create", "name", "_id", "generator"]}, {"author": "Dejan Knezevic", "path": "tests/test_projects.py", "imports": ["faker", "ResourceNotModified", "sevenbridges.errors", "repr", "set", "len", "pytest", "SbgError"], "variables": ["project_description", "test_projects_get_tasks", "project_short_name", "files", "mocked_member", "members", "new_name", "test_project_get_files", "new_category", "test_get_project", "test_project_get_members", "test_create_project", "project", "email", "test_project_remove_member", "test_projects_get_apps", "test_member_permissions_save_no_changes", "test_query_projects_with_tags", "test_modify_project", "tag1", "projects", "test_query_projects_with_name_owner", "member_username", "member", "settings", "project_name", "category", "test_member_permissions_save", "owner", "tags", "test_project_get_member", "test_project_add_member", "name", "test_project_add_member_email", "id", "tag2", "billing_group", "test_query_projects_with_category", "test_query_projects_with_name", "generator", "test_query_projects_with_owner", "username"]}, {"author": "Dejan Knezevic", "path": "tests/test_tasks.py", "imports": ["faker", "sevenbridges.errors", "repr", "len", "datetime", "pytest", "range", "SbgError"], "variables": ["project_id", "test_save_task", "task_ids", "response", "project_short_name", "files", "test_tasks_bulk_get", "batch_by", "children", "output_id", "tasks", "test_tasks_query_dates", "test_tasks_query", "test_abort_task", "project", "test_create_task_with_errors", "items", "test_create_task", "output", "inputs", "test_datestring", "projects", "total", "test_modify_inputs", "file_ids", "parent_id", "test_secondary_files", "owner", "task", "task_id", "secondary_files", "app_id", "execution_settings", "test_clone_task", "test_task_get_batch_children", "id", "test_date", "status", "test_run_task", "test_get_execution_details", "generator"]}, {"author": "Dejan Knezevic", "path": "tests/test_upload.py", "imports": ["faker", "Upload", "sevenbridges.errors", "TransferState", "pytest", "sevenbridges.transfer.upload", "sevenbridges.models.enums", "PartSize", "str", "open", "SbgError", "os"], "variables": ["project_id", "project_and_parent", "file_part_url", "no_project_or_parent", "upload_id", "test_file_upload_etag_failed", "test_file_size_too_large", "test_file_upload_stop", "upload", "test_file_upload_pause_failed", "file_id", "test_file_upload_resume", "result", "file_name", "test_file_upload_abort_failed", "test_file_upload_init_failed", "test_file_upload", "file_content", "test_file_upload_stop_failed", "test_file_upload_part_failed", "test_file_upload_finalize_failed", "api_instance", "test_file_upload_pause", "test_file_upload_resume_failed", "test_file_upload_wrong_path", "generator", "test_file_upload_start_failed"]}, {"author": "Dejan Knezevic", "path": "tests/test_volumes.py", "imports": ["faker", "len"], "variables": ["description", "access_mode", "access_key_secret", "_id", "items", "limit", "test_create_oss_volume", "test_modify_volume", "test_create_s3_volume_role_auth", "test_create_s3_volume", "total", "member_username", "role_arn", "member", "volume_data", "test_volumes_query", "bucket", "name", "volume", "volume_id", "item_list", "id", "test_create_google_volume", "secret_access_key", "generator", "volumes", "endpoint", "test_volume_get_member", "access_key_id", "external_id", "test_volume_pagination"]}, {"author": "Dejan Knezevic", "path": "tests/verifiers.py", "imports": ["print", "Assert", "str"], "variables": ["members_fetched", "Assert", "queried_with_token", "task_children_fetched", "copy_only", "apps_fetched", "limit", "teams_fetched", "query", "check_query", "queried_with_file_tags", "file_saved", "self", "copied_to_folder", "file_copy_job_fetched", "category", "divisions_fetched", "ProjectVerifier", "members_retrieved", "revision_created", "AutomationPackageVerifier", "check_post_data", "query_owner", "name", "moved_to_folder", "include_archived", "folder_created", "modified", "ExportsVerifier", "queried_with_file_metadata", "task_fetched", "member_retrieved", "authenticated_user_fetched", "ImportsVerifier", "task_saved", "AutomationMemberVerifier", "TeamVerifier", "tasks_for_project_fetched", "action_restore_performed", "offset", "updated", "file_copied", "ActionVerifier", "queried_with_file_name", "bulk_deleted", "bulk_submitted", "AsyncJobVerifier", "action_performed", "team_fetched", "AppVerifier", "app_fetched", "file_saved_tags", "folder_files_listed_scroll", "state_fetched", "UserVerifier", "tasks_with_dates_fetched", "file_delete_job_fetched", "submitted", "queried_with_parent", "check_url", "member_permissions_modified", "app_installed", "division_fetched", "package_retrieved", "file_move_job_fetched", "visibility", "reran", "VolumeVerifier", "runs_retrieved", "saved", "__init__", "files_for_project_fetched", "bulk_updated", "bulk_copy_done", "packages_retrieved", "FileVerifier", "folder_files_listed", "log_fetched", "queried", "download_info_fetched", "EndpointVerifier", "fetched", "AutomationRunVerifier", "DRSImportsVerifier", "listed", "feedback_received", "app_copied", "MarkerVerifier", "owned_by", "TaskVerifier", "queried_with_file_origin", "execution_details_fetched", "MemberVerifier", "task_created", "DatasetVerifier", "bulk_edited", "member_added", "DivisionVerifier", "AutomationVerifier", "owner", "member_removed", "bulk_retrieved", "tags", "check_header_present", "stopped", "qs", "action_archive_performed", "async_files_deleted", "apps_for_project_fetched", "url", "async_files_moved", "async_files_copied", "created"]}, {"author": "Danilo Jovanovic", "path": "sevenbridges/meta/resource.py", "imports": ["sevenbridges.errors", "logging", "sevenbridges.meta.fields", "RequestParameters", "sevenbridges.models.link", "sevenbridges.meta.transformer", "isinstance", "NonJSONResponseError", "cls", "type", "JSONDecodeError", "json", "sevenbridges.models.enums", "Transform", "copy", "hasattr", "SbgError", "Field", "Collection", "_data_diff", "getattr", "sevenbridges.meta.data", "sevenbridges.meta.collection", "str", "Link", "DataContainer"], "variables": ["deepcopy", "_set", "response", "field", "urls", "old_keys", "update_read_only", "logger", "modified_data", "__new__", "update_old", "equals", "cls", "items", "read_only_fields", "metadata", "inner_diff", "_URL", "query", "objtype", "Resource", "__init__", "total", "reload", "get", "links", "difference", "validated_value", "fields", "new_keys", "delete", "__get__", "ResourceMeta", "id", "_API", "_data_diff", "_query", "resource", "init", "url", "obj", "data", "api", "extra", "href"]}, {"author": "Danilo Jovanovic", "path": "sevenbridges/decorators.py", "imports": ["NotFound", "ServiceUnavailable", "sevenbridges.errors", "logging", "RequestTimeout", "Conflict", "MethodNotAllowed", "NonJSONResponseError", "ServerError", "JSONDecodeError", "BadRequest", "requests", "json", "TooManyRequests", "Unauthorized", "copy", "func", "Forbidden", "SbgError", "functools", "method", "range", "str"], "variables": ["status_code", "throttle", "e", "response", "wrapped", "api_object", "wrapper", "inplace_reload", "logger", "check_for_error", "in_place", "data"]}, {"author": "Danilo Jovanovic", "path": "sevenbridges/meta/resource.py", "imports": ["sevenbridges.errors", "logging", "sevenbridges.meta.fields", "RequestParameters", "sevenbridges.models.link", "sevenbridges.meta.transformer", "isinstance", "NonJSONResponseError", "cls", "type", "JSONDecodeError", "json", "sevenbridges.models.enums", "Transform", "copy", "hasattr", "SbgError", "Field", "Collection", "_data_diff", "getattr", "sevenbridges.meta.data", "sevenbridges.meta.collection", "str", "Link", "DataContainer"], "variables": ["deepcopy", "_set", "response", "field", "urls", "old_keys", "update_read_only", "logger", "modified_data", "__new__", "update_old", "equals", "cls", "items", "read_only_fields", "metadata", "inner_diff", "_URL", "query", "objtype", "Resource", "__init__", "total", "reload", "get", "links", "difference", "validated_value", "fields", "new_keys", "delete", "__get__", "ResourceMeta", "id", "_API", "_data_diff", "_query", "resource", "init", "url", "obj", "data", "api", "extra", "href"]}, {"author": "Danilo Jovanovic", "path": "tests/providers.py", "imports": ["faker", "int", "len", "range", "re", "FileProvider", "str", "AutomationMemberProvider", "AutomationPackageProvider", "AutomationRunProvider", "time", "MemberProvider"], "variables": ["default_task", "href_no_parent", "can_be_retrieved_in_bulk", "task_can_be_run", "CodePackageUploadProvider", "location", "all_files", "tasks_in_project_for_parent", "DatasetProvider", "package_id", "automation_id", "upload_id", "files_exist_for_file_origin", "can_be_edited_in_bulk", "project", "prev_url", "can_create_folder", "task_execution_details_exist", "task_exists", "team", "query", "dataset", "ImportsProvider", "self", "default_async_job", "MarkerProvider", "result", "list_data", "id_", "created", "copy_result", "imports", "has_runs", "AutomationProvider", "permissions", "can_copy_files", "can_be_copied", "default_member", "name", "VolumeProvider", "volume_created", "all_tasks", "headers", "division", "modified", "finalized_upload", "id", "got_file_part", "default_export", "failed", "paginated_projects", "permissions_can_be_modified", "default_file", "AutomationPackageProvider", "default_automation_package", "exist", "schema", "response", "files_exist_for_file_metadata", "ActionProvider", "default_division", "import_", "version", "apps_exist_for_project", "tasks_exist_for_parent", "has_members", "can_be_modified", "apps_exist", "regx", "new_id", "files_exist_for_folder", "ProjectProvider", "items", "can_delete_files", "status_code", "rate", "AsyncJobProvider", "download_info_defined", "default_project", "EndpointProvider", "default_team", "task_can_be_clone", "part_size", "all_links", "default_marker", "json", "endpoints", "exports", "authenticated", "member", "file_id", "can_be_submitted", "default_user", "has_member", "links", "tags_can_be_saved", "file_", "can_copy_to_folder", "task", "prev", "tasks_exists_for_project", "TeamMemberProvider", "default_automation", "RateLimitProvider", "can_be_archived", "exists", "can_remove_member", "can_be_deleted_in_bulk", "has_rerun", "data", "href", "automation", "can_be_restored", "username", "user", "next_url", "has_packages", "marker", "package", "files_exist_for_project", "UserProvider", "teams_exist", "got_etag", "MemberProvider", "ExportsProvider", "async_job", "app_exists", "app", "can_add_member", "default_automation_member", "has_state", "app_can_be_copied", "execution_details", "feedback_set", "default_copy_result", "__init__", "total", "can_be_removed", "download_info", "list_url", "can_be_saved", "sub_items", "files_exist_for_file_tag", "app_with_revision_exists", "queried", "task_can_be_saved", "matcher", "state", "all_items", "default_import", "paginated_file_list", "initialized_upload", "limit_available", "revision_can_be_created", "default_volume", "status", "task_can_be_aborted", "members_exist", "can_be_stopped", "default_automation_run", "owned_by", "TeamProvider", "member_exist", "tasks_in_project", "list_file_jobs", "can_move_to_folder", "can_be_queried", "can_be_submitted_in_bulk", "num_of_files", "scroll", "FileProvider", "AutomationRunProvider", "parent", "email", "AppProvider", "automation_run", "folder_id", "can_be_updated_in_bulk", "automation_member", "can_move_files", "next_page_link", "default_state", "suffix", "defined", "can_add_package", "created_with_errors", "default_dataset", "owner", "DivisionProvider", "DRSImportProvider", "export", "app_can_be_installed", "deleted", "FileUploadProvider", "AutomationMemberProvider", "TaskProvider", "volume", "default_app", "can_bulk_copy", "files_in_folder", "default_rate", "can_be_created", "metadata_can_be_saved", "url", "files_exist_for_file_name", "reported_part", "app_exist_non_json", "has_package", "generator"]}, {"author": "Danilo Jovanovic", "path": "tests/test_decorators.py", "imports": ["faker", "sevenbridges.errors", "pytest", "NonJSONResponseError"], "variables": ["test_non_json_response", "generator"]}, {"author": "Danilo Jovanovic", "path": "sevenbridges/decorators.py", "imports": ["NotFound", "ServiceUnavailable", "sevenbridges.errors", "logging", "RequestTimeout", "Conflict", "MethodNotAllowed", "NonJSONResponseError", "ServerError", "JSONDecodeError", "BadRequest", "requests", "json", "TooManyRequests", "Unauthorized", "copy", "func", "Forbidden", "SbgError", "functools", "method", "range", "str"], "variables": ["status_code", "throttle", "e", "response", "wrapped", "api_object", "wrapper", "inplace_reload", "logger", "check_for_error", "in_place", "data"]}, {"author": "Danilo Jovanovic", "path": "sevenbridges/errors.py", "imports": ["super", "str"], "variables": ["NotFound", "ServiceUnavailable", "RequestTimeout", "AdvanceAccessError", "Conflict", "MethodNotAllowed", "more_info", "ExecutionDetailsInvalidTaskType", "TaskValidationError", "NonJSONResponseError", "ServerError", "ResourceNotModified", "BadRequest", "PaginationError", "ReadOnlyPropertyError", "self", "__init__", "TooManyRequests", "Unauthorized", "task", "Forbidden", "URITooLong", "code", "message", "SbgError", "ValidationError", "__str__", "status", "LocalFileAlreadyExists"]}, {"author": "Danilo Jovanovic", "path": "tests/providers.py", "imports": ["faker", "int", "len", "range", "re", "FileProvider", "str", "AutomationMemberProvider", "AutomationPackageProvider", "AutomationRunProvider", "time", "MemberProvider"], "variables": ["default_task", "href_no_parent", "can_be_retrieved_in_bulk", "task_can_be_run", "CodePackageUploadProvider", "location", "all_files", "tasks_in_project_for_parent", "DatasetProvider", "package_id", "automation_id", "upload_id", "files_exist_for_file_origin", "can_be_edited_in_bulk", "project", "prev_url", "can_create_folder", "task_execution_details_exist", "task_exists", "team", "query", "dataset", "ImportsProvider", "self", "default_async_job", "MarkerProvider", "result", "list_data", "id_", "created", "copy_result", "imports", "has_runs", "AutomationProvider", "permissions", "can_copy_files", "can_be_copied", "default_member", "name", "VolumeProvider", "volume_created", "all_tasks", "headers", "division", "modified", "finalized_upload", "id", "got_file_part", "default_export", "failed", "paginated_projects", "permissions_can_be_modified", "default_file", "AutomationPackageProvider", "default_automation_package", "exist", "schema", "response", "files_exist_for_file_metadata", "ActionProvider", "default_division", "import_", "version", "apps_exist_for_project", "tasks_exist_for_parent", "has_members", "can_be_modified", "apps_exist", "regx", "new_id", "files_exist_for_folder", "ProjectProvider", "items", "can_delete_files", "status_code", "rate", "AsyncJobProvider", "download_info_defined", "default_project", "EndpointProvider", "default_team", "task_can_be_clone", "part_size", "all_links", "default_marker", "json", "endpoints", "exports", "authenticated", "member", "file_id", "can_be_submitted", "default_user", "has_member", "links", "tags_can_be_saved", "file_", "can_copy_to_folder", "task", "prev", "tasks_exists_for_project", "TeamMemberProvider", "default_automation", "RateLimitProvider", "can_be_archived", "exists", "can_remove_member", "can_be_deleted_in_bulk", "has_rerun", "data", "href", "automation", "can_be_restored", "username", "user", "next_url", "has_packages", "marker", "package", "files_exist_for_project", "UserProvider", "teams_exist", "got_etag", "MemberProvider", "ExportsProvider", "async_job", "app_exists", "app", "can_add_member", "default_automation_member", "has_state", "app_can_be_copied", "execution_details", "feedback_set", "default_copy_result", "__init__", "total", "can_be_removed", "download_info", "list_url", "can_be_saved", "sub_items", "files_exist_for_file_tag", "app_with_revision_exists", "queried", "task_can_be_saved", "matcher", "state", "all_items", "default_import", "paginated_file_list", "initialized_upload", "limit_available", "revision_can_be_created", "default_volume", "status", "task_can_be_aborted", "members_exist", "can_be_stopped", "default_automation_run", "owned_by", "TeamProvider", "member_exist", "tasks_in_project", "list_file_jobs", "can_move_to_folder", "can_be_queried", "can_be_submitted_in_bulk", "num_of_files", "scroll", "FileProvider", "AutomationRunProvider", "parent", "email", "AppProvider", "automation_run", "folder_id", "can_be_updated_in_bulk", "automation_member", "can_move_files", "next_page_link", "default_state", "suffix", "defined", "can_add_package", "created_with_errors", "default_dataset", "owner", "DivisionProvider", "DRSImportProvider", "export", "app_can_be_installed", "deleted", "FileUploadProvider", "AutomationMemberProvider", "TaskProvider", "volume", "default_app", "can_bulk_copy", "files_in_folder", "default_rate", "can_be_created", "metadata_can_be_saved", "url", "files_exist_for_file_name", "reported_part", "app_exist_non_json", "has_package", "generator"]}, {"author": "Danilo Jovanovic", "path": "tests/test_decorators.py", "imports": ["faker", "sevenbridges.errors", "pytest", "NonJSONResponseError"], "variables": ["test_non_json_response", "generator"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/config.py", "imports": ["format_proxies", "UserProfile", "sevenbridges.errors", "logging", "configparser", "SbgError", "os"], "variables": ["format_proxies", "UserProfile", "api_endpoint", "profile", "CONFIG", "Config", "CREDENTIALS", "proxies", "cfg_profile", "self", "advance_access", "__init__", "logger", "auth_token"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/decorators.py", "imports": ["NotFound", "ServiceUnavailable", "sevenbridges.errors", "logging", "RequestTimeout", "Conflict", "MethodNotAllowed", "NonJSONResponseError", "ServerError", "JSONDecodeError", "BadRequest", "requests", "json", "TooManyRequests", "Unauthorized", "copy", "func", "Forbidden", "SbgError", "functools", "method", "range", "str"], "variables": ["status_code", "throttle", "e", "response", "wrapped", "api_object", "wrapper", "inplace_reload", "logger", "check_for_error", "in_place", "data"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/http/client.py", "imports": ["sevenbridges", "sevenbridges.config", "maintenance_sleeper", "sevenbridges.errors", "logging", "mask_secrets", "sevenbridges.decorators", "len", "platform", "RequestParameters", "isinstance", "generate_session", "throttle", "requests", "Config", "json", "sevenbridges.models.enums", "float", "config_vars", "callable", "copy", "int", "datetime", "super", "URITooLong", "hasattr", "threading", "check_for_error", "RequestSession", "SbgError", "urllib3", "format_proxies", "getattr", "error_handler", "sevenbridges.http.error_handlers"], "variables": ["key", "verb", "retries", "response", "mask_secrets", "add_error_handler", "proxies", "send", "logger", "pool_connections", "AAHeader", "backoff_factor", "max_parallel_requests", "remaining", "generate_session", "limit", "handled_response", "request_id", "value", "client_info", "self", "stream", "__init__", "timeout", "_rate_limit", "__repr__", "config_vars", "reset_time", "append_base", "get", "post", "_request", "advance_access", "pool_block", "RequestSession", "aa", "HttpClient", "headers", "token", "delete", "masked_request_data", "error_handlers", "__str__", "put", "request_data", "adapter", "masked", "remove_error_handler", "oauth_token", "url", "retry_count", "pool_maxsize", "params", "data", "patch", "session", "config"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/http/error_handlers.py", "imports": ["int", "max", "time", "logging"], "variables": ["maintenance_sleeper", "general_error_sleeper", "repeatable_handler", "response", "response_body", "sleep", "remaining_time", "logger", "api", "headers", "rate_limit_sleeper"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/meta/comp_mutable_dict.py", "imports": ["type", "super", "str"], "variables": ["CompoundMutableDict", "items", "__str__", "other", "e", "__setitem__", "values", "self", "__init__", "update", "__repr__", "equals"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/meta/fields.py", "imports": ["type", "uuid", "sevenbridges.errors", "object", "len", "ReadOnlyPropertyError", "datetime", "super", "isinstance", "UUID", "float", "ValidationError"], "variables": ["CompoundField", "HrefField", "FloatField", "datetime_format", "read_only", "ObjectIdField", "DictField", "cls", "EMPTY", "current_value", "value", "self", "__init__", "max_length", "CompoundListField", "IntegerField", "UuidField", "DateTimeField", "name", "StringField", "__get__", "Field", "BooleanField", "validate", "__set__", "validator", "BasicListField", "data"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/meta/resource.py", "imports": ["sevenbridges.errors", "logging", "sevenbridges.meta.fields", "RequestParameters", "sevenbridges.models.link", "sevenbridges.meta.transformer", "isinstance", "NonJSONResponseError", "cls", "type", "JSONDecodeError", "json", "sevenbridges.models.enums", "Transform", "copy", "hasattr", "SbgError", "Field", "Collection", "_data_diff", "getattr", "sevenbridges.meta.data", "sevenbridges.meta.collection", "str", "Link", "DataContainer"], "variables": ["deepcopy", "_set", "response", "field", "urls", "old_keys", "update_read_only", "logger", "modified_data", "__new__", "update_old", "equals", "cls", "items", "read_only_fields", "metadata", "inner_diff", "_URL", "query", "objtype", "Resource", "__init__", "total", "reload", "get", "links", "difference", "validated_value", "fields", "new_keys", "delete", "__get__", "ResourceMeta", "id", "_API", "_data_diff", "_query", "resource", "init", "url", "obj", "data", "api", "extra", "href"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/models/actions.py", "imports": ["FeedbackType", "logging", "sevenbridges.meta.resource", "client_info", "Resource", "sevenbridges.models.enums", "str", "sevenbridges.meta.transformer", "sevenbridges.http.client", "Transform"], "variables": ["Actions", "type", "referrer", "__str__", "extra", "api", "files", "bulk_copy_files", "_URL", "send_feedback", "logger", "data", "text", "destination_project", "cls"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/models/compound/markers/position.py", "imports": ["CompoundMutableDict", "sevenbridges.meta.comp_mutable_dict", "sevenbridges.meta.resource", "super", "Resource"], "variables": ["__getitem__", "_name", "__init__", "MarkerPosition"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/models/compound/projects/settings.py", "imports": ["CompoundMutableDict", "sevenbridges.meta.comp_mutable_dict", "sevenbridges.meta.resource", "super", "Resource"], "variables": ["__getitem__", "__init__", "_name", "Settings"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/models/compound/tasks/batch_by.py", "imports": ["type", "sevenbridges.meta.resource", "super", "Resource", "str"], "variables": ["__str__", "other", "BatchBy", "e", "__setitem__", "__getitem__", "values", "self", "__init__", "update", "_name", "__repr__", "equals"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/models/compound/tasks/input.py", "imports": ["CompoundMutableDict", "map_input_output", "sevenbridges.meta.comp_mutable_dict", "sevenbridges.meta.resource", "super", "Resource", "sevenbridges.models.compound.tasks"], "variables": ["inputs", "__getitem__", "Input", "__init__", "_name"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/models/compound/tasks/output.py", "imports": ["CompoundMutableDict", "sevenbridges.errors", "map_input_output", "sevenbridges.meta.comp_mutable_dict", "sevenbridges.meta.resource", "ReadOnlyPropertyError", "super", "Resource", "sevenbridges.models.compound.tasks"], "variables": ["Output", "output", "__setitem__", "__getitem__", "__init__", "_name"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/models/compound/volumes/service.py", "imports": ["CompoundMutableDict", "sevenbridges.meta.comp_mutable_dict", "sevenbridges.meta.resource", "super", "Resource"], "variables": ["__init__", "__getitem__", "VolumeService", "_name"]}, {"author": "Dejan Knezevic", "path": "tests/providers.py", "imports": ["faker", "int", "len", "range", "re", "FileProvider", "str", "AutomationMemberProvider", "AutomationPackageProvider", "AutomationRunProvider", "time", "MemberProvider"], "variables": ["default_task", "href_no_parent", "can_be_retrieved_in_bulk", "task_can_be_run", "CodePackageUploadProvider", "location", "all_files", "tasks_in_project_for_parent", "DatasetProvider", "package_id", "automation_id", "upload_id", "files_exist_for_file_origin", "can_be_edited_in_bulk", "project", "prev_url", "can_create_folder", "task_execution_details_exist", "task_exists", "team", "query", "dataset", "ImportsProvider", "self", "default_async_job", "MarkerProvider", "result", "list_data", "id_", "created", "copy_result", "imports", "has_runs", "AutomationProvider", "permissions", "can_copy_files", "can_be_copied", "default_member", "name", "VolumeProvider", "volume_created", "all_tasks", "headers", "division", "modified", "finalized_upload", "id", "got_file_part", "default_export", "failed", "paginated_projects", "permissions_can_be_modified", "default_file", "AutomationPackageProvider", "default_automation_package", "exist", "schema", "response", "files_exist_for_file_metadata", "ActionProvider", "default_division", "import_", "version", "apps_exist_for_project", "tasks_exist_for_parent", "has_members", "can_be_modified", "apps_exist", "regx", "new_id", "files_exist_for_folder", "ProjectProvider", "items", "can_delete_files", "status_code", "rate", "AsyncJobProvider", "download_info_defined", "default_project", "EndpointProvider", "default_team", "task_can_be_clone", "part_size", "all_links", "default_marker", "json", "endpoints", "exports", "authenticated", "member", "file_id", "can_be_submitted", "default_user", "has_member", "links", "tags_can_be_saved", "file_", "can_copy_to_folder", "task", "prev", "tasks_exists_for_project", "TeamMemberProvider", "default_automation", "RateLimitProvider", "can_be_archived", "exists", "can_remove_member", "can_be_deleted_in_bulk", "has_rerun", "data", "href", "automation", "can_be_restored", "username", "user", "next_url", "has_packages", "marker", "package", "files_exist_for_project", "UserProvider", "teams_exist", "got_etag", "MemberProvider", "ExportsProvider", "async_job", "app_exists", "app", "can_add_member", "default_automation_member", "has_state", "app_can_be_copied", "execution_details", "feedback_set", "default_copy_result", "__init__", "total", "can_be_removed", "download_info", "list_url", "can_be_saved", "sub_items", "files_exist_for_file_tag", "app_with_revision_exists", "queried", "task_can_be_saved", "matcher", "state", "all_items", "default_import", "paginated_file_list", "initialized_upload", "limit_available", "revision_can_be_created", "default_volume", "status", "task_can_be_aborted", "members_exist", "can_be_stopped", "default_automation_run", "owned_by", "TeamProvider", "member_exist", "tasks_in_project", "list_file_jobs", "can_move_to_folder", "can_be_queried", "can_be_submitted_in_bulk", "num_of_files", "scroll", "FileProvider", "AutomationRunProvider", "parent", "email", "AppProvider", "automation_run", "folder_id", "can_be_updated_in_bulk", "automation_member", "can_move_files", "next_page_link", "default_state", "suffix", "defined", "can_add_package", "created_with_errors", "default_dataset", "owner", "DivisionProvider", "DRSImportProvider", "export", "app_can_be_installed", "deleted", "FileUploadProvider", "AutomationMemberProvider", "TaskProvider", "volume", "default_app", "can_bulk_copy", "files_in_folder", "default_rate", "can_be_created", "metadata_can_be_saved", "url", "files_exist_for_file_name", "reported_part", "app_exist_non_json", "has_package", "generator"]}, {"author": "Dejan Knezevic", "path": "tests/test_upload.py", "imports": ["faker", "Upload", "sevenbridges.errors", "TransferState", "pytest", "sevenbridges.transfer.upload", "sevenbridges.models.enums", "PartSize", "str", "open", "SbgError", "os"], "variables": ["project_id", "project_and_parent", "file_part_url", "no_project_or_parent", "upload_id", "test_file_upload_etag_failed", "test_file_size_too_large", "test_file_upload_stop", "upload", "test_file_upload_pause_failed", "file_id", "test_file_upload_resume", "result", "file_name", "test_file_upload_abort_failed", "test_file_upload_init_failed", "test_file_upload", "file_content", "test_file_upload_stop_failed", "test_file_upload_part_failed", "test_file_upload_finalize_failed", "api_instance", "test_file_upload_pause", "test_file_upload_resume_failed", "test_file_upload_wrong_path", "generator", "test_file_upload_start_failed"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/http/client.py", "imports": ["sevenbridges", "sevenbridges.config", "maintenance_sleeper", "sevenbridges.errors", "logging", "mask_secrets", "sevenbridges.decorators", "len", "platform", "RequestParameters", "isinstance", "generate_session", "throttle", "requests", "Config", "json", "sevenbridges.models.enums", "float", "config_vars", "callable", "copy", "int", "datetime", "super", "URITooLong", "hasattr", "threading", "check_for_error", "RequestSession", "SbgError", "urllib3", "format_proxies", "getattr", "error_handler", "sevenbridges.http.error_handlers"], "variables": ["key", "verb", "retries", "response", "mask_secrets", "add_error_handler", "proxies", "send", "logger", "pool_connections", "AAHeader", "backoff_factor", "max_parallel_requests", "remaining", "generate_session", "limit", "handled_response", "request_id", "value", "client_info", "self", "stream", "__init__", "timeout", "_rate_limit", "__repr__", "config_vars", "reset_time", "append_base", "get", "post", "_request", "advance_access", "pool_block", "RequestSession", "aa", "HttpClient", "headers", "token", "delete", "masked_request_data", "error_handlers", "__str__", "put", "request_data", "adapter", "masked", "remove_error_handler", "oauth_token", "url", "retry_count", "pool_maxsize", "params", "data", "patch", "session", "config"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/http/client.py", "imports": ["sevenbridges", "sevenbridges.config", "maintenance_sleeper", "sevenbridges.errors", "logging", "mask_secrets", "sevenbridges.decorators", "len", "platform", "RequestParameters", "isinstance", "generate_session", "throttle", "requests", "Config", "json", "sevenbridges.models.enums", "float", "config_vars", "callable", "copy", "int", "datetime", "super", "URITooLong", "hasattr", "threading", "check_for_error", "RequestSession", "SbgError", "urllib3", "format_proxies", "getattr", "error_handler", "sevenbridges.http.error_handlers"], "variables": ["key", "verb", "retries", "response", "mask_secrets", "add_error_handler", "proxies", "send", "logger", "pool_connections", "AAHeader", "backoff_factor", "max_parallel_requests", "remaining", "generate_session", "limit", "handled_response", "request_id", "value", "client_info", "self", "stream", "__init__", "timeout", "_rate_limit", "__repr__", "config_vars", "reset_time", "append_base", "get", "post", "_request", "advance_access", "pool_block", "RequestSession", "aa", "HttpClient", "headers", "token", "delete", "masked_request_data", "error_handlers", "__str__", "put", "request_data", "adapter", "masked", "remove_error_handler", "oauth_token", "url", "retry_count", "pool_maxsize", "params", "data", "patch", "session", "config"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/models/file.py", "imports": ["Download", "FileOrigin", "sevenbridges.errors", "logging", "CompoundField", "sevenbridges.meta.fields", "HrefField", "sevenbridges.decorators", "len", "sevenbridges.transfer.upload", "RequestParameters", "sevenbridges.models.compound.files.file_origin", "sevenbridges.meta.transformer", "BulkRecord", "sevenbridges.models.compound.files.file_storage", "isinstance", "cls", "type", "ResourceNotModified", "inplace_reload", "sevenbridges.models.bulk", "Metadata", "Resource", "sevenbridges.models.enums", "os", "Transform", "Upload", "IntegerField", "File", "sevenbridges.models.compound.files.metadata", "super", "DownloadInfo", "delattr", "DateTimeField", "PartSize", "hasattr", "sevenbridges.transfer.download", "StringField", "SbgError", "open", "FileStorage", "sevenbridges.meta.resource", "LocalFileAlreadyExists", "sevenbridges.models.compound.files.download_info", "BasicListField", "tempfile"], "variables": ["origin_params", "metadata_params", "retry", "response", "files", "save", "offset", "FOLDER_TYPE", "logger", "modified_on", "__eq__", "parent", "storage", "names", "path", "modified_data", "project", "cls", "type", "metadata", "limit", "info", "content", "wait", "upload", "_URL", "created_on", "query", "dataset", "part_size", "self", "chunk_size", "stream", "bulk_delete", "move_to_folder", "download_info", "size", "timeout", "reload", "create_folder", "cont_token", "file_ids", "encoding", "file_name", "File", "copy", "FileBulkRecord", "tags", "bulk_edit", "inplace", "_secondary_files", "secondary_files", "query_params", "name", "silent", "list_files", "id", "__str__", "resource", "bulk_update", "bulk_get", "url", "is_folder", "origin", "new_file", "copy_to_folder", "data", "api", "extra", "href", "overwrite", "download"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/models/file.py", "imports": ["Download", "FileOrigin", "sevenbridges.errors", "logging", "CompoundField", "sevenbridges.meta.fields", "HrefField", "sevenbridges.decorators", "len", "sevenbridges.transfer.upload", "RequestParameters", "sevenbridges.models.compound.files.file_origin", "sevenbridges.meta.transformer", "BulkRecord", "sevenbridges.models.compound.files.file_storage", "isinstance", "cls", "type", "ResourceNotModified", "inplace_reload", "sevenbridges.models.bulk", "Metadata", "Resource", "sevenbridges.models.enums", "os", "Transform", "Upload", "IntegerField", "File", "sevenbridges.models.compound.files.metadata", "super", "DownloadInfo", "delattr", "DateTimeField", "PartSize", "hasattr", "sevenbridges.transfer.download", "StringField", "SbgError", "open", "FileStorage", "sevenbridges.meta.resource", "LocalFileAlreadyExists", "sevenbridges.models.compound.files.download_info", "BasicListField", "tempfile"], "variables": ["origin_params", "metadata_params", "retry", "response", "files", "save", "offset", "FOLDER_TYPE", "logger", "modified_on", "__eq__", "parent", "storage", "names", "path", "modified_data", "project", "cls", "type", "metadata", "limit", "info", "content", "wait", "upload", "_URL", "created_on", "query", "dataset", "part_size", "self", "chunk_size", "stream", "bulk_delete", "move_to_folder", "download_info", "size", "timeout", "reload", "create_folder", "cont_token", "file_ids", "encoding", "file_name", "File", "copy", "FileBulkRecord", "tags", "bulk_edit", "inplace", "_secondary_files", "secondary_files", "query_params", "name", "silent", "list_files", "id", "__str__", "resource", "bulk_update", "bulk_get", "url", "is_folder", "origin", "new_file", "copy_to_folder", "data", "api", "extra", "href", "overwrite", "download"]}, {"author": "Dejan Knezevic", "path": "tests/providers.py", "imports": ["faker", "int", "len", "range", "re", "FileProvider", "str", "AutomationMemberProvider", "AutomationPackageProvider", "AutomationRunProvider", "time", "MemberProvider"], "variables": ["default_task", "href_no_parent", "can_be_retrieved_in_bulk", "task_can_be_run", "CodePackageUploadProvider", "location", "all_files", "tasks_in_project_for_parent", "DatasetProvider", "package_id", "automation_id", "upload_id", "files_exist_for_file_origin", "can_be_edited_in_bulk", "project", "prev_url", "can_create_folder", "task_execution_details_exist", "task_exists", "team", "query", "dataset", "ImportsProvider", "self", "default_async_job", "MarkerProvider", "result", "list_data", "id_", "created", "copy_result", "imports", "has_runs", "AutomationProvider", "permissions", "can_copy_files", "can_be_copied", "default_member", "name", "VolumeProvider", "volume_created", "all_tasks", "headers", "division", "modified", "finalized_upload", "id", "got_file_part", "default_export", "failed", "paginated_projects", "permissions_can_be_modified", "default_file", "AutomationPackageProvider", "default_automation_package", "exist", "schema", "response", "files_exist_for_file_metadata", "ActionProvider", "default_division", "import_", "version", "apps_exist_for_project", "tasks_exist_for_parent", "has_members", "can_be_modified", "apps_exist", "regx", "new_id", "files_exist_for_folder", "ProjectProvider", "items", "can_delete_files", "status_code", "rate", "AsyncJobProvider", "download_info_defined", "default_project", "EndpointProvider", "default_team", "task_can_be_clone", "part_size", "all_links", "default_marker", "json", "endpoints", "exports", "authenticated", "member", "file_id", "can_be_submitted", "default_user", "has_member", "links", "tags_can_be_saved", "file_", "can_copy_to_folder", "task", "prev", "tasks_exists_for_project", "TeamMemberProvider", "default_automation", "RateLimitProvider", "can_be_archived", "exists", "can_remove_member", "can_be_deleted_in_bulk", "has_rerun", "data", "href", "automation", "can_be_restored", "username", "user", "next_url", "has_packages", "marker", "package", "files_exist_for_project", "UserProvider", "teams_exist", "got_etag", "MemberProvider", "ExportsProvider", "async_job", "app_exists", "app", "can_add_member", "default_automation_member", "has_state", "app_can_be_copied", "execution_details", "feedback_set", "default_copy_result", "__init__", "total", "can_be_removed", "download_info", "list_url", "can_be_saved", "sub_items", "files_exist_for_file_tag", "app_with_revision_exists", "queried", "task_can_be_saved", "matcher", "state", "all_items", "default_import", "paginated_file_list", "initialized_upload", "limit_available", "revision_can_be_created", "default_volume", "status", "task_can_be_aborted", "members_exist", "can_be_stopped", "default_automation_run", "owned_by", "TeamProvider", "member_exist", "tasks_in_project", "list_file_jobs", "can_move_to_folder", "can_be_queried", "can_be_submitted_in_bulk", "num_of_files", "scroll", "FileProvider", "AutomationRunProvider", "parent", "email", "AppProvider", "automation_run", "folder_id", "can_be_updated_in_bulk", "automation_member", "can_move_files", "next_page_link", "default_state", "suffix", "defined", "can_add_package", "created_with_errors", "default_dataset", "owner", "DivisionProvider", "DRSImportProvider", "export", "app_can_be_installed", "deleted", "FileUploadProvider", "AutomationMemberProvider", "TaskProvider", "volume", "default_app", "can_bulk_copy", "files_in_folder", "default_rate", "can_be_created", "metadata_can_be_saved", "url", "files_exist_for_file_name", "reported_part", "app_exist_non_json", "has_package", "generator"]}, {"author": "Dejan Knezevic", "path": "tests/test_upload.py", "imports": ["faker", "Upload", "sevenbridges.errors", "TransferState", "pytest", "sevenbridges.transfer.upload", "sevenbridges.models.enums", "PartSize", "str", "open", "SbgError", "os"], "variables": ["project_id", "project_and_parent", "file_part_url", "no_project_or_parent", "upload_id", "test_file_upload_etag_failed", "test_file_size_too_large", "test_file_upload_stop", "upload", "test_file_upload_pause_failed", "file_id", "test_file_upload_resume", "result", "file_name", "test_file_upload_abort_failed", "test_file_upload_init_failed", "test_file_upload", "file_content", "test_file_upload_stop_failed", "test_file_upload_part_failed", "test_file_upload_finalize_failed", "api_instance", "test_file_upload_pause", "test_file_upload_resume_failed", "test_file_upload_wrong_path", "generator", "test_file_upload_start_failed"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/__init__.py", "imports": ["DRSImportBulk", "ServiceUnavailable", "Task", "Conflict", "Member", "AsyncJob", "Import", "MethodNotAllowed", "sevenbridges.models.async_jobs", "ExecutionDetailsInvalidTaskType", "ServerError", "ResourceNotModified", "VolumeType", "sevenbridges.models.user", "AutomationStatus", "sevenbridges.models.compound.volumes.volume_object", "Project", "Invoice", "BillingGroup", "sevenbridges.models.bulk", "sevenbridges.models.app", "AutomationPackage", "sevenbridges.models.dataset", "ImportExportState", "PartSize", "DivisionRole", "ValidationError", "Endpoints", "sevenbridges.models.automation", "Marker", "Dataset", "NotFound", "sevenbridges.errors", "logging", "sevenbridges.models.drs_import", "Division", "TaskValidationError", "AutomationRun", "sevenbridges.models.endpoints", "VolumeObject", "Config", "sevenbridges.models.storage_export", "TaskStatus", "sevenbridges.models.team", "__version__", "TeamMember", "SbgError", "Volume", "TransferState", "App", "sevenbridges.api", "AsyncFileOperations", "AsyncJobStates", "Export", "BulkRecord", "AppRawFormat", "sevenbridges.version", "BadRequest", "sevenbridges.models.project", "sevenbridges.models.volume", "Permissions", "sevenbridges.models.task", "Unauthorized", "VolumeAccessMode", "File", "Forbidden", "Team", "AutomationMember", "LocalFileAlreadyExists", "sevenbridges.models.file", "User", "sevenbridges.models.member", "sevenbridges.config", "RequestTimeout", "Automation", "sevenbridges.models.division", "sevenbridges.models.storage_import", "PaginationError", "ReadOnlyPropertyError", "sevenbridges.models.enums", "FileStorageType", "AutomationRunActions", "AppCopyStrategy", "TooManyRequests", "sevenbridges.models.invoice", "Api", "sevenbridges.models.marker", "ssl", "sevenbridges.models.billing_group"], "variables": ["required_ssl_version", "__all__"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/api.py", "imports": ["Actions", "DRSImportBulk", "sevenbridges.errors", "sevenbridges.models.drs_import", "Task", "Automation", "Export", "AsyncJob", "Import", "RateLimit", "sevenbridges.models.division", "RequestParameters", "sevenbridges.models.async_jobs", "Division", "requests.adapters", "AutomationRun", "sevenbridges.models.actions", "sevenbridges.models.endpoints", "ThreadPoolExecutor", "sevenbridges.models.user", "sevenbridges.models.storage_import", "sevenbridges.models.project", "Project", "Invoice", "BillingGroup", "sevenbridges.models.volume", "sevenbridges.models.app", "sevenbridges.models.enums", "AutomationPackage", "sevenbridges.models.dataset", "Dataset", "sevenbridges.models.storage_export", "sevenbridges.models.task", "concurrent.futures", "sevenbridges.models.team", "sevenbridges.models.invoice", "File", "super", "sevenbridges.models.marker", "HttpClient", "sevenbridges.http.client", "Team", "SbgError", "Volume", "Endpoints", "sevenbridges.models.automation", "Marker", "App", "sevenbridges.models.billing_group", "sevenbridges.models.file", "sevenbridges.models.rate_limit", "DEFAULT_POOLSIZE", "User"], "variables": ["drs_imports", "billing_groups", "files", "automation_runs", "proxies", "rate_limit", "teams", "tasks", "automations", "pool_connections", "max_parallel_requests", "backoff_factor", "datasets", "projects", "self", "__init__", "endpoints", "exports", "timeout", "automation_packages", "divisions", "markers", "imports", "actions", "Api", "invoices", "advance_access", "pool_block", "token", "users", "error_handlers", "debug", "apps", "volumes", "oauth_token", "url", "upload_max_workers", "retry_count", "download_max_workers", "pool_maxsize", "async_jobs", "config"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/decorators.py", "imports": ["NotFound", "ServiceUnavailable", "sevenbridges.errors", "logging", "RequestTimeout", "Conflict", "MethodNotAllowed", "NonJSONResponseError", "ServerError", "JSONDecodeError", "BadRequest", "requests", "json", "TooManyRequests", "Unauthorized", "copy", "func", "Forbidden", "SbgError", "functools", "method", "range", "str"], "variables": ["status_code", "throttle", "e", "response", "wrapped", "api_object", "wrapper", "inplace_reload", "logger", "check_for_error", "in_place", "data"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/http/client.py", "imports": ["sevenbridges", "sevenbridges.config", "maintenance_sleeper", "sevenbridges.errors", "logging", "mask_secrets", "sevenbridges.decorators", "len", "platform", "RequestParameters", "isinstance", "generate_session", "throttle", "requests", "Config", "json", "sevenbridges.models.enums", "float", "config_vars", "callable", "copy", "int", "datetime", "super", "URITooLong", "hasattr", "threading", "check_for_error", "RequestSession", "SbgError", "urllib3", "format_proxies", "getattr", "error_handler", "sevenbridges.http.error_handlers"], "variables": ["key", "verb", "retries", "response", "mask_secrets", "add_error_handler", "proxies", "send", "logger", "pool_connections", "AAHeader", "backoff_factor", "max_parallel_requests", "remaining", "generate_session", "limit", "handled_response", "request_id", "value", "client_info", "self", "stream", "__init__", "timeout", "_rate_limit", "__repr__", "config_vars", "reset_time", "append_base", "get", "post", "_request", "advance_access", "pool_block", "RequestSession", "aa", "HttpClient", "headers", "token", "delete", "masked_request_data", "error_handlers", "__str__", "put", "request_data", "adapter", "masked", "remove_error_handler", "oauth_token", "url", "retry_count", "pool_maxsize", "params", "data", "patch", "session", "config"]}, {"author": "Dejan Knezevic", "path": "sevenbridges/meta/resource.py", "imports": ["sevenbridges.errors", "logging", "sevenbridges.meta.fields", "RequestParameters", "sevenbridges.models.link", "sevenbridges.meta.transformer", "isinstance", "NonJSONResponseError", "cls", "type", "JSONDecodeError", "json", "sevenbridges.models.enums", "Transform", "copy", "hasattr", "SbgError", "Field", "Collection", "_data_diff", "getattr", "sevenbridges.meta.data", "sevenbridges.meta.collection", "str", "Link", "DataContainer"], "variables": ["deepcopy", "_set", "response", "field", "urls", "old_keys", "update_read_only", "logger", "modified_data", "__new__", "update_old", "equals", "cls", "items", "read_only_fields", "metadata", "inner_diff", "_URL", "query", "objtype", "Resource", "__init__", "total", "reload", "get", "links", "difference", "validated_value", "fields", "new_keys", "delete", "__get__", "ResourceMeta", "id", "_API", "_data_diff", "_query", "resource", "init", "url", "obj", "data", "api", "extra", "href"]}]
